{"version":3,"sources":["components/layout-components/PageHeaderAlt.js","views/app-views/dashboard/editProfile/index.js","views/app-views/dashboard/editProfile/CountrySelector.js"],"names":["connect","navType","theme","children","background","className","overlap","useState","widthOffset","setWidthOffset","ref","useRef","useEffect","NAV_TYPE_TOP","windowSize","window","innerWidth","pageHeaderSize","current","offsetWidth","style","backgroundImage","marginRight","marginLeft","paddingLeft","paddingRight","getStyle","Option","Select","EditProfile","userInfo","useSelector","state","auth","walletAddress","Form","useForm","form","options","useMemo","countryList","getData","updateLoading","setUpdateLoading","dispatch","useDispatch","setFieldsValue","name","country","division","team","onFinish","validateFields","then","values","console","log","updateUserInfo","message","info","catch","error","layout","PageHeaderAlt","Flex","mobileFlex","justifyContent","alignItems","type","htmlType","loading","justify","gutter","xs","sm","md","lg","title","Item","label","colon","rules","required","placeholder","allowClear","map","item","value"],"mappings":"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","file":"static/js/19.b22e4fee.chunk.js","sourcesContent":["import React, { useRef, useEffect, useState} from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from 'react-redux';\r\nimport { NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\n\r\nexport const PageHeaderAlt = ({children, background, className, overlap, navType}) => {\r\n\tconst [widthOffset, setWidthOffset] = useState(0)\r\n\tconst ref = useRef(null);\r\n\r\n  useEffect(() => {\r\n\t\tif (navType === NAV_TYPE_TOP) {\r\n\t\t\tconst windowSize = window.innerWidth\r\n\t\t\tconst pageHeaderSize = ref.current.offsetWidth\r\n\t\t\tsetWidthOffset( (windowSize - pageHeaderSize) / 2 )\r\n\t\t}\r\n\t}, [navType]);\r\n\t\r\n\tconst getStyle = () => {\r\n\t\tlet style = { backgroundImage: background ? `url(${background})` : 'none' } \r\n\t\tif (navType === NAV_TYPE_TOP) {\r\n\t\t\tstyle.marginRight = -widthOffset\r\n\t\t\tstyle.marginLeft = -widthOffset\r\n\t\t\tstyle.paddingLeft = 0\r\n\t\t\tstyle.paddingRight = 0\r\n\t\t}\r\n\t\treturn style\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tref={ref}\r\n\t\t\tclassName={`page-header-alt ${className ? className : ''} ${overlap && 'overlap'}`} \r\n\t\t\tstyle={getStyle()}\r\n\t\t>\r\n\t\t\t{navType === NAV_TYPE_TOP ? <div className=\"container\">{children}</div> : <>{children}</>}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nPageHeaderAlt.propTypes = {\r\n  children: PropTypes.node,\r\n\tbackground: PropTypes.string,\r\n\tclassName: PropTypes.string,\r\n\toverlap: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navType } =  theme;\r\n  return { navType }\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(PageHeaderAlt);","import React, {useEffect, useState, useMemo} from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport PageHeaderAlt from 'components/layout-components/PageHeaderAlt'\nimport Flex from 'components/shared-components/Flex'\nimport {updateUserInfo} from \"redux/actions/Auth\";\nimport { Row, Col, Button, Card, Avatar, Dropdown, Table, Menu, Tag, Form, Input, InputNumber, message, Select, } from 'antd';\nimport countryList from 'react-select-country-list'\nimport CountrySelector from './CountrySelector'\nconst { Option } = Select;\n\nconst EditProfile = () => {\n\tconst {userInfo} = useSelector(state => state.auth)\n\tconst walletAddress = userInfo && userInfo.walletAddress\n\tconst [form] = Form.useForm();\n\tconst options = useMemo(() => countryList().getData(), [])\n\tconst [updateLoading, setUpdateLoading] = useState(false)\n\tconst dispatch = useDispatch()\n\t\n\tconst onFinish = () => {\n\t\tsetUpdateLoading(true)\n\t\tform.validateFields().then(values => {\n\t\t\tconsole.log(values)\n\t\t\tdispatch(updateUserInfo({walletAddress, ...values}))\n\t\t\tsetUpdateLoading(false)\n\t\t\tmessage.info('수정되었습니다.')\n\t\t}).catch(info => {\n\t\t\tmessage.error(info);\n\t\t});\n\t}\n\n\t\n    useEffect(()=>{\n\t\tuserInfo &&form.setFieldsValue({\n\t\t\t\tname: userInfo.name,\n\t\t\t    country: userInfo.country,\n\t\t\t\tdivision: userInfo.division,\n\t\t\t\tteam : userInfo.team,\n\t\t\t});\n\t},[form, userInfo])\n\t\t\n\treturn (\n\t\t<>\t\t\n\t\t <Form  onFinish={onFinish} layout=\"vertical\" className=\"ant-advanced-search-form\" form={form} >\n\t\t\t<PageHeaderAlt className=\"border-bottom\" >\n\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t<Flex className=\"py-2\" mobileFlex={false} justifyContent=\"between\" alignItems=\"center\">\n\t\t\t\t\t\t\t<h2 className=\"mb-3\">Edit Profile</h2>\n\t\t\t\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t\t\t\t<Button type=\"primary\"  htmlType=\"submit\" loading={updateLoading}>\n\t\t\t\t\t\t\t\t\tUpdate\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Flex>\n\t\t\t\t\t</div>\n\t\t\t</PageHeaderAlt>\n\t\t<div className=\"container\">\n\t\t <Row  justify=\"center\" gutter={16}>\n       \t\t <Col xs={24} sm={24} md={24} lg={12}>\n\t\t\t\t <Card title=\"Basic Info\">\n\t\t\t\t\t<Form.Item name=\"name\" label=\"Name\" colon={false}\n\t\t\t\t\t\trules={[\n\t\t\t\t\t\t  {\n\t\t\t\t\t\t\trequired: false,\n\t\t\t\t\t\t\tmessage: 'Please input your username!',\n\t\t\t\t\t\t  },\n\t\t\t\t\t\t]}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t<Input  />\n\t\t\t\t\t</Form.Item>\t\n\t\t\t\t\t <Form.Item name=\"country\" label=\"Country\" colon={false}>  \n\t\t\t\t\t\t <Select placeholder=\"Select a option\" allowClear>\n\t\t\t\t\t\t\t\t   {options.map((item)=>{\n\t\t\t\t\t\t\t\t\t return <Option key={item.value} value={item.value}>{item.label}</Option>\n\t\t\t\t\t\t\t\t  })}\n\t\t\t\t\t\t</Select>\t  \n\t\t\t\t\t</Form.Item>\t\t\n\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\tname=\"division\"\n\t\t\t\t\t\t\tlabel=\"Division\"\n\t\t\t\t\t\t\trules={[\n\t\t\t\t\t\t\t  {\n\t\t\t\t\t\t\t\trequired: false,\n\t\t\t\t\t\t\t  },\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t  >\n\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t  placeholder=\"Select a option\"\n\t\t\t\t\t\t\t  allowClear\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t  <Option value=\"Men +80kg\">Men +80kg</Option>\n\t\t\t\t\t\t\t  <Option value=\"Men -80kg\">Men -80kg</Option>\n\t\t\t\t\t\t\t  <Option value=\"Men -68kg\">Men -68kg</Option>\n\t\t\t\t\t\t\t  <Option value=\"Men -58kg\">Men -58kg</Option>\n\t\t\t\t\t\t\t  <Option value=\"Women +67kg\">Women +67kg</Option>\n\t\t\t\t\t\t\t  <Option value=\"Women -67kg\">Women -67kg</Option>\n\t\t\t\t\t\t\t  <Option value=\"Women -57kg\">Women -57kg</Option>\n\t\t\t\t\t\t\t  <Option value=\"Women -49kg\">Women -49kg</Option>\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t </Form.Item>\n\t\t\t\t\t <Form.Item name=\"team\" label=\"Team\" colon={false}>  \n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t  placeholder=\"Select a option\"\n\t\t\t\t\t\t\t  allowClear\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t  <Option value=\"태권도협동조합\">태권도협동조합</Option>\n\t\t\t\t\t\t\t  <Option value=\"none\">none</Option>\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t</Form.Item>\n\t\t\t\t </Card>\n\t\t\t </Col> \n          </Row>\n\t\t</div>\t\t\t\n\t\t</Form>\t\n\t\t</>\n\t)\n}\n\nexport default EditProfile\n","import React, { useState, useMemo } from 'react'\nimport { Select } from 'antd';\nimport countryList from 'react-select-country-list'\n\nconst { Option } = Select;\n\nconst CountrySelector = (props) => {\n\tconsole.log(props)\n  const options = useMemo(() => countryList().getData(), [])\n  return (\n  <Select placeholder=\"Select a option\" allowClear>\n\t\t   {options.map((item)=>{\n\t\t\t return <Option key={item.value} value={item.value}>{item.label}</Option>\n\t\t  })}\n</Select>\t  \n  )\n}\n\nexport default CountrySelector"],"sourceRoot":""}