{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/objectSpread.js","../node_modules/react-instantsearch-core/dist/es/core/utils.js","../node_modules/algoliasearch-helper/src/functions/merge.js","../node_modules/algoliasearch-helper/src/functions/find.js","../node_modules/react-instantsearch-core/dist/es/core/indexUtils.js","../node_modules/react-instantsearch-core/dist/es/core/createConnector.js","../node_modules/algoliasearch-helper/src/functions/defaultsPure.js","../node_modules/algoliasearch-helper/src/functions/omit.js","../node_modules/algoliasearch-helper/src/functions/objectHasKeys.js","../node_modules/react-fast-compare/index.js","../node_modules/react-instantsearch-core/dist/es/core/context.js","../node_modules/algoliasearch/dist/algoliasearch-lite.umd.js","../node_modules/algoliasearch-helper/src/SearchParameters/index.js","../node_modules/algoliasearch-helper/src/SearchResults/index.js","../node_modules/algoliasearch-helper/src/functions/orderBy.js","../node_modules/algoliasearch-helper/src/functions/formatSort.js","../node_modules/algoliasearch-helper/src/functions/inherits.js","../node_modules/algoliasearch-helper/src/version.js","../node_modules/algoliasearch-helper/index.js","../node_modules/algoliasearch-helper/src/algoliasearch.helper.js","../node_modules/algoliasearch-helper/src/functions/intersection.js","../node_modules/algoliasearch-helper/src/functions/valToNumber.js","../node_modules/algoliasearch-helper/src/utils/isValidUserToken.js","../node_modules/algoliasearch-helper/src/SearchParameters/RefinementList.js","../node_modules/algoliasearch-helper/src/functions/compact.js","../node_modules/algoliasearch-helper/src/functions/findIndex.js","../node_modules/algoliasearch-helper/src/SearchResults/generate-hierarchical-tree.js","../node_modules/algoliasearch-helper/src/DerivedHelper/index.js","../node_modules/algoliasearch-helper/src/requestBuilder.js","../node_modules/react-instantsearch-core/dist/es/connectors/connectSearchBox.js","../node_modules/react-instantsearch-core/dist/es/connectors/connectHits.js","../node_modules/react-instantsearch-core/dist/es/core/highlight.js","../node_modules/react-instantsearch-core/dist/es/core/createInstantSearchManager.js","../node_modules/react-instantsearch-core/dist/es/core/version.js","../node_modules/react-instantsearch-core/dist/es/core/createWidgetsManager.js","../node_modules/react-instantsearch-core/dist/es/core/createStore.js","../node_modules/react-instantsearch-core/dist/es/widgets/InstantSearch.js"],"names":["_objectSpread","target","i","arguments","length","source","Object","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","shallowEqual","objA","objB","keysA","keysB","hasOwn","prototype","hasOwnProperty","call","getDisplayName","Component","displayName","name","resolved","Promise","resolve","defer","f","then","removeEmptyKey","obj","object","value","_typeof","Array","isArray","isPlainObject","addAbsolutePositions","hits","hitsPerPage","page","map","hit","index","__position","addQueryID","queryID","__queryID","omit","excluded","undefined","sourceKeys","_key","indexOf","getPropertyByPath","path","replace","split","reduce","current","isObjectOrArrayOrFunction","toString","_merge","sourceVal","targetVal","module","exports","l","array","comparator","getIndexId","context","hasMultipleIndices","multiIndexContext","targetedIndex","ais","mainTargetedIndex","getResults","searchResults","results","indexId","refineValue","searchState","nextRefinement","resetPage","namespace","_objectSpread4","state","indices","_defineProperty","refineMultiIndexWithNamespace","refineMultiIndex","refineSingleIndexWithNamespace","refineSingleIndex","getNamespaceAndAttributeName","id","parts","match","attributeName","getCurrentRefinementValue","props","defaultValue","_getNamespaceAndAttri","args","multiIndex","_ref","hasRefinements","_ref2","getRefinements","defaultRefinement","cleanUpValue","_getNamespaceAndAttri2","Boolean","_ref4","attribute","indexSearchState","cleanUpValueWithMultiIndex","_ref3","cleanUpValueWithSingleIndex","createConnectorWithContext","connectorDesc","Composed","Connector","Error","isWidget","getSearchParameters","getMetadata","transitionState","_Component","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","_assertThisInitialized","providedProps","getProvidedProps","_len","contextValue","onInternalStateUpdate","refine","apply","store","getState","widgets","_len2","_key2","createHrefForState","_len3","_key3","onSearchForFacetValues","searchForFacetValues","onSearchParameters","bind","indexContextValue","_inherits","_createClass","_this2","unsubscribe","subscribe","isUnmounting","setState","unregisterWidget","widgetsManager","registerWidget","nextProps","nextState","shouldComponentUpdate","propsEqual","prevProps","isEqual","update","onSearchStateChange","cleanUp","_this$props$contextVa","resultsFacetValues","searching","searchingForFacetValues","isSearchStalled","metadata","error","searchParameters","nextWidgetsState","prevWidgetsState","_this$props","_objectWithoutProperties","refineProps","createURL","searchForFacetValuesProps","searchForItems","React","createElement","_extends","propTypes","defaultProps","createConnectorWithoutContext","InstantSearchConsumer","IndexConsumer","sources","slice","reduceRight","acc","hasElementType","Element","hasMap","Map","hasSet","Set","hasArrayBuffer","ArrayBuffer","isView","equal","a","b","constructor","it","size","entries","next","done","has","get","RegExp","flags","valueOf","$$typeof","message","console","warn","instantSearchContext","createContext","Consumer","InstantSearchProvider","Provider","_createContext","e","t","r","defineProperty","configurable","writable","n","push","o","getOwnPropertyDescriptors","defineProperties","propertyIsEnumerable","Symbol","iterator","u","return","TypeError","from","localStorage","window","JSON","parse","getItem","miss","stringify","all","set","setItem","delete","clear","removeItem","caches","shift","catch","s","serializable","c","Math","floor","random","encodeURIComponent","h","WithinQueryParameters","WithinHeaders","d","data","timeout","headers","queryParameters","cacheable","m","Read","Write","Any","p","v","y","g","status","lastUpdate","Date","now","protocol","url","accept","O","P","q","getTimeout","statelessHosts","j","method","toLowerCase","userAgent","pop","transporterStackTrace","A","S","connectTimeout","timeouts","connect","responseTimeout","request","response","host","triesLeft","onSuccess","content","onRetry","isTimedOut","logger","info","x","hostsCache","onFail","requester","send","reverse","w","add","segment","version","T","charAt","substr","join","N","appId","authMode","apiKey","requestsCache","responsesCache","hosts","read","mappedRequestOptions","transporter","reject","write","addAlgoliaAgent","clearCache","methods","C","indexName","k","params","requests","J","facetName","facetQuery","F","E","query","queryLanguages","I","R","D","W","H","XMLHttpRequest","open","setRequestHeader","setTimeout","abort","onreadystatechange","readyState","OPENED","clearTimeout","onerror","responseText","onload","debug","search","multipleQueries","multipleSearchForFacetValues","initIndex","findAnswers","merge","require","defaultsPure","intersection","find","valToNumber","objectHasKeys","isValidUserToken","RefinementList","isEqualNumericRefinement","every","el","SearchParameters","newParameters","_parseNumbers","userToken","facets","disjunctiveFacets","hierarchicalFacets","facetsRefinements","facetsExcludes","disjunctiveFacetsRefinements","numericRefinements","tagRefinements","hierarchicalFacetsRefinements","self","paramName","isKeyKnown","PARAMETERS","isValueDefined","partialState","numbers","parsedValue","parseFloat","isNaN","insideBoundingBox","geoRect","operators","operator","parsedValues","vPrime","make","instance","facet","rootPath","currentRefinement","getHierarchicalRefinement","clearRefinements","toggleHierarchicalFacetRefinement","validate","currentState","parameters","tagFilters","numericFilters","patch","_clearNumericRefinements","clearRefinement","setQueryParameters","clearTags","setIndex","setQuery","newQuery","setPage","newPage","setFacets","setDisjunctiveFacets","setHitsPerPage","setTypoTolerance","typoTolerance","addNumericRefinement","isNumericRefined","mod","getConjunctiveRefinements","isConjunctiveFacet","getDisjunctiveRefinements","isDisjunctiveFacet","getExcludeRefinements","removeNumericRefinement","paramValue","op","val","getNumericRefinements","getNumericRefinement","hasChanged","newNumericRefinements","memo","operatorList","values","outValues","addFacet","addDisjunctiveFacet","addHierarchicalFacet","hierarchicalFacet","isHierarchicalFacet","addFacetRefinement","isRefined","addRefinement","addExcludeRefinement","addDisjunctiveFacetRefinement","addTagRefinement","tag","isTagRefined","modification","removeFacet","removeDisjunctiveFacet","removeHierarchicalFacet","removeFacetRefinement","removeRefinement","removeExcludeRefinement","removeDisjunctiveFacetRefinement","removeTagRefinement","toggleRefinement","toggleFacetRefinement","toggleConjunctiveFacetRefinement","toggleDisjunctiveFacetRefinement","toggleExcludeFacetRefinement","separator","_getHierarchicalFacetSeparator","getHierarchicalFacetByName","lastIndexOf","addHierarchicalFacetRefinement","isHierarchicalFacetRefined","removeHierarchicalFacetRefinement","toggleTagRefinement","isFacetRefined","isExcludeRefined","isDisjunctiveFacetRefined","refinements","isOperatorDefined","searchedValue","isAttributeValueDefined","currentValue","getRefinedDisjunctiveFacets","disjunctiveNumericRefinedFacets","getRefinedHierarchicalFacets","getUnrefinedDisjunctiveFacets","refinedFacets","managedParameters","getQueryParams","queryParams","setQueryParameter","parameter","nextWithNumbers","previousPlainObject","nextPlainObject","previous","isPreviousValueDefined","isNextValueDefined","_getHierarchicalFacetSortBy","sortBy","_getHierarchicalRootPath","_getHierarchicalShowParentLevel","showParentLevel","hierarchicalFacetName","getHierarchicalFacetBreadcrumb","refinement","part","trim","orderBy","compact","findIndex","formatSort","generateHierarchicalTree","getIndices","attributes","idx","assignFacetStats","dest","facetStats","stats","SearchResults","mainSubResponse","_rawResults","processingTimeMS","sum","result","facetsIndices","disjunctiveFacetsIndices","nextDisjunctiveResult","mainFacets","facetKey","hierarchicalAttributeName","facetValueObject","facetIndex","idxAttributeName","exhaustive","exhaustiveFacetsCount","position","isFacetDisjunctive","isFacetConjunctive","facets_stats","disjunctiveFacet","dfacet","facetResults","attributeIndex","dataFromMainRequest","refinementValue","refinedFacet","defaultData","root","excludes","facetValue","_state","recSort","sortFn","node","children","childNode","sortedChildren","getFacetStatsIfAvailable","facetList","getRefinement","type","resultsFacets","count","getFacetByName","predicate","DEFAULT_SORT","getFacetValues","opts","facetValues","isExcluded","extractNormalizedFacetValues","options","order","hierarchicalFacetValues","sort","vanillaSortFn","getFacetStats","res","facetDeclaration","rootFacet","intermediateFacet","newFacet","numericValue","compareAscending","other","valIsDefined","valIsNull","othIsDefined","othIsNull","collection","iteratees","orders","criteria","iteratee","defaults","defaultInstructions","out","sortInstruction","matchingDefault","defaultInstruction","ctor","superCtor","create","AlgoliaSearchHelper","algoliasearchHelper","client","DerivedHelper","requestBuilder","events","inherits","setClient","lastResults","_queryId","_lastQueryIdReceived","derivedHelpers","_currentNbQueries","setCurrentPage","_change","isPageReset","getCurrentPage","EventEmitter","_search","onlyWithDerivedHelpers","searchOnlyWithDerivedHelpers","getQuery","_getHitsSearchParams","searchOnce","cb","tempState","queries","_getQueries","emit","_originalResponse","err","derivedHelper","derivedState","getModifiedState","attributesForPrediction","nbHits","errorMessage","maxFacetHits","userState","clientHasSFFV","isDisjunctive","algoliaQuery","getSearchForFacetQuery","facetHits","addDisjunctiveRefine","addRefine","addFacetExclusion","addExclude","addTag","removeDisjunctiveRefine","removeRefine","removeFacetExclusion","removeExclude","removeTag","toggleFacetExclusion","toggleExclude","toggleRefine","toggleTag","nextPage","previousPage","newState","overrideStateWithoutTriggeringChangeEvent","isDisjunctiveRefined","hasTag","hasTagRefinements","getIndex","getPage","getTags","states","mainQueries","queriesCount","helper","derivedQueries","derivedStateQueries","queryId","_dispatchAlgoliaResponse","_dispatchAlgoliaError","specificResults","splice","formattedResponse","containsRefinement","facetFilters","_hasDisjunctiveRefinements","disjunctiveRefinements","event","newClient","getClient","derive","fn","detachDerivedHelper","pos","hasPendingRequests","arr1","arr2","test","lib","refinementList","valueAsString","facetRefinement","refinementType","newRefinementList","containsRefinements","refinementValueAsString","hierarchicalFacetResult","hierarchicalFacetIndex","hierarchicalFacetRefinement","hierarchicalSeparator","hierarchicalRootPath","hierarchicalShowParentLevel","prepareHierarchicalFacetSortBy","rootExhaustive","facetResult","generateTreeFn","hierarchicalTree","currentHierarchicalLevel","parent","level","subtree","picked","tuple","parentPath","onlyMatchingTree","facetCount","format","mainHelper","main","detach","removeAllListeners","_getDisjunctiveFacetSearchParams","_getHitsHierarchicalFacetsAttributes","_getFacetFilters","_getNumericFilters","additionalParams","_getTagFilters","hierarchicalRootLevel","attributesToRetrieve","attributesToHighlight","attributesToSnippet","analytics","clickAnalytics","_getDisjunctiveHierarchicalFacetAttribute","vs","orFilters","attributeToRefine","attributesIndex","allAttributes","hierarchicalRefinement","newAttributes","rootLevel","parentLevel","stateForSearchForFacetValues","searchForFacetSearchParameters","getCurrentRefinement","_refine","nextValue","createConnector","PropTypes","string","_cleanUp","items","label","hitsWithPositions","HIGHLIGHT_TAGS","highlightPreTag","highlightPostTag","addAlgoliaAgents","searchClient","ReactVersion","isMultiIndexContext","widget","isTargetedIndexEqualIndex","isIndexWidget","isIndexWidgetEqualIndex","sortIndexWidgetsFirst","firstWidget","secondWidget","isFirstWidgetIndex","isSecondWidgetIndex","serializeQueryParameters","encode","createInstantSearchManager","_ref$initialState","initialState","resultsState","stalledSearchDelay","on","stalledSearchTimer","_store$getState","handleSearchSuccess","handleSearchError","skip","initialSearchParameters","onWidgetsUpdate","scheduled","scheduleUpdate","getWidgets","createWidgetsManager","_cacheHydrated","_useCache","baseMethod","methodArgs","requestsWithSerializedParams","rawResults","cache","hydrateSearchClientWithMultiIndexRequest","hydrateSearchClientWithSingleIndexRequest","hydrateSearchClient","listeners","listener","createStore","hydrateMetadata","_internalIndexId","hydrateResultsState","sharedParameters","mainParameters","targetedIndexEqualMainIndex","subIndexEqualMainIndex","derivedIndices","targetedIndexNotEqualMainIndex","subIndexNotEqualMainIndex","derivedParameters","_getSearchParameters","isDerivedHelpersEmpty","nextIsSearchStalled","getWidgetsIds","meta","_ref5","_ref5$maxFacetHits","maxFacetHitsWithinRange","max","min","_objectSpread7","onExternalStateUpdate","nextSearchState","updateClient","updateIndex","newIndex","skipSearch","datum","item","nestedItem","isControlled","InstantSearch","instantSearchManager","onWidgetsInternalStateUpdate","prevState","nextIsControlled","previousSearchState","prevIsControlled","refresh","getKnownKeys","_searchState","widgetsCollector","_searchState2","Children","isRequired","shape","func","bool","oneOfType","number"],"mappings":";mGAAA,6CACe,SAASA,EAAcC,GACpC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaI,OAAOH,UAAUD,IAAM,GACvDK,EAAUD,OAAOE,KAAKH,GAEkB,oBAAjCC,OAAOG,wBAChBF,EAAUA,EAAQG,OAAOJ,OAAOG,sBAAsBJ,GAAQM,QAAO,SAAUC,GAC7E,OAAON,OAAOO,yBAAyBR,EAAQO,GAAKE,gBAIxDP,EAAQQ,SAAQ,SAAUC,GACxB,YAAef,EAAQe,EAAKX,EAAOW,OAIvC,OAAOf,I,kCCjBT,sSAGWgB,EAAe,SAAsBC,EAAMC,GACpD,GAAID,IAASC,EACX,OAAO,EAGT,IAAIC,EAAQd,OAAOE,KAAKU,GACpBG,EAAQf,OAAOE,KAAKW,GAExB,GAAIC,EAAMhB,SAAWiB,EAAMjB,OACzB,OAAO,EAMT,IAFA,IAAIkB,EAAShB,OAAOiB,UAAUC,eAErBtB,EAAI,EAAGA,EAAIkB,EAAMhB,OAAQF,IAChC,IAAKoB,EAAOG,KAAKN,EAAMC,EAAMlB,KAAOgB,EAAKE,EAAMlB,MAAQiB,EAAKC,EAAMlB,IAChE,OAAO,EAIX,OAAO,GAEEwB,EAAiB,SAAwBC,GAClD,OAAOA,EAAUC,aAAeD,EAAUE,MAAQ,oBAEhDC,EAAWC,QAAQC,UACZC,EAAQ,SAAeC,GAChCJ,EAASK,KAAKD,IAOLE,EAAiB,SAASA,EAAeC,GAclD,OAbA/B,OAAOE,KAAK6B,GAAKtB,SAAQ,SAAUC,GACjC,IAuD0BsB,EAvDtBC,EAAQF,EAAIrB,IANA,SAAuBuB,GACzC,MAA0B,WAAnBC,YAAQD,IAAiC,OAAVA,IAAmBE,MAAMC,QAAQH,IAOhEI,CAAcJ,MAqDOD,EAjDPC,IAkDJjC,OAAOE,KAAK8B,GAAQlC,OAAS,EA/C1CgC,EAAeG,UAFRF,EAAIrB,OAKRqB,GAYF,SAASO,EAAqBC,EAAMC,EAAaC,GACtD,OAAOF,EAAKG,KAAI,SAAUC,EAAKC,GAC7B,OAAOlD,YAAc,GAAIiD,EAAK,CAC5BE,WAAYL,EAAcC,EAAOG,EAAQ,OAIxC,SAASE,EAAWP,EAAMQ,GAC/B,OAAKA,EAIER,EAAKG,KAAI,SAAUC,GACxB,OAAOjD,YAAc,GAAIiD,EAAK,CAC5BK,UAAWD,OALNR,EA0BJ,SAASU,EAAKlD,EAAQmD,GAC3B,GAAe,OAAXnD,QAA8BoD,IAAXpD,EACrB,MAAO,GAMT,IAHA,IAAIJ,EAAS,GACTyD,EAAapD,OAAOE,KAAKH,GAEpBH,EAAI,EAAGA,EAAIwD,EAAWtD,OAAQF,IAAK,CAC1C,IAAIyD,EAAOD,EAAWxD,GAElBsD,EAASI,QAAQD,IAAS,IAK9B1D,EAAO0D,GAAQtD,EAAOsD,IAGxB,OAAO1D,EAoBF,IAAI4D,EAAoB,SAA2BvB,EAAQwB,GAChE,OAAQrB,MAAMC,QAAQoB,GAAQA,EAAOA,EAAKC,QAAQ,YAAa,OAAOC,MAAM,MAAMC,QAAO,SAAUC,EAASlD,GAC1G,OAAOkD,EAAUA,EAAQlD,QAAOyC,IAC/BnB,K,kCCpIL,SAAS6B,EAA0B5B,GACjC,MACmB,oBAAVA,GACPE,MAAMC,QAAQH,IAC4B,oBAA1CjC,OAAOiB,UAAU6C,SAAS3C,KAAKc,GAInC,SAAS8B,EAAOpE,EAAQI,GACtB,GAAIJ,IAAWI,EACb,OAAOJ,EAGT,IAAK,IAAIe,KAAOX,EACd,GAAKC,OAAOiB,UAAUC,eAAeC,KAAKpB,EAAQW,GAAlD,CAIA,IAAIsD,EAAYjE,EAAOW,GACnBuD,EAAYtE,EAAOe,GAEE,qBAAduD,GAAkD,qBAAdD,IAI3CH,EAA0BI,IAAcJ,EAA0BG,GACpErE,EAAOe,GAAOqD,EAAOE,EAAWD,GAEhCrE,EAAOe,GAlCU,kBADRuB,EAmCW+B,IAlCmB,OAAV/B,EACxB8B,EAAO5B,MAAMC,QAAQH,GAAS,GAAK,GAAIA,GAEzCA,GAJT,IAAeA,EAsCb,OAAOtC,EAkCTuE,EAAOC,QAfP,SAAexE,GACRkE,EAA0BlE,KAC7BA,EAAS,IAGX,IAAK,IAAIC,EAAI,EAAGwE,EAAIvE,UAAUC,OAAQF,EAAIwE,EAAGxE,IAAK,CAChD,IAAIG,EAASF,UAAUD,GAEnBiE,EAA0B9D,IAC5BgE,EAAOpE,EAAQI,GAGnB,OAAOJ,I,kCCpETuE,EAAOC,QAAU,SAAcE,EAAOC,GACpC,GAAKnC,MAAMC,QAAQiC,GAInB,IAAK,IAAIzE,EAAI,EAAGA,EAAIyE,EAAMvE,OAAQF,IAChC,GAAI0E,EAAWD,EAAMzE,IACnB,OAAOyE,EAAMzE,K,kCCVnB,2OAGO,SAAS2E,EAAWC,GACzB,OAAOC,EAAmBD,GAAWA,EAAQE,kBAAkBC,cAAgBH,EAAQI,IAAIC,kBAEtF,SAASC,EAAWC,EAAeP,GACxC,GAAIO,EAAcC,QAAS,CACzB,GAAID,EAAcC,QAAQzC,KACxB,OAAOwC,EAAcC,QAGvB,IAAIC,EAAUV,EAAWC,GAEzB,GAAIO,EAAcC,QAAQC,GACxB,OAAOF,EAAcC,QAAQC,GAIjC,OAAO,KAEF,SAASR,EAAmBD,GACjC,OAAOA,GAAWA,EAAQE,kBAGrB,SAASQ,EAAYC,EAAaC,EAAgBZ,EAASa,EAAWC,GAC3E,GAAIb,EAAmBD,GAAU,CAC/B,IAAIS,EAAUV,EAAWC,GACzB,OAAOc,EAyCX,SAAuCH,EAAaC,EAAgBH,EAASI,EAAWC,GACtF,IAAIC,EAEA9C,EAAO4C,EAAY,CACrB5C,KAAM,QACJU,EACAqC,EAAQL,EAAYM,SAAWN,EAAYM,QAAQR,GAAWvF,YAAc,GAAIyF,EAAYM,QAASC,YAAgB,GAAIT,EAASvF,YAAc,GAAIyF,EAAYM,QAAQR,IAAWM,EAAiB,GAAIG,YAAgBH,EAAgBD,EAAW5F,YAAc,GAAIyF,EAAYM,QAAQR,GAASK,GAAYF,IAAkBM,YAAgBH,EAAgB,OAAQ,GAAIA,MAAqB7F,YAAc,GAAIyF,EAAYM,QAASC,YAAgB,GAAIT,EAASvF,YAAcgG,YAAgB,GAAIJ,EAAWF,GAAiB3C,KACvgB,OAAO/C,YAAc,GAAIyF,EAAa,CACpCM,QAASD,IAjDUG,CAA8BR,EAAaC,EAAgBH,EAASI,EAAWC,GAuBtG,SAA0BH,EAAaC,EAAgBH,EAASI,GAC9D,IAAI5C,EAAO4C,EAAY,CACrB5C,KAAM,QACJU,EACAqC,EAAQL,EAAYM,SAAWN,EAAYM,QAAQR,GAAWvF,YAAc,GAAIyF,EAAYM,QAASC,YAAgB,GAAIT,EAASvF,YAAc,GAAIyF,EAAYM,QAAQR,GAAUG,EAAgB3C,KAAU/C,YAAc,GAAIyF,EAAYM,QAASC,YAAgB,GAAIT,EAASvF,YAAc,GAAI0F,EAAgB3C,KACtT,OAAO/C,YAAc,GAAIyF,EAAa,CACpCM,QAASD,IA7BsGI,CAAiBT,EAAaC,EAAgBH,EAASI,GAmBtK,OAZIF,EAAYM,SAAWJ,GACzBrF,OAAOE,KAAKiF,EAAYM,SAAShF,SAAQ,SAAUkE,GACjDQ,EAAcD,EAAYC,EAAa,CACrC1C,KAAM,GACL,CACDiC,kBAAmB,CACjBC,cAAeA,KAEhB,EAAMW,MAINA,EAkCX,SAAwCH,EAAaC,EAAgBC,EAAWC,GAC9E,IAAI7C,EAAO4C,EAAY,CACrB5C,KAAM,QACJU,EACJ,OAAOzD,YAAc,GAAIyF,EAAaO,YAAgB,GAAIJ,EAAW5F,YAAc,GAAIyF,EAAYG,GAAYF,IAAkB3C,GAtC5GoD,CAA+BV,EAAaC,EAAgBC,EAAWC,GAc9F,SAA2BH,EAAaC,EAAgBC,GACtD,IAAI5C,EAAO4C,EAAY,CACrB5C,KAAM,QACJU,EACJ,OAAOzD,YAAc,GAAIyF,EAAaC,EAAgB3C,GAlBmDqD,CAAkBX,EAAaC,EAAgBC,GAyC1J,SAASU,EAA6BC,GACpC,IAAIC,EAAQD,EAAGE,MAAM,kBAGrB,MAAO,CACLZ,UAHcW,GAASA,EAAM,GAI7BE,cAHkBF,GAASA,EAAM,IAqD9B,SAASG,EAA0BC,EAAOlB,EAAaX,EAASwB,EAAIM,GACzE,IAAIrB,EAAUV,EAAWC,GAErB+B,EAAwBR,EAA6BC,GACrDV,EAAYiB,EAAsBjB,UAClCa,EAAgBI,EAAsBJ,cAGtCK,EAAO,CACTC,WAFehC,EAAmBD,GAGlCS,QAASA,EACTK,UAAWA,EACXa,cAAeA,EACfH,GAAIA,EACJb,YAAaA,GAIf,OAhEF,SAAwBuB,GACtB,IAAID,EAAaC,EAAKD,WAClBxB,EAAUyB,EAAKzB,QACfK,EAAYoB,EAAKpB,UACjBa,EAAgBO,EAAKP,cACrBH,EAAKU,EAAKV,GACVb,EAAcuB,EAAKvB,YAEvB,OAAIsB,GAAcnB,EACTH,EAAYM,SAAWN,EAAYM,QAAQR,IAAYE,EAAYM,QAAQR,GAASK,IAActF,OAAOkB,eAAeC,KAAKgE,EAAYM,QAAQR,GAASK,GAAYa,GAG3KM,EACKtB,EAAYM,SAAWN,EAAYM,QAAQR,IAAYjF,OAAOkB,eAAeC,KAAKgE,EAAYM,QAAQR,GAAUe,GAGrHV,EACKH,EAAYG,IAActF,OAAOkB,eAAeC,KAAKgE,EAAYG,GAAYa,GAG/EnG,OAAOkB,eAAeC,KAAKgE,EAAaa,GA0CrBW,CAAeH,GAvC3C,SAAwBI,GACtB,IAAIH,EAAaG,EAAMH,WACnBxB,EAAU2B,EAAM3B,QAChBK,EAAYsB,EAAMtB,UAClBa,EAAgBS,EAAMT,cACtBH,EAAKY,EAAMZ,GACXb,EAAcyB,EAAMzB,YAExB,OAAIsB,GAAcnB,EACTH,EAAYM,QAAQR,GAASK,GAAWa,GAG7CM,EACKtB,EAAYM,QAAQR,GAASe,GAGlCV,EACKH,EAAYG,GAAWa,GAGzBhB,EAAYa,GAsBVa,CAAeL,GAGpBH,EAAMS,kBACDT,EAAMS,kBAGRR,EAEF,SAASS,EAAa5B,EAAaX,EAASwB,GACjD,IAAIf,EAAUV,EAAWC,GAErBwC,EAAyBjB,EAA6BC,GACtDV,EAAY0B,EAAuB1B,UACnCa,EAAgBa,EAAuBb,cAE3C,OAAI1B,EAAmBD,IAAYyC,QAAQ9B,EAAYM,SA+BzD,SAAoCyB,GAClC,IAAI/B,EAAc+B,EAAM/B,YACpBF,EAAUiC,EAAMjC,QAChBe,EAAKkB,EAAMlB,GACXV,EAAY4B,EAAM5B,UAClB6B,EAAYD,EAAMC,UAClBC,EAAmBjC,EAAYM,QAAQR,GAE3C,GAAIK,GAAa8B,EACf,OAAO1H,YAAc,GAAIyF,EAAa,CACpCM,QAAS/F,YAAc,GAAIyF,EAAYM,QAASC,YAAgB,GAAIT,EAASvF,YAAc,GAAI0H,EAAkB1B,YAAgB,GAAIJ,EAAWrC,YAAKmE,EAAiB9B,GAAY,CAAC6B,UAIvL,GAAIC,EACF,OAAO1H,YAAc,GAAIyF,EAAa,CACpCM,QAAS/F,YAAc,GAAIyF,EAAYM,QAASC,YAAgB,GAAIT,EAAShC,YAAKmE,EAAkB,CAACpB,QAIzG,OAAOb,EAlDEkC,CAA2B,CAChCF,UAAWhB,EACXhB,YAAaA,EACbF,QAASA,EACTe,GAAIA,EACJV,UAAWA,IAYjB,SAAqCgC,GACnC,IAAInC,EAAcmC,EAAMnC,YACpBa,EAAKsB,EAAMtB,GACXV,EAAYgC,EAAMhC,UAClB6B,EAAYG,EAAMH,UAEtB,GAAI7B,EACF,OAAO5F,YAAc,GAAIyF,EAAaO,YAAgB,GAAIJ,EAAWrC,YAAKkC,EAAYG,GAAY,CAAC6B,MAGrG,OAAOlE,YAAKkC,EAAa,CAACa,IAlBnBuB,CAA4B,CACjCJ,UAAWhB,EACXhB,YAAaA,EACba,GAAIA,EACJV,UAAWA,M,kCCjMf,6IAuRekC,IAnBkB,SAAoCC,GACnE,OAAO,SAAUC,GACf,IAAIC,EA7OD,SAAuCF,GAC5C,IAAKA,EAAcnG,YACjB,MAAM,IAAIsG,MAAM,uEAGlB,IAAIC,EAAwD,oBAAtCJ,EAAcK,qBAA2E,oBAA9BL,EAAcM,aAAuE,oBAAlCN,EAAcO,gBAClJ,OAAO,SAAUN,GACf,IAAIC,EAEJ,SAAUM,GAGR,SAASN,EAAUtB,GACjB,IAAI6B,EAwDJ,OAtDAC,YAAgBC,KAAMT,GAEtBO,EAAQG,YAA2BD,KAAME,YAAgBX,GAAWxG,KAAKiH,KAAM/B,IAE/EX,YAAgB6C,YAAuBL,GAAQ,mBAAe,GAE9DxC,YAAgB6C,YAAuBL,GAAQ,wBAAoB,GAEnExC,YAAgB6C,YAAuBL,GAAQ,gBAAgB,GAE/DxC,YAAgB6C,YAAuBL,GAAQ,QAAS,CACtDM,cAAeN,EAAMO,iBAAiBP,EAAM7B,SAG9CX,YAAgB6C,YAAuBL,GAAQ,UAAU,WAGvD,IAFA,IAAIxB,EAEKgC,EAAO7I,UAAUC,OAAQ0G,EAAO,IAAIrE,MAAMuG,GAAOrF,EAAO,EAAGA,EAAOqF,EAAMrF,IAC/EmD,EAAKnD,GAAQxD,UAAUwD,GAGzB6E,EAAM7B,MAAMsC,aAAaC,uBACxBlC,EAAOe,EAAcoB,QAAQ1H,KAAK2H,MAAMpC,EAAM,CAAC6B,YAAuBL,GAAQA,EAAM7B,MAAO6B,EAAM7B,MAAMsC,aAAaI,MAAMC,WAAWC,SAAS7I,OAAOoG,QAGxJd,YAAgB6C,YAAuBL,GAAQ,aAAa,WAG1D,IAFA,IAAItB,EAEKsC,EAAQrJ,UAAUC,OAAQ0G,EAAO,IAAIrE,MAAM+G,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,IACpF3C,EAAK2C,GAAStJ,UAAUsJ,GAG1B,OAAOjB,EAAM7B,MAAMsC,aAAaS,oBAC/BxC,EAAQa,EAAcoB,QAAQ1H,KAAK2H,MAAMlC,EAAO,CAAC2B,YAAuBL,GAAQA,EAAM7B,MAAO6B,EAAM7B,MAAMsC,aAAaI,MAAMC,WAAWC,SAAS7I,OAAOoG,QAG1Jd,YAAgB6C,YAAuBL,GAAQ,wBAAwB,WAGrE,IAFA,IAAIZ,EAEK+B,EAAQxJ,UAAUC,OAAQ0G,EAAO,IAAIrE,MAAMkH,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,IACpF9C,EAAK8C,GAASzJ,UAAUyJ,GAG1BpB,EAAM7B,MAAMsC,aAAaY,wBACxBjC,EAAQG,EAAc+B,sBAAsBrI,KAAK2H,MAAMxB,EAAO,CAACiB,YAAuBL,GAAQA,EAAM7B,MAAO6B,EAAM7B,MAAMsC,aAAaI,MAAMC,WAAWC,SAAS7I,OAAOoG,QAGpKiB,EAAcK,qBAChBI,EAAM7B,MAAMsC,aAAac,mBAAmBhC,EAAcK,oBAAoB4B,KAAKnB,YAAuBL,IAAS,CACjHtD,IAAKsD,EAAM7B,MAAMsC,aACjBjE,kBAAmBwD,EAAM7B,MAAMsD,mBAC9BzB,EAAM7B,MAAOoB,EAAcM,aAAeN,EAAcM,YAAY2B,KAAKnB,YAAuBL,KAG9FA,EAyJT,OApNA0B,YAAUjC,EAAWM,GA8DrB4B,YAAalC,EAAW,CAAC,CACvBjH,IAAK,oBACLuB,MAAO,WACL,IAAI6H,EAAS1B,KAEbA,KAAK2B,YAAc3B,KAAK/B,MAAMsC,aAAaI,MAAMiB,WAAU,WACpDF,EAAOG,cACVH,EAAOI,SAAS,CACd1B,cAAesB,EAAOrB,iBAAiBqB,EAAOzD,YAKhDwB,IACFO,KAAK+B,iBAAmB/B,KAAK/B,MAAMsC,aAAayB,eAAeC,eAAejC,SAGjF,CACD1H,IAAK,wBACLuB,MAAO,SAA+BqI,EAAWC,GAC/C,GAAmD,oBAAxC9C,EAAc+C,sBACvB,OAAO/C,EAAc+C,sBAAsBrJ,KAAKiH,KAAMA,KAAK/B,MAAOiE,EAAWlC,KAAK5C,MAAO+E,GAG3F,IAAIE,EAAa9J,YAAayH,KAAK/B,MAAOiE,GAE1C,OAAiC,OAA7BlC,KAAK5C,MAAMgD,eAAsD,OAA5B+B,EAAU/B,cAC7CJ,KAAK5C,MAAMgD,gBAAkB+B,EAAU/B,gBACjCiC,GAMJA,IAAe9J,YAAayH,KAAK5C,MAAMgD,cAAe+B,EAAU/B,iBAEzE,CACD9H,IAAK,qBACLuB,MAAO,SAA4ByI,GAC5BC,IAAQD,EAAWtC,KAAK/B,SAC3B+B,KAAK8B,SAAS,CACZ1B,cAAeJ,KAAKK,iBAAiBL,KAAK/B,SAGxCwB,IACFO,KAAK/B,MAAMsC,aAAayB,eAAeQ,SAEM,oBAAlCnD,EAAcO,iBACvBI,KAAK/B,MAAMsC,aAAakC,oBAAoBpD,EAAcO,gBAAgB7G,KAAKiH,KAAMA,KAAK/B,MAAO+B,KAAK/B,MAAMsC,aAAaI,MAAMC,WAAWC,QAASb,KAAK/B,MAAMsC,aAAaI,MAAMC,WAAWC,cAKnM,CACDvI,IAAK,uBACLuB,MAAO,WAOL,GANAmG,KAAK6B,cAAe,EAEhB7B,KAAK2B,aACP3B,KAAK2B,cAGH3B,KAAK+B,mBACP/B,KAAK+B,mBAEgC,oBAA1B1C,EAAcqD,SAAwB,CAC/C,IAAIP,EAAY9C,EAAcqD,QAAQ3J,KAAKiH,KAAMA,KAAK/B,MAAO+B,KAAK/B,MAAMsC,aAAaI,MAAMC,WAAWC,SACtGb,KAAK/B,MAAMsC,aAAaI,MAAMmB,SAASxK,YAAc,GAAI0I,KAAK/B,MAAMsC,aAAaI,MAAMC,WAAY,CACjGC,QAASsB,KAEXnC,KAAK/B,MAAMsC,aAAakC,oBAAoB/I,YAAeyI,OAIhE,CACD7J,IAAK,mBACLuB,MAAO,SAA0BoE,GAC/B,IAAI0E,EAAwB3C,KAAK/B,MAAMsC,aAAaI,MAAMC,WACtDC,EAAU8B,EAAsB9B,QAChCjE,EAAU+F,EAAsB/F,QAChCgG,EAAqBD,EAAsBC,mBAC3CC,EAAYF,EAAsBE,UAClCC,EAA0BH,EAAsBG,wBAChDC,EAAkBJ,EAAsBI,gBACxCC,EAAWL,EAAsBK,SAGjCrG,EAAgB,CAClBC,QAASA,EACTiG,UAAWA,EACXC,wBAAyBA,EACzBC,gBAAiBA,EACjBE,MAPUN,EAAsBM,OASlC,OAAO5D,EAAcgB,iBAAiBtH,KAAKiH,KAAM/B,EAAO4C,EAASlE,EAAeqG,EAGhFJ,KAED,CACDtK,IAAK,sBACLuB,MAAO,SAA6BqJ,GAClC,MAAiD,oBAAtC7D,EAAcK,oBAChBL,EAAcK,oBAAoB3G,KAAKiH,KAAMkD,EAAkBlD,KAAK/B,MAAO+B,KAAK/B,MAAMsC,aAAaI,MAAMC,WAAWC,SAGtH,OAER,CACDvI,IAAK,cACLuB,MAAO,SAAqBsJ,GAC1B,MAAyC,oBAA9B9D,EAAcM,YAChBN,EAAcM,YAAY5G,KAAKiH,KAAMA,KAAK/B,MAAOkF,GAGnD,KAER,CACD7K,IAAK,kBACLuB,MAAO,SAAyBuJ,EAAkBD,GAChD,MAA6C,oBAAlC9D,EAAcO,gBAChBP,EAAcO,gBAAgB7G,KAAKiH,KAAMA,KAAK/B,MAAOmF,EAAkBD,GAGzEA,IAER,CACD7K,IAAK,SACLuB,MAAO,WACL,IAAIwJ,EAAcrD,KAAK/B,MAEnBA,GADeoF,EAAY9C,aACnB+C,YAAyBD,EAAa,CAAC,kBAE/CjD,EAAgBJ,KAAK5C,MAAMgD,cAE/B,GAAsB,OAAlBA,EACF,OAAO,KAGT,IAAImD,EAA8C,oBAAzBlE,EAAcoB,OAAwB,CAC7DA,OAAQT,KAAKS,OACb+C,UAAWxD,KAAKwD,WACd,GACAC,EAA0E,oBAAvCpE,EAAc+B,qBAAsC,CACzFsC,eAAgB1D,KAAKoB,sBACnB,GACJ,OAAOuC,IAAMC,cAActE,EAAUuE,YAAS,GAAI5F,EAAOmC,EAAemD,EAAaE,QAIlFlE,EArNT,CAsNEtG,aAQF,OANAqE,YAAgBiC,EAAW,cAAe,GAAGvH,OAAOqH,EAAcnG,YAAa,KAAKlB,OAAOgB,YAAesG,GAAW,MAErHhC,YAAgBiC,EAAW,YAAaF,EAAcyE,WAEtDxG,YAAgBiC,EAAW,eAAgBF,EAAc0E,cAElDxE,GAMSyE,CAA8B3E,EAA9B2E,CAA6C1E,GAa7D,OAXuB,SAA0BrB,GAC/C,OAAO0F,IAAMC,cAAcK,IAAuB,MAAM,SAAU1D,GAChE,OAAOoD,IAAMC,cAAcM,IAAe,MAAM,SAAU3C,GACxD,OAAOoC,IAAMC,cAAcrE,EAAWsE,YAAS,CAC7CtD,aAAcA,EACdgB,kBAAmBA,GAClBtD,c,kCC1QbnC,EAAOC,QAAU,WACf,IAAIoI,EAAUpK,MAAMlB,UAAUuL,MAAMrL,KAAKtB,WAEzC,OAAO0M,EAAQE,aAAY,SAASC,EAAK3M,GAWvC,OAVAC,OAAOE,KAAKF,OAAOD,IAASU,SAAQ,SAASC,QACvByC,IAAhBpD,EAAOW,UAGMyC,IAAbuJ,EAAIhM,WAECgM,EAAIhM,GAEbgM,EAAIhM,GAAOX,EAAOW,OAEbgM,IACN,M,kCCFLxI,EAAOC,QAdP,SAAuCpE,EAAQmD,GAC7C,GAAe,OAAXnD,EAAiB,MAAO,GAC5B,IAEIW,EACAd,EAHAD,EAAS,GACTyD,EAAapD,OAAOE,KAAKH,GAG7B,IAAKH,EAAI,EAAGA,EAAIwD,EAAWtD,OAAQF,IACjCc,EAAM0C,EAAWxD,GACbsD,EAASI,QAAQ5C,IAAQ,IAC7Bf,EAAOe,GAAOX,EAAOW,IAEvB,OAAOf,I,kCCRTuE,EAAOC,QAJP,SAAuBpC,GACrB,OAAOA,GAAO/B,OAAOE,KAAK6B,GAAKjC,OAAS,I,mBCD1C,IAAI6M,EAAoC,qBAAZC,QACxBC,EAAwB,oBAARC,IAChBC,EAAwB,oBAARC,IAChBC,EAAwC,oBAAhBC,eAAgCA,YAAYC,OAIxE,SAASC,EAAMC,EAAGC,GAEhB,GAAID,IAAMC,EAAG,OAAO,EAEpB,GAAID,GAAKC,GAAiB,iBAALD,GAA6B,iBAALC,EAAe,CAC1D,GAAID,EAAEE,cAAgBD,EAAEC,YAAa,OAAO,EAE5C,IAAIzN,EAAQF,EAAGM,EA6BXsN,EA5BJ,GAAIrL,MAAMC,QAAQiL,GAAI,CAEpB,IADAvN,EAASuN,EAAEvN,SACGwN,EAAExN,OAAQ,OAAO,EAC/B,IAAKF,EAAIE,EAAgB,IAARF,KACf,IAAKwN,EAAMC,EAAEzN,GAAI0N,EAAE1N,IAAK,OAAO,EACjC,OAAO,EAwBT,GAAIiN,GAAWQ,aAAaP,KAASQ,aAAaR,IAAM,CACtD,GAAIO,EAAEI,OAASH,EAAEG,KAAM,OAAO,EAE9B,IADAD,EAAKH,EAAEK,YACE9N,EAAI4N,EAAGG,QAAQC,MACtB,IAAKN,EAAEO,IAAIjO,EAAEqC,MAAM,IAAK,OAAO,EAEjC,IADAuL,EAAKH,EAAEK,YACE9N,EAAI4N,EAAGG,QAAQC,MACtB,IAAKR,EAAMxN,EAAEqC,MAAM,GAAIqL,EAAEQ,IAAIlO,EAAEqC,MAAM,KAAM,OAAO,EACpD,OAAO,EAGT,GAAI8K,GAAWM,aAAaL,KAASM,aAAaN,IAAM,CACtD,GAAIK,EAAEI,OAASH,EAAEG,KAAM,OAAO,EAE9B,IADAD,EAAKH,EAAEK,YACE9N,EAAI4N,EAAGG,QAAQC,MACtB,IAAKN,EAAEO,IAAIjO,EAAEqC,MAAM,IAAK,OAAO,EACjC,OAAO,EAIT,GAAIgL,GAAkBC,YAAYC,OAAOE,IAAMH,YAAYC,OAAOG,GAAI,CAEpE,IADAxN,EAASuN,EAAEvN,SACGwN,EAAExN,OAAQ,OAAO,EAC/B,IAAKF,EAAIE,EAAgB,IAARF,KACf,GAAIyN,EAAEzN,KAAO0N,EAAE1N,GAAI,OAAO,EAC5B,OAAO,EAGT,GAAIyN,EAAEE,cAAgBQ,OAAQ,OAAOV,EAAEtN,SAAWuN,EAAEvN,QAAUsN,EAAEW,QAAUV,EAAEU,MAC5E,GAAIX,EAAEY,UAAYjO,OAAOiB,UAAUgN,QAAS,OAAOZ,EAAEY,YAAcX,EAAEW,UACrE,GAAIZ,EAAEvJ,WAAa9D,OAAOiB,UAAU6C,SAAU,OAAOuJ,EAAEvJ,aAAewJ,EAAExJ,WAIxE,IADAhE,GADAI,EAAOF,OAAOE,KAAKmN,IACLvN,UACCE,OAAOE,KAAKoN,GAAGxN,OAAQ,OAAO,EAE7C,IAAKF,EAAIE,EAAgB,IAARF,KACf,IAAKI,OAAOiB,UAAUC,eAAeC,KAAKmM,EAAGpN,EAAKN,IAAK,OAAO,EAKhE,GAAI+M,GAAkBU,aAAaT,QAAS,OAAO,EAGnD,IAAKhN,EAAIE,EAAgB,IAARF,KACf,IAAiB,WAAZM,EAAKN,IAA+B,QAAZM,EAAKN,IAA4B,QAAZM,EAAKN,KAAiByN,EAAEa,YAarEd,EAAMC,EAAEnN,EAAKN,IAAK0N,EAAEpN,EAAKN,KAAM,OAAO,EAK7C,OAAO,EAGT,OAAOyN,IAAMA,GAAKC,IAAMA,EAI1BpJ,EAAOC,QAAU,SAAiBkJ,EAAGC,GACnC,IACE,OAAOF,EAAMC,EAAGC,GAChB,MAAOjC,GACP,IAAMA,EAAM8C,SAAW,IAAIjI,MAAM,oBAO/B,OADAkI,QAAQC,KAAK,mDACN,EAGT,MAAMhD,K,kCCnIV,iHACWiD,EAAuBC,wBAAc,CAC9C3F,sBAAuB,aAGvBQ,mBAAoB,WAClB,MAAO,KAETG,uBAAwB,aAGxBsB,oBAAqB,aAGrBpB,mBAAoB,aAGpBV,MAAO,GACPqB,eAAgB,GAChBvF,kBAAmB,KAEjBwH,EAAwBiC,EAAqBE,SAC7CC,EAAwBH,EAAqBI,SAG7CC,EAAiBJ,6BAAcpL,GAC/BmJ,EAAgBqC,EAAeH,SACfG,EAAeD,U,qBC1BiCxK,EAAOC,QAAiG,WAAW,aAAa,SAASyK,EAAEA,EAAEC,EAAEC,GAAG,OAAOD,KAAKD,EAAE5O,OAAO+O,eAAeH,EAAEC,EAAE,CAAC5M,MAAM6M,EAAEtO,YAAW,EAAGwO,cAAa,EAAGC,UAAS,IAAKL,EAAEC,GAAGC,EAAEF,EAAE,SAASC,EAAED,EAAEC,GAAG,IAAIC,EAAE9O,OAAOE,KAAK0O,GAAG,GAAG5O,OAAOG,sBAAsB,CAAC,IAAI+O,EAAElP,OAAOG,sBAAsByO,GAAGC,IAAIK,EAAEA,EAAE7O,QAAQ,SAASwO,GAAG,OAAO7O,OAAOO,yBAAyBqO,EAAEC,GAAGrO,eAAesO,EAAEK,KAAKrG,MAAMgG,EAAEI,GAAG,OAAOJ,EAAE,SAASA,EAAEA,GAAG,IAAI,IAAII,EAAE,EAAEA,EAAErP,UAAUC,OAAOoP,IAAI,CAAC,IAAIE,EAAE,MAAMvP,UAAUqP,GAAGrP,UAAUqP,GAAG,GAAGA,EAAE,EAAEL,EAAE7O,OAAOoP,IAAG,GAAI3O,SAAS,SAASoO,GAAGD,EAAEE,EAAED,EAAEO,EAAEP,OAAO7O,OAAOqP,0BAA0BrP,OAAOsP,iBAAiBR,EAAE9O,OAAOqP,0BAA0BD,IAAIP,EAAE7O,OAAOoP,IAAI3O,SAAS,SAASmO,GAAG5O,OAAO+O,eAAeD,EAAEF,EAAE5O,OAAOO,yBAAyB6O,EAAER,OAAO,OAAOE,EAAE,SAASI,EAAEN,EAAEC,GAAG,GAAG,MAAMD,EAAE,MAAM,GAAG,IAAIE,EAAEI,EAAEE,EAAE,SAASR,EAAEC,GAAG,GAAG,MAAMD,EAAE,MAAM,GAAG,IAAIE,EAAEI,EAAEE,EAAE,GAAG/B,EAAErN,OAAOE,KAAK0O,GAAG,IAAIM,EAAE,EAAEA,EAAE7B,EAAEvN,OAAOoP,IAAIJ,EAAEzB,EAAE6B,GAAGL,EAAEvL,QAAQwL,IAAI,IAAIM,EAAEN,GAAGF,EAAEE,IAAI,OAAOM,EAAlI,CAAqIR,EAAEC,GAAG,GAAG7O,OAAOG,sBAAsB,CAAC,IAAIkN,EAAErN,OAAOG,sBAAsByO,GAAG,IAAIM,EAAE,EAAEA,EAAE7B,EAAEvN,OAAOoP,IAAIJ,EAAEzB,EAAE6B,GAAGL,EAAEvL,QAAQwL,IAAI,GAAG9O,OAAOiB,UAAUsO,qBAAqBpO,KAAKyN,EAAEE,KAAKM,EAAEN,GAAGF,EAAEE,IAAI,OAAOM,EAAE,SAASA,EAAER,EAAEC,GAAG,OAAO,SAASD,GAAG,GAAGzM,MAAMC,QAAQwM,GAAG,OAAOA,EAAvC,CAA0CA,IAAI,SAASA,EAAEC,GAAG,GAAKW,OAAOC,YAAYzP,OAAO4O,IAAI,uBAAuB5O,OAAOiB,UAAU6C,SAAS3C,KAAKyN,GAAzF,CAAoG,IAAIE,EAAE,GAAGI,GAAE,EAAGE,GAAE,EAAG/B,OAAE,EAAO,IAAI,IAAI,IAAIqC,EAAE9P,EAAEgP,EAAEY,OAAOC,cAAcP,GAAGQ,EAAE9P,EAAE+N,QAAQC,QAAQkB,EAAEK,KAAKO,EAAEzN,QAAQ4M,GAAGC,EAAEhP,SAAS+O,GAAGK,GAAE,IAAK,MAAMN,GAAGQ,GAAE,EAAG/B,EAAEuB,EAAvH,QAAiI,IAAIM,GAAG,MAAMtP,EAAE+P,QAAQ/P,EAAE+P,SAAzB,QAA0C,GAAGP,EAAE,MAAM/B,GAAG,OAAOyB,GAA9U,CAAiVF,EAAEC,IAAI,WAAW,MAAM,IAAIe,UAAU,wDAA/B,GAA0F,SAASvC,EAAEuB,GAAG,OAAO,SAASA,GAAG,GAAGzM,MAAMC,QAAQwM,GAAG,CAAC,IAAI,IAAIC,EAAE,EAAEC,EAAE,IAAI3M,MAAMyM,EAAE9O,QAAQ+O,EAAED,EAAE9O,OAAO+O,IAAIC,EAAED,GAAGD,EAAEC,GAAG,OAAOC,GAAnG,CAAuGF,IAAI,SAASA,GAAG,GAAGY,OAAOC,YAAYzP,OAAO4O,IAAI,uBAAuB5O,OAAOiB,UAAU6C,SAAS3C,KAAKyN,GAAG,OAAOzM,MAAM0N,KAAKjB,GAAxH,CAA4HA,IAAI,WAAW,MAAM,IAAIgB,UAAU,mDAA/B,GAAqF,SAASF,EAAEd,GAAG,IAAIC,EAAEC,EAAE,2BAA2B1O,OAAOwO,EAAElO,KAAKwO,EAAE,WAAW,YAAO,IAASL,IAAIA,EAAED,EAAEkB,cAAcC,OAAOD,cAAcjB,GAAGxB,EAAE,WAAW,OAAO2C,KAAKC,MAAMf,IAAIgB,QAAQpB,IAAI,OAAO,MAAM,CAAChB,IAAI,SAASc,EAAEC,GAAG,IAAIC,EAAEjP,UAAUC,OAAO,QAAG,IAASD,UAAU,GAAGA,UAAU,GAAG,CAACsQ,KAAK,WAAW,OAAO1O,QAAQC,YAAY,OAAOD,QAAQC,UAAUG,MAAM,WAAW,IAAIiN,EAAEkB,KAAKI,UAAUxB,GAAGM,EAAE7B,IAAIyB,GAAG,OAAOrN,QAAQ4O,IAAI,CAACnB,GAAGL,SAAI,IAASK,OAAOrN,MAAM,SAAS+M,GAAG,IAAIC,EAAEO,EAAER,EAAE,GAAGM,EAAEL,EAAE,GAAGxB,EAAEwB,EAAE,GAAG,OAAOpN,QAAQ4O,IAAI,CAACnB,EAAE7B,GAAGyB,EAAEqB,KAAKjB,QAAQrN,MAAM,SAAS+M,GAAG,OAAOQ,EAAER,EAAE,GAAG,OAAO0B,IAAI,SAAS1B,EAAEC,GAAG,OAAOpN,QAAQC,UAAUG,MAAM,WAAW,IAAIuN,EAAE/B,IAAI,OAAO+B,EAAEY,KAAKI,UAAUxB,IAAIC,EAAEK,IAAIqB,QAAQzB,EAAEkB,KAAKI,UAAUhB,IAAIP,MAAM2B,OAAO,SAAS5B,GAAG,OAAOnN,QAAQC,UAAUG,MAAM,WAAW,IAAIgN,EAAExB,WAAWwB,EAAEmB,KAAKI,UAAUxB,IAAIM,IAAIqB,QAAQzB,EAAEkB,KAAKI,UAAUvB,QAAQ4B,MAAM,WAAW,OAAOhP,QAAQC,UAAUG,MAAM,WAAWqN,IAAIwB,WAAW5B,QAAQ,SAASlP,EAAEgP,GAAG,IAAIC,EAAExB,EAAEuB,EAAE+B,QAAQ7B,EAAED,EAAE+B,QAAQ,YAAO,IAAS9B,EAAE,CAAChB,IAAI,SAASc,EAAEC,GAAG,IAAIC,EAAEjP,UAAUC,OAAO,QAAG,IAASD,UAAU,GAAGA,UAAU,GAAG,CAACsQ,KAAK,WAAW,OAAO1O,QAAQC,YAAkB,OAAJmN,IAAahN,MAAM,SAAS+M,GAAG,OAAOnN,QAAQ4O,IAAI,CAACzB,EAAEE,EAAEqB,KAAKvB,QAAQ/M,MAAM,SAAS+M,GAAG,OAAOQ,EAAER,EAAE,GAAG,OAAO0B,IAAI,SAAS1B,EAAEC,GAAG,OAAOpN,QAAQC,QAAQmN,IAAI2B,OAAO,SAAS5B,GAAG,OAAOnN,QAAQC,WAAW+O,MAAM,WAAW,OAAOhP,QAAQC,YAAY,CAACoM,IAAI,SAASc,EAAEM,GAAG,IAAIE,EAAEvP,UAAUC,OAAO,QAAG,IAASD,UAAU,GAAGA,UAAU,GAAG,CAACsQ,KAAK,WAAW,OAAO1O,QAAQC,YAAY,OAAOoN,EAAEhB,IAAIc,EAAEM,EAAEE,GAAGyB,OAAO,WAAW,OAAOjR,EAAE,CAAC+Q,OAAO9B,IAAIf,IAAIc,EAAEM,EAAEE,OAAOkB,IAAI,SAAS1B,EAAEM,GAAG,OAAOJ,EAAEwB,IAAI1B,EAAEM,GAAG2B,OAAO,WAAW,OAAOjR,EAAE,CAAC+Q,OAAO9B,IAAIyB,IAAI1B,EAAEM,OAAOsB,OAAO,SAAS5B,GAAG,OAAOE,EAAE0B,OAAO5B,GAAGiC,OAAO,WAAW,OAAOjR,EAAE,CAAC+Q,OAAO9B,IAAI2B,OAAO5B,OAAO6B,MAAM,WAAW,OAAO3B,EAAE2B,QAAQI,OAAO,WAAW,OAAOjR,EAAE,CAAC+Q,OAAO9B,IAAI4B,aAAa,SAASK,IAAI,IAAIlC,EAAE/O,UAAUC,OAAO,QAAG,IAASD,UAAU,GAAGA,UAAU,GAAG,CAACkR,cAAa,GAAIlC,EAAE,GAAG,MAAM,CAACf,IAAI,SAASgB,EAAEI,GAAG,IAAIE,EAAEvP,UAAUC,OAAO,QAAG,IAASD,UAAU,GAAGA,UAAU,GAAG,CAACsQ,KAAK,WAAW,OAAO1O,QAAQC,YAAY2L,EAAE2C,KAAKI,UAAUtB,GAAG,GAAGzB,KAAKwB,EAAE,OAAOpN,QAAQC,QAAQkN,EAAEmC,aAAaf,KAAKC,MAAMpB,EAAExB,IAAIwB,EAAExB,IAAI,IAAIqC,EAAER,IAAItP,EAAEwP,GAAGA,EAAEe,MAAM,WAAW,OAAO1O,QAAQC,WAAW,OAAOgO,EAAE7N,MAAM,SAAS+M,GAAG,OAAOhP,EAAEgP,MAAM/M,MAAM,WAAW,OAAO6N,MAAMY,IAAI,SAASxB,EAAEI,GAAG,OAAOL,EAAEmB,KAAKI,UAAUtB,IAAIF,EAAEmC,aAAaf,KAAKI,UAAUlB,GAAGA,EAAEzN,QAAQC,QAAQwN,IAAIsB,OAAO,SAAS5B,GAAG,cAAcC,EAAEmB,KAAKI,UAAUxB,IAAInN,QAAQC,WAAW+O,MAAM,WAAW,OAAO5B,EAAE,GAAGpN,QAAQC,YAAY,SAASsP,EAAEpC,GAAG,IAAI,IAAIC,EAAED,EAAE9O,OAAO,EAAE+O,EAAE,EAAEA,IAAI,CAAC,IAAIC,EAAEmC,KAAKC,MAAMD,KAAKE,UAAUtC,EAAE,IAAIK,EAAEN,EAAEC,GAAGD,EAAEC,GAAGD,EAAEE,GAAGF,EAAEE,GAAGI,EAAE,OAAON,EAAE,SAASxK,EAAEwK,EAAEC,GAAG,OAAOA,GAAG7O,OAAOE,KAAK2O,GAAGpO,SAAS,SAASqO,GAAGF,EAAEE,GAAGD,EAAEC,GAAGF,MAAMA,GAAGA,EAAE,SAAShN,EAAEgN,GAAG,IAAI,IAAIC,EAAEhP,UAAUC,OAAOgP,EAAE,IAAI3M,MAAM0M,EAAE,EAAEA,EAAE,EAAE,GAAGK,EAAE,EAAEA,EAAEL,EAAEK,IAAIJ,EAAEI,EAAE,GAAGrP,UAAUqP,GAAG,IAAIE,EAAE,EAAE,OAAOR,EAAEnL,QAAQ,OAAO,WAAW,OAAO2N,mBAAmBtC,EAAEM,SAAS,IAAIiC,EAAE,CAACC,sBAAsB,EAAEC,cAAc,GAAG,SAASC,EAAE5C,EAAEC,GAAG,IAAIC,EAAEF,GAAG,GAAGM,EAAEJ,EAAE2C,MAAM,GAAG,OAAOzR,OAAOE,KAAK4O,GAAGrO,SAAS,SAASmO,IAAI,IAAI,CAAC,UAAU,UAAU,kBAAkB,OAAO,aAAatL,QAAQsL,KAAKM,EAAEN,GAAGE,EAAEF,OAAO,CAAC6C,KAAKzR,OAAO0N,QAAQwB,GAAGpP,OAAO,EAAEoP,OAAE,EAAOwC,QAAQ5C,EAAE4C,SAAS7C,EAAE8C,QAAQ7C,EAAE6C,SAAS,GAAGC,gBAAgB9C,EAAE8C,iBAAiB,GAAGC,UAAU/C,EAAE+C,WAAW,IAAIC,EAAE,CAACC,KAAK,EAAEC,MAAM,EAAEC,IAAI,GAAGC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAE,SAASC,EAAEzD,GAAG,IAAIC,EAAEhP,UAAUC,OAAO,QAAG,IAASD,UAAU,GAAGA,UAAU,GAAGqS,EAAE,OAAOpD,EAAEA,EAAE,GAAGF,GAAG,GAAG,CAAC0D,OAAOzD,EAAE0D,WAAWC,KAAKC,QAAQ,SAASnF,EAAEsB,GAAG,MAAM,iBAAiBA,EAAE,CAAC8D,SAAS,QAAQC,IAAI/D,EAAEgE,OAAOd,EAAEG,KAAK,CAACS,SAAS9D,EAAE8D,UAAU,QAAQC,IAAI/D,EAAE+D,IAAIC,OAAOhE,EAAEgE,QAAQd,EAAEG,KAAK,IAAIY,EAAE,MAAMC,EAAE,OAAO,SAASC,EAAEnE,EAAEC,GAAG,OAAOpN,QAAQ4O,IAAIxB,EAAEnM,KAAK,SAASmM,GAAG,OAAOD,EAAEd,IAAIe,GAAG,WAAW,OAAOpN,QAAQC,QAAQ2Q,EAAExD,WAAWhN,MAAM,SAAS+M,GAAG,IAAIE,EAAEF,EAAEvO,QAAQ,SAASuO,GAAG,OAAO,SAASA,GAAG,OAAOA,EAAE0D,SAASJ,GAAGM,KAAKC,MAAM7D,EAAE2D,WAAW,KAAzD,CAA+D3D,MAAMM,EAAEN,EAAEvO,QAAQ,SAASuO,GAAG,OAAO,SAASA,GAAG,OAAOA,EAAE0D,SAASF,GAAGI,KAAKC,MAAM7D,EAAE2D,YAAY,KAA1D,CAAgE3D,MAAMQ,EAAE,GAAGhP,OAAOiN,EAAEyB,GAAGzB,EAAE6B,IAAI,MAAM,CAAC8D,WAAW,SAASpE,EAAEC,GAAG,OAAO,IAAIK,EAAEpP,QAAQ,IAAI8O,EAAE,EAAEM,EAAEpP,OAAO,EAAE8O,GAAGC,GAAGoE,eAAe7D,EAAEtP,OAAO,EAAEsP,EAAE1M,KAAK,SAASkM,GAAG,OAAOtB,EAAEsB,MAAMC,MAAM,SAASqE,EAAEtE,EAAEC,EAAEK,EAAEE,GAAG,IAAIM,EAAE,GAAG9P,EAAE,SAASgP,EAAEC,GAAG,GAAGD,EAAEuE,SAASN,SAAG,IAASjE,EAAE6C,WAAM,IAAS5C,EAAE4C,MAA7C,CAAyD,IAAIvC,EAAE/M,MAAMC,QAAQwM,EAAE6C,MAAM7C,EAAE6C,KAAK3C,EAAEA,EAAE,GAAGF,EAAE6C,MAAM5C,EAAE4C,MAAM,OAAOzB,KAAKI,UAAUlB,IAAvJ,CAA2JA,EAAEE,GAAG0B,EAAE,SAASlC,EAAEC,GAAG,IAAIK,EAAEJ,EAAEA,EAAE,GAAGF,EAAE+C,SAAS9C,EAAE8C,SAASvC,EAAE,GAAG,OAAOpP,OAAOE,KAAKgP,GAAGzO,SAAS,SAASmO,GAAG,IAAIC,EAAEK,EAAEN,GAAGQ,EAAER,EAAEwE,eAAevE,KAAKO,EAApI,CAAuIR,EAAEQ,GAAG4B,EAAE9B,EAAEiE,OAAO/O,EAAE8K,EAAEiE,SAASN,EAAE,GAAG/D,EAAEA,EAAE,GAAGI,EAAEuC,MAAMrC,EAAEqC,MAAM7P,EAAEkN,EAAEA,EAAEA,EAAE,CAAC,kBAAkBF,EAAEyE,UAAUpR,OAAO2M,EAAEgD,iBAAiBxN,GAAGgL,EAAEwC,iBAAiBP,EAAE,EAAEG,EAAE,SAAS3C,EAAEC,EAAEzB,GAAG,IAAIjJ,EAAE0K,EAAEwE,MAAM,QAAG,IAASlP,EAAE,KAAK,CAAC7C,KAAK,aAAa4M,QAAQ,gHAAgHoF,sBAAsBC,EAAE9D,IAAI,IAAI8B,EAAE,CAACC,KAAK7R,EAAE+R,QAAQb,EAAEqC,OAAOnC,EAAE2B,IAAIc,EAAErP,EAAE8K,EAAE1L,KAAK5B,GAAG8R,eAAerG,EAAEgE,EAAEzC,EAAE+E,SAASC,SAASC,gBAAgBxG,EAAEgE,EAAEjC,EAAEsC,UAAUI,EAAE,SAASlD,GAAG,IAAIC,EAAE,CAACiF,QAAQtC,EAAEuC,SAASnF,EAAEoF,KAAK5P,EAAE6P,UAAUnF,EAAEhP,QAAQ,OAAO4P,EAAEP,KAAKN,GAAGA,GAAGqD,EAAE,CAACgC,UAAU,SAAStF,GAAG,OAAO,SAASA,GAAG,IAAI,OAAOoB,KAAKC,MAAMrB,EAAEuF,SAAS,MAAMtF,GAAG,MAAM,SAASD,EAAEC,GAAG,MAAM,CAACtN,KAAK,uBAAuB4M,QAAQS,EAAEmF,SAASlF,GAApE,CAAwEA,EAAEV,QAAQS,IAA9I,CAAmJA,IAAIwF,QAAQ,SAASlF,GAAG,IAAIE,EAAE0C,EAAE5C,GAAG,OAAOA,EAAEmF,YAAYhD,IAAI5P,QAAQ4O,IAAI,CAACzB,EAAE0F,OAAOC,KAAK,oBAAoBC,EAAEpF,IAAIR,EAAE6F,WAAWnE,IAAIlM,EAAEiO,EAAEjO,EAAE8K,EAAEmF,WAAWjC,EAAED,MAAMtQ,MAAM,WAAW,OAAOgN,EAAEC,EAAEzB,OAAOqH,OAAO,SAAS9F,GAAG,MAAMkD,EAAElD,GAAG,SAASA,EAAEC,GAAG,IAAIC,EAAEF,EAAEuF,QAAQjF,EAAEN,EAAE0D,OAAOlD,EAAEN,EAAE,IAAIM,EAAEY,KAAKC,MAAMnB,GAAGX,QAAQ,MAAMS,IAAI,OAAO,SAASA,EAAEC,EAAEC,GAAG,MAAM,CAACvN,KAAK,WAAW4M,QAAQS,EAAE0D,OAAOzD,EAAE0E,sBAAsBzE,GAAhF,CAAoFM,EAAEF,EAAEL,GAAlL,CAAsLD,EAAE4E,EAAE9D,MAAM,OAAOd,EAAE+F,UAAUC,KAAKpD,GAAG3P,MAAM,SAAS+M,GAAG,OAAO,SAASA,EAAEC,GAAG,OAAO,SAASD,GAAG,IAAIC,EAAED,EAAE0D,OAAO,OAAO1D,EAAEyF,YAAY,SAASzF,GAAG,IAAIC,EAAED,EAAEyF,WAAWvF,EAAEF,EAAE0D,OAAO,OAAOzD,GAAG,KAAKC,EAAzD,CAA4DF,IAAI,MAAMC,EAAE,MAAM,MAAMA,EAAE,KAAtI,CAA4ID,GAAGC,EAAEuF,QAAQxF,GAAG,MAAMA,EAAE0D,OAAO,KAAKzD,EAAEqF,UAAUtF,GAAGC,EAAE6F,OAAO9F,GAA7N,CAAiOA,EAAEsD,OAAO,OAAOa,EAAEnE,EAAE6F,WAAW5F,GAAGhN,MAAM,SAAS+M,GAAG,OAAO4C,EAAEnE,EAAEuB,EAAEqE,gBAAgB4B,UAAUjG,EAAEoE,eAAe,SAAS8B,EAAElG,GAAG,IAAIC,EAAE,CAAC5M,MAAM,2BAA2B7B,OAAOwO,EAAE,KAAKmG,IAAI,SAASnG,GAAG,IAAIE,EAAE,KAAK1O,OAAOwO,EAAEoG,SAAS5U,YAAO,IAASwO,EAAEqG,QAAQ,KAAK7U,OAAOwO,EAAEqG,QAAQ,KAAK,IAAI,OAAO,IAAIpG,EAAE5M,MAAMqB,QAAQwL,KAAKD,EAAE5M,MAAM,GAAG7B,OAAOyO,EAAE5M,OAAO7B,OAAO0O,IAAID,IAAI,OAAOA,EAAE,SAAS4E,EAAE7E,EAAEC,EAAEC,GAAG,IAAII,EAAEgG,EAAEpG,GAAGM,EAAE,GAAGhP,OAAOwO,EAAE8D,SAAS,OAAOtS,OAAOwO,EAAE+D,IAAI,KAAKvS,OAAO,MAAMyO,EAAEsG,OAAO,GAAGtG,EAAEuG,OAAO,GAAGvG,GAAG,OAAOK,EAAEpP,SAASsP,GAAG,IAAIhP,OAAO8O,IAAIE,EAAE,SAAS8F,EAAEtG,GAAG,OAAO5O,OAAOE,KAAK0O,GAAGlM,KAAK,SAASmM,GAAG,OAAOjN,EAAE,QAAQiN,GAAGC,EAAEF,EAAEC,GAAG,oBAAoB7O,OAAOiB,UAAU6C,SAAS3C,KAAK2N,IAAI,mBAAmB9O,OAAOiB,UAAU6C,SAAS3C,KAAK2N,GAAGkB,KAAKI,UAAUxB,EAAEC,IAAID,EAAEC,KAAK,IAAIC,KAAKuG,KAAK,KAAK,SAAS7B,EAAE5E,GAAG,OAAOA,EAAElM,KAAK,SAASkM,GAAG,OAAO4F,EAAE5F,MAAM,SAAS4F,EAAE5F,GAAG,IAAIC,EAAED,EAAEkF,QAAQnC,QAAQ,qBAAqB,CAAC,oBAAoB,SAAS,GAAG,OAAO7C,EAAEA,EAAE,GAAGF,GAAG,GAAG,CAACkF,QAAQhF,EAAEA,EAAE,GAAGF,EAAEkF,SAAS,GAAG,CAACnC,QAAQ7C,EAAEA,EAAE,GAAGF,EAAEkF,QAAQnC,SAAS9C,OAAO,IAAIyG,EAAE,SAAS1G,GAAG,IAAIC,EAAED,EAAE2G,MAAMrG,EAAE,SAASN,EAAEC,EAAEC,GAAG,IAAII,EAAE,CAAC,oBAAoBJ,EAAE,2BAA2BD,GAAG,MAAM,CAAC8C,QAAQ,WAAW,OAAO/C,IAAIyC,EAAEE,cAAcrC,EAAE,IAAI0C,gBAAgB,WAAW,OAAOhD,IAAIyC,EAAEC,sBAAsBpC,EAAE,KAAtM,MAA4M,IAASN,EAAE4G,SAAS5G,EAAE4G,SAASnE,EAAEE,cAAc1C,EAAED,EAAE6G,QAAQpI,EAAE,SAASuB,GAAG,IAAIC,EAAED,EAAE6F,WAAW3F,EAAEF,EAAE0F,OAAOpF,EAAEN,EAAE+F,UAAUtH,EAAEuB,EAAE8G,cAAchG,EAAEd,EAAE+G,eAAe/V,EAAEgP,EAAE+E,SAAS7C,EAAElC,EAAEyE,UAAUrC,EAAEpC,EAAEgH,MAAMxR,EAAEwK,EAAEgD,gBAAgBhQ,EAAE,CAAC6S,WAAW5F,EAAEyF,OAAOxF,EAAE6F,UAAUzF,EAAEwG,cAAcrI,EAAEsI,eAAejG,EAAEiE,SAAS/T,EAAEyT,UAAUvC,EAAEa,QAAQ/C,EAAE+C,QAAQC,gBAAgBxN,EAAEwR,MAAM5E,EAAEtO,KAAK,SAASkM,GAAG,OAAOtB,EAAEsB,MAAMiH,KAAK,SAASjH,EAAEC,GAAG,IAAIC,EAAE0C,EAAE3C,EAAEjN,EAAE+R,SAASkC,MAAM3G,EAAE,WAAW,OAAOgE,EAAEtR,EAAEA,EAAEgU,MAAMvV,QAAQ,SAASuO,GAAG,OAAO,IAAIA,EAAEgE,OAAOd,EAAEC,SAASnD,EAAEE,IAAI,IAAG,UAAM,IAASA,EAAE+C,UAAU/C,EAAE+C,UAAUjD,EAAEiD,WAAW,OAAO3C,IAAI,IAAI7B,EAAE,CAACyG,QAAQlF,EAAEkH,qBAAqBhH,EAAEiH,YAAY,CAACnE,gBAAgBhQ,EAAEgQ,gBAAgBD,QAAQ/P,EAAE+P,UAAU,OAAO/P,EAAE+T,eAAe7H,IAAIT,GAAG,WAAW,OAAOzL,EAAE8T,cAAc5H,IAAIT,GAAG,WAAW,OAAOzL,EAAE8T,cAAcpF,IAAIjD,EAAE6B,KAAKrN,MAAM,SAAS+M,GAAG,OAAOnN,QAAQ4O,IAAI,CAACzO,EAAE8T,cAAclF,OAAOnD,GAAGuB,OAAO,SAASA,GAAG,OAAOnN,QAAQ4O,IAAI,CAACzO,EAAE8T,cAAclF,OAAOnD,GAAG5L,QAAQuU,OAAOpH,QAAQ/M,MAAM,SAAS+M,GAAG,IAAIC,EAAEO,EAAER,EAAE,GAAQ,OAALC,EAAE,GAAUA,EAAE,WAAW,CAACsB,KAAK,SAASvB,GAAG,OAAOhN,EAAE+T,eAAerF,IAAIjD,EAAEuB,OAAOqH,MAAM,SAASrH,EAAEC,GAAG,OAAOqE,EAAEtR,EAAEA,EAAEgU,MAAMvV,QAAQ,SAASuO,GAAG,OAAO,IAAIA,EAAEgE,OAAOd,EAAEE,UAAUpD,EAAE4C,EAAE3C,EAAEjN,EAAE+R,SAASsC,UAAU,OAAOrU,EAA5mC,CAA+mCkN,EAAEA,EAAE,CAAC8G,MAAM,CAAC,CAACjD,IAAI,GAAGvS,OAAOyO,EAAE,oBAAoB+D,OAAOd,EAAEC,MAAM,CAACY,IAAI,GAAGvS,OAAOyO,EAAE,gBAAgB+D,OAAOd,EAAEE,QAAQ5R,OAAO4Q,EAAE,CAAC,CAAC2B,IAAI,GAAGvS,OAAOyO,EAAE,sBAAsB,CAAC8D,IAAI,GAAGvS,OAAOyO,EAAE,sBAAsB,CAAC8D,IAAI,GAAGvS,OAAOyO,EAAE,0BAA0BD,GAAG,GAAG,CAAC+C,QAAQ7C,EAAEA,EAAEA,EAAE,GAAGI,EAAEyC,WAAW,CAAC,eAAe,sCAAsC/C,EAAE+C,SAASC,gBAAgB9C,EAAEA,EAAE,GAAGI,EAAE0C,mBAAmBhD,EAAEgD,oBAAoB,OAAOxN,EAAE,CAAC2R,YAAY1I,EAAEkI,MAAM1G,EAAEqH,gBAAgB,SAAStH,EAAEC,GAAGxB,EAAEgG,UAAU0B,IAAI,CAACC,QAAQpG,EAAEqG,QAAQpG,KAAKsH,WAAW,WAAW,OAAO1U,QAAQ4O,IAAI,CAAChD,EAAEqI,cAAcjF,QAAQpD,EAAEsI,eAAelF,UAAU5O,MAAM,iBAAiB+M,EAAEwH,UAAUC,EAAE,SAASzH,GAAG,OAAO,SAASC,GAAG,IAAIC,EAAEjP,UAAUC,OAAO,QAAG,IAASD,UAAU,GAAGA,UAAU,GAAG,GAA2D,OAAOuE,EAA7D,CAAC2R,YAAYnH,EAAEmH,YAAYR,MAAM3G,EAAE2G,MAAMe,UAAUzH,GAAcC,EAAEsH,WAAWG,EAAE,SAAS3H,GAAG,OAAO,SAASC,EAAEK,GAAG,IAAIE,EAAEP,EAAEnM,KAAK,SAASkM,GAAG,OAAOE,EAAEA,EAAE,GAAGF,GAAG,GAAG,CAAC4H,OAAOtB,EAAEtG,EAAE4H,QAAQ,SAAS,OAAO5H,EAAEmH,YAAYF,KAAK,CAAC1C,OAAOL,EAAEtP,KAAK,sBAAsBiO,KAAK,CAACgF,SAASrH,GAAGyC,WAAU,GAAI3C,KAAKwH,EAAE,SAAS9H,GAAG,OAAO,SAASC,EAAEO,GAAG,OAAO3N,QAAQ4O,IAAIxB,EAAEnM,KAAK,SAASmM,GAAG,IAAIxB,EAAEwB,EAAE2H,OAAO9G,EAAErC,EAAEsJ,UAAU/W,EAAEyN,EAAEuJ,WAAW9F,EAAE5B,EAAE7B,EAAE,CAAC,YAAY,eAAe,OAAOgJ,EAAEzH,EAAFyH,CAAKxH,EAAEyH,UAAU,CAACF,QAAQ,CAAC5M,qBAAqBqN,KAAKrN,qBAAqBkG,EAAE9P,EAAEkP,EAAEA,EAAE,GAAGM,GAAG0B,UAAUgG,EAAE,SAASlI,GAAG,OAAO,SAASC,EAAEC,EAAEI,GAAG,OAAON,EAAEmH,YAAYF,KAAK,CAAC1C,OAAOL,EAAEtP,KAAK5B,EAAE,0BAA0BgN,EAAE0H,WAAW7E,KAAK,CAACsF,MAAMlI,EAAEmI,eAAelI,GAAG+C,WAAU,GAAI3C,KAAK+H,EAAE,SAASrI,GAAG,OAAO,SAASC,EAAEC,GAAG,OAAOF,EAAEmH,YAAYF,KAAK,CAAC1C,OAAOL,EAAEtP,KAAK5B,EAAE,qBAAqBgN,EAAE0H,WAAW7E,KAAK,CAACsF,MAAMlI,GAAGgD,WAAU,GAAI/C,KAAK+H,EAAE,SAASjI,GAAG,OAAO,SAASC,EAAEC,EAAEI,GAAG,OAAON,EAAEmH,YAAYF,KAAK,CAAC1C,OAAOL,EAAEtP,KAAK5B,EAAE,+BAA+BgN,EAAE0H,UAAUzH,GAAG4C,KAAK,CAACmF,WAAW9H,GAAG+C,WAAU,GAAI3C,KAAKgI,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAE,SAASC,EAAEzI,EAAEC,EAAEK,GAAG,IAAIE,EAAE/B,EAAE,CAACkI,MAAM3G,EAAE6G,OAAO5G,EAAE8E,SAAS,CAACC,QAAQ,EAAEiC,KAAK,EAAEI,MAAM,IAAItB,UAAU,CAACC,KAAK,SAAShG,GAAG,OAAO,IAAInN,SAAS,SAASoN,GAAG,IAAIC,EAAE,IAAIwI,eAAexI,EAAEyI,KAAK3I,EAAEuE,OAAOvE,EAAE+D,KAAI,GAAI3S,OAAOE,KAAK0O,EAAE+C,SAASlR,SAAS,SAASoO,GAAG,OAAOC,EAAE0I,iBAAiB3I,EAAED,EAAE+C,QAAQ9C,OAAO,IAAIK,EAAEE,EAAE,SAASR,EAAEM,GAAG,OAAOuI,YAAY,WAAW3I,EAAE4I,QAAQ7I,EAAE,CAACyD,OAAO,EAAE6B,QAAQjF,EAAEmF,YAAW,MAAO,IAAIzF,IAAIvB,EAAE+B,EAAER,EAAE8E,eAAe,sBAAsB5E,EAAE6I,mBAAmB,WAAW7I,EAAE8I,WAAW9I,EAAE+I,aAAQ,IAAS3I,IAAI4I,aAAazK,GAAG6B,EAAEE,EAAER,EAAEiF,gBAAgB,oBAAoB/E,EAAEiJ,QAAQ,WAAW,IAAIjJ,EAAEwD,SAASwF,aAAazK,GAAGyK,aAAa5I,GAAGL,EAAE,CAACsF,QAAQrF,EAAEkJ,cAAc,yBAAyB1F,OAAOxD,EAAEwD,OAAO+B,YAAW,MAAOvF,EAAEmJ,OAAO,WAAWH,aAAazK,GAAGyK,aAAa5I,GAAGL,EAAE,CAACsF,QAAQrF,EAAEkJ,aAAa1F,OAAOxD,EAAEwD,OAAO+B,YAAW,KAAMvF,EAAE8F,KAAKhG,EAAE6C,WAAW6C,QAAQlF,EAAEgI,EAAE,CAACc,MAAM,SAAStJ,EAAEC,GAAG,OAAOqI,GAAG9H,GAAGhB,QAAQ8J,MAAMtJ,EAAEC,GAAGpN,QAAQC,WAAW6S,KAAK,SAAS3F,EAAEC,GAAG,OAAOsI,GAAG/H,GAAGhB,QAAQmG,KAAK3F,EAAEC,GAAGpN,QAAQC,WAAW2J,MAAM,SAASuD,EAAEC,GAAG,OAAOT,QAAQ/C,MAAMuD,EAAEC,GAAGpN,QAAQC,aAAaiU,eAAe7E,IAAI4E,cAAc5E,EAAE,CAACC,cAAa,IAAK0D,WAAW7U,EAAE,CAAC+Q,OAAO,CAACjB,EAAE,CAAChP,IAAI,GAAGN,OAAO,QAAQ,KAAKA,OAAOwO,KAAKkC,OAAOuC,UAAUyB,EAAE,SAASC,IAAI,CAACC,QAAQ,UAAUC,QAAQ,SAASO,SAASnE,EAAEC,uBAAuB,OAAOgE,EAAExG,EAAEA,EAAEA,EAAE,GAAGzB,GAAG6B,GAAG,GAAG,CAACkH,QAAQ,CAAC+B,OAAO5B,EAAE/M,qBAAqBkN,EAAE0B,gBAAgB7B,EAAE8B,6BAA6B3B,EAAE4B,UAAU,SAAS1J,GAAG,OAAO,SAASC,GAAG,OAAOwH,EAAEzH,EAAFyH,CAAKxH,EAAE,CAACuH,QAAQ,CAAC+B,OAAOlB,EAAEzN,qBAAqBqN,EAAE0B,YAAYzB,WAAW,OAAOO,EAAEpC,QAAQ,QAAQoC,EAAlzaxI,I,kCCCnF,IAAI2J,EAAQC,EAAQ,MAChBC,EAAeD,EAAQ,MACvBE,EAAeF,EAAQ,MACvBG,EAAOH,EAAQ,MACfI,EAAcJ,EAAQ,MACtBxV,EAAOwV,EAAQ,MACfK,EAAgBL,EAAQ,MACxBM,EAAmBN,EAAQ,MAE3BO,EAAiBP,EAAQ,MAS7B,SAASQ,EAAyB5L,EAAGC,GACnC,OAAInL,MAAMC,QAAQiL,IAAMlL,MAAMC,QAAQkL,GAElCD,EAAEvN,SAAWwN,EAAExN,QACfuN,EAAE6L,OAAM,SAASC,EAAIvZ,GACnB,OAAOqZ,EAAyB3L,EAAE1N,GAAIuZ,MAIrC9L,IAAMC,EAgEf,SAAS8L,EAAiBC,GACxB,IAAI7C,EAAS6C,EAAgBD,EAAiBE,cAAcD,GAAiB,QAEpDlW,IAArBqT,EAAO+C,WAA4BR,EAAiBvC,EAAO+C,YAC7DnL,QAAQC,KAAK,mIAQfjG,KAAKoR,OAAShD,EAAOgD,QAAU,GAO/BpR,KAAKqR,kBAAoBjD,EAAOiD,mBAAqB,GASrDrR,KAAKsR,mBAAqBlD,EAAOkD,oBAAsB,GAevDtR,KAAKuR,kBAAoBnD,EAAOmD,mBAAqB,GAarDvR,KAAKwR,eAAiBpD,EAAOoD,gBAAkB,GAa/CxR,KAAKyR,6BAA+BrD,EAAOqD,8BAAgC,GAY3EzR,KAAK0R,mBAAqBtD,EAAOsD,oBAAsB,GAQvD1R,KAAK2R,eAAiBvD,EAAOuD,gBAAkB,GAe/C3R,KAAK4R,8BAAgCxD,EAAOwD,+BAAiC,GAE7E,IAAIC,EAAO7R,KACXpI,OAAOE,KAAKsW,GAAQ/V,SAAQ,SAASyZ,GACnC,IAAIC,GAAiE,IAApDf,EAAiBgB,WAAW9W,QAAQ4W,GACjDG,OAAuClX,IAAtBqT,EAAO0D,IAEvBC,GAAcE,IACjBJ,EAAKC,GAAa1D,EAAO0D,OAU/Bd,EAAiBgB,WAAapa,OAAOE,KAAK,IAAIkZ,GAO9CA,EAAiBE,cAAgB,SAASgB,GAExC,GAAIA,aAAwBlB,EAAkB,OAAOkB,EAErD,IAAIC,EAAU,GAsCd,GApCiB,CACf,kBACA,eACA,iBACA,uBACA,sBACA,OACA,oBACA,WACA,sBACA,cACA,gBAGS9Z,SAAQ,SAAS8V,GAC1B,IAAItU,EAAQqY,EAAa/D,GACzB,GAAqB,kBAAVtU,EAAoB,CAC7B,IAAIuY,EAAcC,WAAWxY,GAE7BsY,EAAQhE,GAAKmE,MAAMF,GAAevY,EAAQuY,MAM1CrY,MAAMC,QAAQkY,EAAaK,qBAC7BJ,EAAQI,kBAAoBL,EAAaK,kBAAkBjY,KAAI,SAASkY,GACtE,OAAIzY,MAAMC,QAAQwY,GACTA,EAAQlY,KAAI,SAAST,GAC1B,OAAOwY,WAAWxY,MAGf2Y,MAIPN,EAAaR,mBAAoB,CACnC,IAAIA,EAAqB,GACzB9Z,OAAOE,KAAKoa,EAAaR,oBAAoBrZ,SAAQ,SAAS0G,GAC5D,IAAI0T,EAAYP,EAAaR,mBAAmB3S,IAAc,GAC9D2S,EAAmB3S,GAAa,GAChCnH,OAAOE,KAAK2a,GAAWpa,SAAQ,SAASqa,GACtC,IACIC,EADSF,EAAUC,GACGpY,KAAI,SAASyP,GACrC,OAAIhQ,MAAMC,QAAQ+P,GACTA,EAAEzP,KAAI,SAASsY,GACpB,MAAsB,kBAAXA,EACFP,WAAWO,GAEbA,KAEa,kBAAN7I,EACTsI,WAAWtI,GAEbA,KAET2H,EAAmB3S,GAAW2T,GAAYC,QAG9CR,EAAQT,mBAAqBA,EAG/B,OAAOtB,EAAM,GAAI8B,EAAcC,IASjCnB,EAAiB6B,KAAO,SAA8B5B,GACpD,IAAI6B,EAAW,IAAI9B,EAAiBC,GAmBpC,OAjByBA,EAAcK,oBAAsB,IAC1CjZ,SAAQ,SAAS0a,GAClC,GAAIA,EAAMC,SAAU,CAClB,IAAIC,EAAoBH,EAASI,0BAA0BH,EAAM5Z,MAE7D8Z,EAAkBvb,OAAS,GAAsD,IAAjDub,EAAkB,GAAG/X,QAAQ6X,EAAMC,YACrEF,EAAWA,EAASK,iBAAiBJ,EAAM5Z,OAKZ,KADjC8Z,EAAoBH,EAASI,0BAA0BH,EAAM5Z,OACvCzB,SACpBob,EAAWA,EAASM,kCAAkCL,EAAM5Z,KAAM4Z,EAAMC,eAKvEF,GAST9B,EAAiBqC,SAAW,SAASC,EAAcC,GACjD,IAAInF,EAASmF,GAAc,GAE3B,OAAID,EAAaE,YAAcpF,EAAOuD,gBAAkBvD,EAAOuD,eAAeja,OAAS,EAC9E,IAAI8H,MACT,qLAIA8T,EAAa3B,eAAeja,OAAS,GAAK0W,EAAOoF,WAC5C,IAAIhU,MACT,oKAKF8T,EAAaG,gBACbrF,EAAOsD,oBACPhB,EAActC,EAAOsD,oBAEd,IAAIlS,MACT,+KAMAkR,EAAc4C,EAAa5B,qBAAuBtD,EAAOqF,eACpD,IAAIjU,MACT,+KAKG,MAGTwR,EAAiBnY,UAAY,CAC3BsM,YAAa6L,EAWbmC,iBAAkB,SAA0BpU,GAC1C,IAAI2U,EAAQ,CACVhC,mBAAoB1R,KAAK2T,yBAAyB5U,GAClDwS,kBAAmBX,EAAegD,gBAChC5T,KAAKuR,kBACLxS,EACA,oBAEFyS,eAAgBZ,EAAegD,gBAC7B5T,KAAKwR,eACLzS,EACA,WAEF0S,6BAA8Bb,EAAegD,gBAC3C5T,KAAKyR,6BACL1S,EACA,oBAEF6S,8BAA+BhB,EAAegD,gBAC5C5T,KAAK4R,8BACL7S,EACA,sBAGJ,OACE2U,EAAMhC,qBAAuB1R,KAAK0R,oBAClCgC,EAAMnC,oBAAsBvR,KAAKuR,mBACjCmC,EAAMlC,iBAAmBxR,KAAKwR,gBAC9BkC,EAAMjC,+BAAiCzR,KAAKyR,8BAC5CiC,EAAM9B,gCAAkC5R,KAAK4R,8BAEtC5R,KAEFA,KAAK6T,mBAAmBH,IAOjCI,UAAW,WACT,YAAwB/Y,IAApBiF,KAAKwT,YAA2D,IAA/BxT,KAAK2R,eAAeja,OAAqBsI,KAEvEA,KAAK6T,mBAAmB,CAC7BL,gBAAYzY,EACZ4W,eAAgB,MASpBoC,SAAU,SAAkBvZ,GAC1B,OAAIA,IAAUwF,KAAKxF,MAAcwF,KAE1BA,KAAK6T,mBAAmB,CAC7BrZ,MAAOA,KASXwZ,SAAU,SAAkBC,GAC1B,OAAIA,IAAajU,KAAK2O,MAAc3O,KAE7BA,KAAK6T,mBAAmB,CAC7BlF,MAAOsF,KASXC,QAAS,SAAiBC,GACxB,OAAIA,IAAYnU,KAAK3F,KAAa2F,KAE3BA,KAAK6T,mBAAmB,CAC7BxZ,KAAM8Z,KAUVC,UAAW,SAAmBhD,GAC5B,OAAOpR,KAAK6T,mBAAmB,CAC7BzC,OAAQA,KAUZiD,qBAAsB,SAA8BjD,GAClD,OAAOpR,KAAK6T,mBAAmB,CAC7BxC,kBAAmBD,KAUvBkD,eAAgB,SAAwBxN,GACtC,OAAI9G,KAAK5F,cAAgB0M,EAAU9G,KAE5BA,KAAK6T,mBAAmB,CAC7BzZ,YAAa0M,KAUjByN,iBAAkB,SAA0BC,GAC1C,OAAIxU,KAAKwU,gBAAkBA,EAAsBxU,KAE1CA,KAAK6T,mBAAmB,CAC7BW,cAAeA,KAoBnBC,qBAAsB,SAAS1V,EAAW2T,EAAU3I,GAClD,IAAIlQ,EAAQ4W,EAAY1G,GAExB,GAAI/J,KAAK0U,iBAAiB3V,EAAW2T,EAAU7Y,GAAQ,OAAOmG,KAE9D,IAAI2U,EAAMvE,EAAM,GAAIpQ,KAAK0R,oBAazB,OAXAiD,EAAI5V,GAAaqR,EAAM,GAAIuE,EAAI5V,IAE3B4V,EAAI5V,GAAW2T,IAEjBiC,EAAI5V,GAAW2T,GAAYiC,EAAI5V,GAAW2T,GAAUtO,QAEpDuQ,EAAI5V,GAAW2T,GAAU3L,KAAKlN,IAE9B8a,EAAI5V,GAAW2T,GAAY,CAAC7Y,GAGvBmG,KAAK6T,mBAAmB,CAC7BnC,mBAAoBiD,KAQxBC,0BAA2B,SAASrG,GAClC,OAAKvO,KAAK6U,mBAAmBtG,IAGtBvO,KAAKuR,kBAAkBhD,IAFrB,IASXuG,0BAA2B,SAASvG,GAClC,OAAKvO,KAAK+U,mBAAmBxG,IAGtBvO,KAAKyR,6BAA6BlD,IAFhC,IASX2E,0BAA2B,SAAS3E,GAGlC,OAAOvO,KAAK4R,8BAA8BrD,IAAc,IAO1DyG,sBAAuB,SAASzG,GAC9B,OAAKvO,KAAK6U,mBAAmBtG,IAGtBvO,KAAKwR,eAAejD,IAFlB,IAaX0G,wBAAyB,SAASlW,EAAW2T,EAAUwC,GACrD,YAAmBna,IAAfma,EACGlV,KAAK0U,iBAAiB3V,EAAW2T,EAAUwC,GAGzClV,KAAK6T,mBAAmB,CAC7BnC,mBAAoB1R,KAAK2T,0BAAyB,SAAS9Z,EAAOvB,GAChE,OACEA,IAAQyG,GACRlF,EAAMsb,KAAOzC,GACb7B,EAAyBhX,EAAMub,IAAK3E,EAAYyE,SAP7ClV,UAWajF,IAAb2X,EACJ1S,KAAK0U,iBAAiB3V,EAAW2T,GAC/B1S,KAAK6T,mBAAmB,CAC7BnC,mBAAoB1R,KAAK2T,0BAAyB,SAAS9Z,EAAOvB,GAChE,OAAOA,IAAQyG,GAAalF,EAAMsb,KAAOzC,OAHW1S,KAQrDA,KAAK0U,iBAAiB3V,GACpBiB,KAAK6T,mBAAmB,CAC7BnC,mBAAoB1R,KAAK2T,0BAAyB,SAAS9Z,EAAOvB,GAChE,OAAOA,IAAQyG,OAH2BiB,MAYhDqV,sBAAuB,SAAS9G,GAC9B,OAAOvO,KAAK0R,mBAAmBnD,IAAc,IAQ/C+G,qBAAsB,SAASvW,EAAW2T,GACxC,OAAO1S,KAAK0R,mBAAmB3S,IAAciB,KAAK0R,mBAAmB3S,GAAW2T,IAYlFiB,yBAA0B,SAAkC5U,GAC1D,QAAkBhE,IAAdgE,EACF,OAAK2R,EAAc1Q,KAAK0R,oBAGjB,GAFE1R,KAAK0R,mBAGT,GAAyB,kBAAd3S,EAChB,OAAOlE,EAAKmF,KAAK0R,mBAAoB,CAAC3S,IACjC,GAAyB,oBAAdA,EAA0B,CAC1C,IAAIwW,GAAa,EACb7D,EAAqB1R,KAAK0R,mBAC1B8D,EAAwB5d,OAAOE,KAAK4Z,GAAoBnW,QAAO,SAASka,EAAMnd,GAChF,IAAIma,EAAYf,EAAmBpZ,GAC/Bod,EAAe,GAkBnB,OAhBAjD,EAAYA,GAAa,GACzB7a,OAAOE,KAAK2a,GAAWpa,SAAQ,SAASqa,GACtC,IAAIiD,EAASlD,EAAUC,IAAa,GAChCkD,EAAY,GAChBD,EAAOtd,SAAQ,SAASwB,GACAkF,EAAU,CAACqW,IAAKvb,EAAOsb,GAAIzC,GAAWpa,EAAK,YAC3Csd,EAAU7O,KAAKlN,MAEnC+b,EAAUle,SAAWie,EAAOje,SAC9B6d,GAAa,GAEfG,EAAahD,GAAYkD,KAG3BH,EAAKnd,GAAOod,EAELD,IACN,IAEH,OAAIF,EAAmBC,EAChBxV,KAAK0R,qBAUhBmE,SAAU,SAAkB9C,GAC1B,OAAI/S,KAAK6U,mBAAmB9B,GACnB/S,KAGFA,KAAK6T,mBAAmB,CAC7BzC,OAAQpR,KAAKoR,OAAOpZ,OAAO,CAAC+a,OAUhC+C,oBAAqB,SAA6B/C,GAChD,OAAI/S,KAAK+U,mBAAmBhC,GACnB/S,KAGFA,KAAK6T,mBAAmB,CAC7BxC,kBAAmBrR,KAAKqR,kBAAkBrZ,OAAO,CAAC+a,OAWtDgD,qBAAsB,SAA8BC,GAClD,GAAIhW,KAAKiW,oBAAoBD,EAAkB7c,MAC7C,MAAM,IAAIqG,MACR,+DAAiEwW,EAAkB7c,KAAO,KAG9F,OAAO6G,KAAK6T,mBAAmB,CAC7BvC,mBAAoBtR,KAAKsR,mBAAmBtZ,OAAO,CAACge,OAUxDE,mBAAoB,SAA4BnD,EAAOlZ,GACrD,IAAKmG,KAAK6U,mBAAmB9B,GAC3B,MAAM,IAAIvT,MAAMuT,EAAQ,uEAE1B,OAAInC,EAAeuF,UAAUnW,KAAKuR,kBAAmBwB,EAAOlZ,GAAemG,KAEpEA,KAAK6T,mBAAmB,CAC7BtC,kBAAmBX,EAAewF,cAAcpW,KAAKuR,kBAAmBwB,EAAOlZ,MAUnFwc,qBAAsB,SAA8BtD,EAAOlZ,GACzD,IAAKmG,KAAK6U,mBAAmB9B,GAC3B,MAAM,IAAIvT,MAAMuT,EAAQ,uEAE1B,OAAInC,EAAeuF,UAAUnW,KAAKwR,eAAgBuB,EAAOlZ,GAAemG,KAEjEA,KAAK6T,mBAAmB,CAC7BrC,eAAgBZ,EAAewF,cAAcpW,KAAKwR,eAAgBuB,EAAOlZ,MAU7Eyc,8BAA+B,SAAuCvD,EAAOlZ,GAC3E,IAAKmG,KAAK+U,mBAAmBhC,GAC3B,MAAM,IAAIvT,MACRuT,EAAQ,kFAGZ,OAAInC,EAAeuF,UAAUnW,KAAKyR,6BAA8BsB,EAAOlZ,GAAemG,KAE/EA,KAAK6T,mBAAmB,CAC7BpC,6BAA8Bb,EAAewF,cAC3CpW,KAAKyR,6BAA8BsB,EAAOlZ,MAQhD0c,iBAAkB,SAA0BC,GAC1C,GAAIxW,KAAKyW,aAAaD,GAAM,OAAOxW,KAEnC,IAAI0W,EAAe,CACjB/E,eAAgB3R,KAAK2R,eAAe3Z,OAAOwe,IAG7C,OAAOxW,KAAK6T,mBAAmB6C,IASjCC,YAAa,SAAqB5D,GAChC,OAAK/S,KAAK6U,mBAAmB9B,GAItB/S,KAAKmT,iBAAiBJ,GAAOc,mBAAmB,CACrDzC,OAAQpR,KAAKoR,OAAOnZ,QAAO,SAASuB,GAClC,OAAOA,IAAMuZ,OALR/S,MAgBX4W,uBAAwB,SAAgC7D,GACtD,OAAK/S,KAAK+U,mBAAmBhC,GAItB/S,KAAKmT,iBAAiBJ,GAAOc,mBAAmB,CACrDxC,kBAAmBrR,KAAKqR,kBAAkBpZ,QAAO,SAASuB,GACxD,OAAOA,IAAMuZ,OALR/S,MAgBX6W,wBAAyB,SAAiC9D,GACxD,OAAK/S,KAAKiW,oBAAoBlD,GAIvB/S,KAAKmT,iBAAiBJ,GAAOc,mBAAmB,CACrDvC,mBAAoBtR,KAAKsR,mBAAmBrZ,QAAO,SAASuB,GAC1D,OAAOA,EAAEL,OAAS4Z,OALb/S,MAkBX8W,sBAAuB,SAA+B/D,EAAOlZ,GAC3D,IAAKmG,KAAK6U,mBAAmB9B,GAC3B,MAAM,IAAIvT,MAAMuT,EAAQ,uEAE1B,OAAKnC,EAAeuF,UAAUnW,KAAKuR,kBAAmBwB,EAAOlZ,GAEtDmG,KAAK6T,mBAAmB,CAC7BtC,kBAAmBX,EAAemG,iBAAiB/W,KAAKuR,kBAAmBwB,EAAOlZ,KAHRmG,MAa9EgX,wBAAyB,SAAiCjE,EAAOlZ,GAC/D,IAAKmG,KAAK6U,mBAAmB9B,GAC3B,MAAM,IAAIvT,MAAMuT,EAAQ,uEAE1B,OAAKnC,EAAeuF,UAAUnW,KAAKwR,eAAgBuB,EAAOlZ,GAEnDmG,KAAK6T,mBAAmB,CAC7BrC,eAAgBZ,EAAemG,iBAAiB/W,KAAKwR,eAAgBuB,EAAOlZ,KAHLmG,MAa3EiX,iCAAkC,SAA0ClE,EAAOlZ,GACjF,IAAKmG,KAAK+U,mBAAmBhC,GAC3B,MAAM,IAAIvT,MACRuT,EAAQ,kFAEZ,OAAKnC,EAAeuF,UAAUnW,KAAKyR,6BAA8BsB,EAAOlZ,GAEjEmG,KAAK6T,mBAAmB,CAC7BpC,6BAA8Bb,EAAemG,iBAC3C/W,KAAKyR,6BAA8BsB,EAAOlZ,KAJyCmG,MAazFkX,oBAAqB,SAA6BV,GAChD,IAAKxW,KAAKyW,aAAaD,GAAM,OAAOxW,KAEpC,IAAI0W,EAAe,CACjB/E,eAAgB3R,KAAK2R,eAAe1Z,QAAO,SAASwO,GAClD,OAAOA,IAAM+P,MAIjB,OAAOxW,KAAK6T,mBAAmB6C,IAWjCS,iBAAkB,SAA0BpE,EAAOlZ,GACjD,OAAOmG,KAAKoX,sBAAsBrE,EAAOlZ,IAU3Cud,sBAAuB,SAA+BrE,EAAOlZ,GAC3D,GAAImG,KAAKiW,oBAAoBlD,GAC3B,OAAO/S,KAAKoT,kCAAkCL,EAAOlZ,GAChD,GAAImG,KAAK6U,mBAAmB9B,GACjC,OAAO/S,KAAKqX,iCAAiCtE,EAAOlZ,GAC/C,GAAImG,KAAK+U,mBAAmBhC,GACjC,OAAO/S,KAAKsX,iCAAiCvE,EAAOlZ,GAGtD,MAAM,IAAI2F,MAAM,sCAAwCuT,EACtD,+FASJsE,iCAAkC,SAA0CtE,EAAOlZ,GACjF,IAAKmG,KAAK6U,mBAAmB9B,GAC3B,MAAM,IAAIvT,MAAMuT,EAAQ,uEAG1B,OAAO/S,KAAK6T,mBAAmB,CAC7BtC,kBAAmBX,EAAeuG,iBAAiBnX,KAAKuR,kBAAmBwB,EAAOlZ,MAUtF0d,6BAA8B,SAAsCxE,EAAOlZ,GACzE,IAAKmG,KAAK6U,mBAAmB9B,GAC3B,MAAM,IAAIvT,MAAMuT,EAAQ,uEAG1B,OAAO/S,KAAK6T,mBAAmB,CAC7BrC,eAAgBZ,EAAeuG,iBAAiBnX,KAAKwR,eAAgBuB,EAAOlZ,MAUhFyd,iCAAkC,SAA0CvE,EAAOlZ,GACjF,IAAKmG,KAAK+U,mBAAmBhC,GAC3B,MAAM,IAAIvT,MACRuT,EAAQ,kFAGZ,OAAO/S,KAAK6T,mBAAmB,CAC7BpC,6BAA8Bb,EAAeuG,iBAC3CnX,KAAKyR,6BAA8BsB,EAAOlZ,MAUhDuZ,kCAAmC,SAA2CL,EAAOlZ,GACnF,IAAKmG,KAAKiW,oBAAoBlD,GAC5B,MAAM,IAAIvT,MACRuT,EAAQ,mFAGZ,IAAIyE,EAAYxX,KAAKyX,+BAA+BzX,KAAK0X,2BAA2B3E,IAEhF4B,EAAM,GAyBV,YAvByE5Z,IAA9CiF,KAAK4R,8BAA8BmB,IAC5D/S,KAAK4R,8BAA8BmB,GAAOrb,OAAS,IAGnDsI,KAAK4R,8BAA8BmB,GAAO,KAAOlZ,GAK2B,IAA5EmG,KAAK4R,8BAA8BmB,GAAO,GAAG7X,QAAQrB,EAAQ2d,KAI3B,IAA9B3d,EAAMqB,QAAQsc,GAEhB7C,EAAI5B,GAAS,GAEb4B,EAAI5B,GAAS,CAAClZ,EAAMuK,MAAM,EAAGvK,EAAM8d,YAAYH,KAGjD7C,EAAI5B,GAAS,CAAClZ,GAGTmG,KAAK6T,mBAAmB,CAC7BjC,8BAA+BtB,EAAa,GAAIqE,EAAK3U,KAAK4R,kCAW9DgG,+BAAgC,SAAS7E,EAAO3X,GAC9C,GAAI4E,KAAK6X,2BAA2B9E,GAClC,MAAM,IAAIvT,MAAMuT,EAAQ,wBAE1B,IAAK/S,KAAKiW,oBAAoBlD,GAC5B,MAAM,IAAIvT,MAAMuT,EAAQ,oFAE1B,IAAI4B,EAAM,GAEV,OADAA,EAAI5B,GAAS,CAAC3X,GACP4E,KAAK6T,mBAAmB,CAC7BjC,8BAA+BtB,EAAa,GAAIqE,EAAK3U,KAAK4R,kCAU9DkG,kCAAmC,SAAS/E,GAC1C,IAAK/S,KAAK6X,2BAA2B9E,GACnC,OAAO/S,KAET,IAAI2U,EAAM,GAEV,OADAA,EAAI5B,GAAS,GACN/S,KAAK6T,mBAAmB,CAC7BjC,8BAA+BtB,EAAa,GAAIqE,EAAK3U,KAAK4R,kCAS9DmG,oBAAqB,SAA6BvB,GAChD,OAAIxW,KAAKyW,aAAaD,GACbxW,KAAKkX,oBAAoBV,GAG3BxW,KAAKuW,iBAAiBC,IAQ/BzB,mBAAoB,SAAShC,GAC3B,OAAO/S,KAAKqR,kBAAkBnW,QAAQ6X,IAAU,GAQlDkD,oBAAqB,SAAS1H,GAC5B,YAAsDxT,IAA/CiF,KAAK0X,2BAA2BnJ,IAQzCsG,mBAAoB,SAAS9B,GAC3B,OAAO/S,KAAKoR,OAAOlW,QAAQ6X,IAAU,GAWvCiF,eAAgB,SAAwBjF,EAAOlZ,GAC7C,QAAKmG,KAAK6U,mBAAmB9B,IAGtBnC,EAAeuF,UAAUnW,KAAKuR,kBAAmBwB,EAAOlZ,IAYjEoe,iBAAkB,SAA0BlF,EAAOlZ,GACjD,QAAKmG,KAAK6U,mBAAmB9B,IAGtBnC,EAAeuF,UAAUnW,KAAKwR,eAAgBuB,EAAOlZ,IAW9Dqe,0BAA2B,SAAmCnF,EAAOlZ,GACnE,QAAKmG,KAAK+U,mBAAmBhC,IAGtBnC,EAAeuF,UAAUnW,KAAKyR,6BAA8BsB,EAAOlZ,IAW5Ege,2BAA4B,SAAoC9E,EAAOlZ,GACrE,IAAKmG,KAAKiW,oBAAoBlD,GAC5B,OAAO,EAGT,IAAIoF,EAAcnY,KAAKkT,0BAA0BH,GAEjD,OAAKlZ,GAIkC,IAAhCse,EAAYjd,QAAQrB,GAHlBse,EAAYzgB,OAAS,GAehCgd,iBAAkB,SAA0B3V,EAAW2T,EAAU7Y,GAC/D,QAAckB,IAAVlB,QAAoCkB,IAAb2X,EACzB,QAAS1S,KAAK0R,mBAAmB3S,GAGnC,IAAIqZ,EACFpY,KAAK0R,mBAAmB3S,SACyBhE,IAAjDiF,KAAK0R,mBAAmB3S,GAAW2T,GAErC,QAAc3X,IAAVlB,IAAwBue,EAC1B,OAAOA,EAGT,IAjrCenc,EAAOoc,EAirClBjG,EAAc3B,EAAY5W,GAC1Bye,OAEFvd,KAprCakB,EAmrCH+D,KAAK0R,mBAAmB3S,GAAW2T,GAnrCzB2F,EAmrCoCjG,EAlrCrD5B,EAAKvU,GAAO,SAASsc,GAC1B,OAAO1H,EAAyB0H,EAAcF,OAorC9C,OAAOD,GAAqBE,GAQ9B7B,aAAc,SAAsBD,GAClC,OAA6C,IAAtCxW,KAAK2R,eAAezW,QAAQsb,IASrCgC,4BAA6B,WAC3B,IAAI3G,EAAO7R,KAGPyY,EAAkClI,EACpC3Y,OAAOE,KAAKkI,KAAK0R,oBAAoBzZ,QAAO,SAAS8a,GACnD,OAAOnb,OAAOE,KAAK+Z,EAAKH,mBAAmBqB,IAAQrb,OAAS,KAE9DsI,KAAKqR,mBAGP,OAAOzZ,OAAOE,KAAKkI,KAAKyR,8BAA8BxZ,QAAO,SAAS8a,GACpE,OAAOlB,EAAKJ,6BAA6BsB,GAAOrb,OAAS,KAExDM,OAAOygB,GACPzgB,OAAOgI,KAAK0Y,iCASjBA,6BAA8B,WAC5B,IAAI7G,EAAO7R,KACX,OAAOuQ,EAGLvQ,KAAKsR,mBAAmBhX,KAAI,SAASyY,GAAS,OAAOA,EAAM5Z,QAC3DvB,OAAOE,KAAKkI,KAAK4R,+BAA+B3Z,QAAO,SAAS8a,GAC9D,OAAOlB,EAAKD,8BAA8BmB,GAAOrb,OAAS,OAShEihB,8BAA+B,WAC7B,IAAIC,EAAgB5Y,KAAKwY,8BAEzB,OAAOxY,KAAKqR,kBAAkBpZ,QAAO,SAASuB,GAC5C,OAAqC,IAA9Bof,EAAc1d,QAAQ1B,OAIjCqf,kBAAmB,CACjB,QACA,SAAU,oBAAqB,oBAC/B,iBAAkB,+BAClB,qBAAsB,iBAAkB,qBAAsB,iCAEhEC,eAAgB,WACd,IAAID,EAAoB7Y,KAAK6Y,kBAEzBE,EAAc,GAEdlH,EAAO7R,KAQX,OAPApI,OAAOE,KAAKkI,MAAM3H,SAAQ,SAASyZ,GACjC,IAAIoD,EAAarD,EAAKC,IACwB,IAA1C+G,EAAkB3d,QAAQ4W,SAAoC/W,IAAfma,IACjD6D,EAAYjH,GAAaoD,MAItB6D,GAYTC,kBAAmB,SAAsBC,EAAWpf,GAClD,GAAImG,KAAKiZ,KAAepf,EAAO,OAAOmG,KAEtC,IAAI0W,EAAe,GAInB,OAFAA,EAAauC,GAAapf,EAEnBmG,KAAK6T,mBAAmB6C,IAQjC7C,mBAAoB,SAA4BzF,GAC9C,IAAKA,EAAQ,OAAOpO,KAEpB,IAAIiD,EAAQ+N,EAAiBqC,SAASrT,KAAMoO,GAE5C,GAAInL,EACF,MAAMA,EAGR,IAAI4O,EAAO7R,KACPkZ,EAAkBlI,EAAiBE,cAAc9C,GACjD+K,EAAsBvhB,OAAOE,KAAKkI,MAAMzE,QAAO,SAAS+I,EAAKhM,GAE/D,OADAgM,EAAIhM,GAAOuZ,EAAKvZ,GACTgM,IACN,IAEC8U,EAAkBxhB,OAAOE,KAAKohB,GAAiB3d,QACjD,SAAS8d,EAAU/gB,GACjB,IAAIghB,OAA2Cve,IAAlBse,EAAS/gB,GAClCihB,OAA8Cxe,IAAzBme,EAAgB5gB,GAEzC,OAAIghB,IAA2BC,EACtB1e,EAAKwe,EAAU,CAAC/gB,KAGrBihB,IACFF,EAAS/gB,GAAO4gB,EAAgB5gB,IAG3B+gB,KAETF,GAGF,OAAO,IAAInZ,KAAKmF,YAAYiU,IAS9Bnc,UAAW,WACT,YAAkBlC,IAAdiF,KAAK3F,KACA2F,KAGFA,KAAKkU,QAAQ,IAQtBsF,4BAA6B,SAASxD,GACpC,OAAOA,EAAkByD,QAAU,CAAC,iBAAkB,aASxDhC,+BAAgC,SAASzB,GACvC,OAAOA,EAAkBwB,WAAa,OASxCkC,yBAA0B,SAAS1D,GACjC,OAAOA,EAAkBhD,UAAY,MASvC2G,gCAAiC,SAAS3D,GACxC,MAAiD,mBAAtCA,EAAkB4D,iBACpB5D,EAAkB4D,iBAU7BlC,2BAA4B,SAASmC,GACnC,OAAOrJ,EACLxQ,KAAKsR,oBACL,SAAS9X,GACP,OAAOA,EAAEL,OAAS0gB,MAUxBC,+BAAgC,SAASvL,GACvC,IAAKvO,KAAKiW,oBAAoB1H,GAC5B,MAAO,GAGT,IAAIwL,EAAa/Z,KAAKkT,0BAA0B3E,GAAW,GAC3D,IAAKwL,EAAY,MAAO,GAExB,IAAIvC,EAAYxX,KAAKyX,+BACnBzX,KAAK0X,2BAA2BnJ,IAGlC,OADWwL,EAAWze,MAAMkc,GAChBld,KAAI,SAAS0f,GACvB,OAAOA,EAAKC,WAIhBve,SAAU,WACR,OAAOkM,KAAKI,UAAUhI,KAAM,KAAM,KAatClE,EAAOC,QAAUiV,G,kCC39CjB,IAAIZ,EAAQC,EAAQ,MAChBC,EAAeD,EAAQ,MACvB6J,EAAU7J,EAAQ,MAClB8J,EAAU9J,EAAQ,MAClBG,EAAOH,EAAQ,MACf+J,EAAY/J,EAAQ,MACpBgK,EAAahK,EAAQ,MAErBiK,EAA2BjK,EAAQ,MA8CvC,SAASkK,EAAWC,GAClB,IAAInd,EAAU,GAMd,OAJAmd,EAAWniB,SAAQ,SAAS+c,EAAKqF,GAC/Bpd,EAAQ+X,GAAOqF,KAGVpd,EAGT,SAASqd,EAAiBC,EAAMC,EAAYtiB,GACtCsiB,GAAcA,EAAWtiB,KAC3BqiB,EAAKE,MAAQD,EAAWtiB,IA8J5B,SAASwiB,EAAc1d,EAAOR,GAC5B,IAAIme,EAAkBne,EAAQ,GAE9BoD,KAAKgb,YAAcpe,EAEnB,IAAIiV,EAAO7R,KAGXpI,OAAOE,KAAKijB,GAAiB1iB,SAAQ,SAASC,GAC5CuZ,EAAKvZ,GAAOyiB,EAAgBziB,MA4I9B0H,KAAKib,iBAAmBre,EAAQrB,QAAO,SAAS2f,EAAKC,GACnD,YAAmCpgB,IAA5BogB,EAAOF,iBACVC,EACAA,EAAMC,EAAOF,mBAChB,GAMHjb,KAAKqR,kBAAoB,GAKzBrR,KAAKsR,mBAAqBlU,EAAMkU,mBAAmBhX,KAAI,WACrD,MAAO,MAMT0F,KAAKoR,OAAS,GAEd,IAAIC,EAAoBjU,EAAMob,8BAE1B4C,EAAgBb,EAAWnd,EAAMgU,QACjCiK,EAA2Bd,EAAWnd,EAAMiU,mBAC5CiK,EAAwB,EAKxBC,EAAaR,EAAgB3J,QAAU,GAE3CxZ,OAAOE,KAAKyjB,GAAYljB,SAAQ,SAASmjB,GACvC,IAxUFlK,EACAmK,EAuUMC,EAAmBH,EAAWC,GAE9BxF,GA1UN1E,EA2UIlU,EAAMkU,mBA1UVmK,EA2UID,EAzUGhL,EAAKc,GAAoB,SAC9B0E,GAGA,OADiBA,EAAkBwE,YAAc,IAC/Btf,QAAQugB,IAA8B,MAwUxD,GAAIzF,EAAmB,CAGrB,IAAI2F,EAAa3F,EAAkBwE,WAAWtf,QAAQsgB,GAClDI,EAAmBxB,EAAUhd,EAAMkU,oBAAoB,SAAS9X,GAClE,OAAOA,EAAEL,OAAS6c,EAAkB7c,QAEtC0Y,EAAKP,mBAAmBsK,GAAkBD,GAAc,CACtD5c,UAAWyc,EACXnS,KAAMqS,EACNG,WAAYd,EAAgBe,2BAEzB,CACL,IAEIC,EAFAC,GAAoE,IAA/C5e,EAAMiU,kBAAkBnW,QAAQsgB,GACrDS,GAAyD,IAApC7e,EAAMgU,OAAOlW,QAAQsgB,GAG1CQ,IACFD,EAAWV,EAAyBG,GACpC3J,EAAKR,kBAAkB0K,GAAY,CACjC5iB,KAAMqiB,EACNnS,KAAMqS,EACNG,WAAYd,EAAgBe,uBAE9BpB,EAAiB7I,EAAKR,kBAAkB0K,GAAWhB,EAAgBmB,aAAcV,IAE/ES,IACFF,EAAWX,EAAcI,GACzB3J,EAAKT,OAAO2K,GAAY,CACtB5iB,KAAMqiB,EACNnS,KAAMqS,EACNG,WAAYd,EAAgBe,uBAE9BpB,EAAiB7I,EAAKT,OAAO2K,GAAWhB,EAAgBmB,aAAcV,QAM5Exb,KAAKsR,mBAAqB6I,EAAQna,KAAKsR,oBAGvCD,EAAkBhZ,SAAQ,SAAS8jB,GACjC,IAAIhB,EAASve,EAAQ0e,GACjBlK,EAAS+J,GAAUA,EAAO/J,OAAS+J,EAAO/J,OAAS,GACnD4E,EAAoB5Y,EAAMsa,2BAA2ByE,GAGzDvkB,OAAOE,KAAKsZ,GAAQ/Y,SAAQ,SAAS+jB,GACnC,IAEIL,EAFAM,EAAejL,EAAOgL,GAI1B,GAAIpG,EAAmB,CACrB+F,EAAW3B,EAAUhd,EAAMkU,oBAAoB,SAAS9X,GACtD,OAAOA,EAAEL,OAAS6c,EAAkB7c,QAEtC,IAAImjB,EAAiBlC,EAAUvI,EAAKP,mBAAmByK,IAAW,SAASviB,GACzE,OAAOA,EAAEuF,YAAcqd,KAIzB,IAAwB,IAApBE,EACF,OAGFzK,EAAKP,mBAAmByK,GAAUO,GAAgBjT,KAAO+G,EACvD,GACAyB,EAAKP,mBAAmByK,GAAUO,GAAgBjT,KAClDgT,OAEG,CACLN,EAAWV,EAAyBe,GAEpC,IAAIG,EAAsBxB,EAAgB3J,QAAU2J,EAAgB3J,OAAOgL,IAAW,GAEtFvK,EAAKR,kBAAkB0K,GAAY,CACjC5iB,KAAMijB,EACN/S,KAAMiH,EAAa,GAAI+L,EAAcE,GACrCV,WAAYV,EAAOW,uBAErBpB,EAAiB7I,EAAKR,kBAAkB0K,GAAWZ,EAAOe,aAAcE,GAEpEhf,EAAMqU,6BAA6B2K,IACrChf,EAAMqU,6BAA6B2K,GAAQ/jB,SAAQ,SAASmkB,IAErD3K,EAAKR,kBAAkB0K,GAAU1S,KAAKmT,IACzCpf,EAAMqU,6BAA6B2K,GAAQlhB,QAAQshB,IAAoB,IACvE3K,EAAKR,kBAAkB0K,GAAU1S,KAAKmT,GAAmB,UAMnElB,OAIFle,EAAMsb,+BAA+BrgB,SAAQ,SAASokB,GACpD,IAAIzG,EAAoB5Y,EAAMsa,2BAA2B+E,GACrDjF,EAAYpa,EAAMqa,+BAA+BzB,GAEjD/C,EAAoB7V,EAAM8V,0BAA0BuJ,GAGxD,KAAiC,IAA7BxJ,EAAkBvb,QAAgBub,EAAkB,GAAG3X,MAAMkc,GAAW9f,OAAS,GAArF,CAIA,IAAIyjB,EAASve,EAAQ0e,GACjBlK,EAAS+J,GAAUA,EAAO/J,OAC1B+J,EAAO/J,OACP,GACJxZ,OAAOE,KAAKsZ,GAAQ/Y,SAAQ,SAAS+jB,GACnC,IAAIC,EAAejL,EAAOgL,GACtBL,EAAW3B,EAAUhd,EAAMkU,oBAAoB,SAAS9X,GAC1D,OAAOA,EAAEL,OAAS6c,EAAkB7c,QAElCmjB,EAAiBlC,EAAUvI,EAAKP,mBAAmByK,IAAW,SAASviB,GACzE,OAAOA,EAAEuF,YAAcqd,KAIzB,IAAwB,IAApBE,EAAJ,CAYA,IAAII,EAAc,GAElB,GAAIzJ,EAAkBvb,OAAS,EAAG,CAChC,IAAIilB,EAAO1J,EAAkB,GAAG3X,MAAMkc,GAAW,GACjDkF,EAAYC,GAAQ9K,EAAKP,mBAAmByK,GAAUO,GAAgBjT,KAAKsT,GAG7E9K,EAAKP,mBAAmByK,GAAUO,GAAgBjT,KAAOiH,EACvDoM,EACAL,EACAxK,EAAKP,mBAAmByK,GAAUO,GAAgBjT,UAItDiS,QAIF1jB,OAAOE,KAAKsF,EAAMoU,gBAAgBnZ,SAAQ,SAASkW,GACjD,IAAIqO,EAAWxf,EAAMoU,eAAejD,GAChCwN,EAAWX,EAAc7M,GAE7BsD,EAAKT,OAAO2K,GAAY,CACtB5iB,KAAMoV,EACNlF,KAAM0R,EAAgB3J,OAAO7C,GAC7BsN,WAAYd,EAAgBe,uBAE9Bc,EAASvkB,SAAQ,SAASwkB,GACxBhL,EAAKT,OAAO2K,GAAYlK,EAAKT,OAAO2K,IAAa,CAAC5iB,KAAMoV,GACxDsD,EAAKT,OAAO2K,GAAU1S,KAAOwI,EAAKT,OAAO2K,GAAU1S,MAAQ,GAC3DwI,EAAKT,OAAO2K,GAAU1S,KAAKwT,GAAc,QAO7C7c,KAAKsR,mBAAqBtR,KAAKsR,mBAAmBhX,IAAIggB,EAAyBld,IAK/E4C,KAAKoR,OAAS+I,EAAQna,KAAKoR,QAI3BpR,KAAKqR,kBAAoB8I,EAAQna,KAAKqR,mBAEtCrR,KAAK8c,OAAS1f,EAgEhB,SAAS2f,EAAQC,EAAQC,GACvB,IAAKA,EAAK5T,MAA6B,IAArB4T,EAAK5T,KAAK3R,OAC1B,OAAOulB,EAGT,IAAIC,EAAWD,EAAK5T,KAAK/O,KAAI,SAAS6iB,GACpC,OAAOJ,EAAQC,EAAQG,MAErBC,EAAiBJ,EAAOE,GAE5B,OADc9M,EAAM,GAAI6M,EAAM,CAAC5T,KAAM+T,IAgHvC,SAASC,EAAyBC,EAAW/O,GAC3C,IAAIlF,EAAOmH,EAAK8M,GAAW,SAASvK,GAClC,OAAOA,EAAM5Z,OAASoV,KAExB,OAAOlF,GAAQA,EAAKwR,MAiFtB,SAAS0C,EAAcngB,EAAOogB,EAAMzf,EAAe5E,EAAMskB,GACvD,IAAI1K,EAAQvC,EAAKiN,GAAe,SAASjkB,GACvC,OAAOA,EAAEL,OAAS4E,KAEhB2f,EAAQ3K,GAASA,EAAM1J,MAAQ0J,EAAM1J,KAAKlQ,GAAQ4Z,EAAM1J,KAAKlQ,GAAQ,EACrE0iB,EAAc9I,GAASA,EAAM8I,aAAe,EAEhD,MAAO,CACL2B,KAAMA,EACNzf,cAAeA,EACf5E,KAAMA,EACNukB,MAAOA,EACP7B,WAAYA,GAjRhBf,EAAcjiB,UAAU8kB,eAAiB,SAASxkB,GAChD,SAASykB,EAAU7K,GACjB,OAAOA,EAAM5Z,OAASA,EAGxB,OAAOqX,EAAKxQ,KAAKoR,OAAQwM,IACvBpN,EAAKxQ,KAAKqR,kBAAmBuM,IAC7BpN,EAAKxQ,KAAKsR,mBAAoBsM,IA6DlC9C,EAAc+C,aAAe,CAAC,iBAAkB,aAAc,YAmD9D/C,EAAcjiB,UAAUilB,eAAiB,SAAS/e,EAAWgf,GAC3D,IAAIC,EAvGN,SAAsCphB,EAASmC,GAC7C,SAAS6e,EAAU7K,GACjB,OAAOA,EAAM5Z,OAAS4F,EAGxB,GAAInC,EAAQkgB,OAAOjI,mBAAmB9V,GAAY,CAChD,IAAIgU,EAAQvC,EAAK5T,EAAQwU,OAAQwM,GACjC,OAAK7K,EAEEnb,OAAOE,KAAKib,EAAM1J,MAAM/O,KAAI,SAASnB,GAC1C,MAAO,CACLA,KAAMA,EACNukB,MAAO3K,EAAM1J,KAAKlQ,GAClBgd,UAAWvZ,EAAQkgB,OAAO9E,eAAejZ,EAAW5F,GACpD8kB,WAAYrhB,EAAQkgB,OAAO7E,iBAAiBlZ,EAAW5F,OAPxC,GAUd,GAAIyD,EAAQkgB,OAAO/H,mBAAmBhW,GAAY,CACvD,IAAIod,EAAmB3L,EAAK5T,EAAQyU,kBAAmBuM,GACvD,OAAKzB,EAEEvkB,OAAOE,KAAKqkB,EAAiB9S,MAAM/O,KAAI,SAASnB,GACrD,MAAO,CACLA,KAAMA,EACNukB,MAAOvB,EAAiB9S,KAAKlQ,GAC7Bgd,UAAWvZ,EAAQkgB,OAAO5E,0BAA0BnZ,EAAW5F,OANrC,GASzB,GAAIyD,EAAQkgB,OAAO7G,oBAAoBlX,GAC5C,OAAOyR,EAAK5T,EAAQ0U,mBAAoBsM,GA0ExBM,CAA6Ble,KAAMjB,GACrD,GAAKif,EAAL,CAIA,IAAIG,EAAU7N,EAAa,GAAIyN,EAAM,CAACtE,OAAQqB,EAAc+C,eAE5D,GAAI9jB,MAAMC,QAAQmkB,EAAQ1E,QAAS,CACjC,IAAI2E,EAAQ/D,EAAW8D,EAAQ1E,OAAQqB,EAAc+C,cACrD,OAAI9jB,MAAMC,QAAQgkB,GACT9D,EAAQ8D,EAAaI,EAAM,GAAIA,EAAM,IAGvCrB,GAAQ,SAASsB,GACtB,OAAOnE,EAAQmE,EAAyBD,EAAM,GAAIA,EAAM,MACvDJ,GACE,GAA8B,oBAAnBG,EAAQ1E,OACxB,OAAI1f,MAAMC,QAAQgkB,GACTA,EAAYM,KAAKH,EAAQ1E,QAG3BsD,GAAQ,SAAS1T,GACtB,OAxEN,SAAuB+U,EAAO/U,GAC5B,OAAOA,EAAKiV,KAAKF,GAuENG,CAAcJ,EAAQ1E,OAAQpQ,KACpC2U,GAEL,MAAM,IAAIxe,MACR,uHAWJsb,EAAcjiB,UAAU2lB,cAAgB,SAASzf,GAC/C,OAAIiB,KAAK8c,OAAOjI,mBAAmB9V,GAC1Bse,EAAyBrd,KAAKoR,OAAQrS,GACpCiB,KAAK8c,OAAO/H,mBAAmBhW,GACjCse,EAAyBrd,KAAKqR,kBAAmBtS,QADnD,GAmCT+b,EAAcjiB,UAAU4F,eAAiB,WACvC,IAAIrB,EAAQ4C,KAAK8c,OACblgB,EAAUoD,KACVye,EAAM,GA8CV,OA5CA7mB,OAAOE,KAAKsF,EAAMmU,mBAAmBlZ,SAAQ,SAAS0F,GACpDX,EAAMmU,kBAAkBxT,GAAe1F,SAAQ,SAASc,GACtDslB,EAAI1X,KAAKwW,EAAcngB,EAAO,QAASW,EAAe5E,EAAMyD,EAAQwU,eAIxExZ,OAAOE,KAAKsF,EAAMoU,gBAAgBnZ,SAAQ,SAAS0F,GACjDX,EAAMoU,eAAezT,GAAe1F,SAAQ,SAASc,GACnDslB,EAAI1X,KAAKwW,EAAcngB,EAAO,UAAWW,EAAe5E,EAAMyD,EAAQwU,eAI1ExZ,OAAOE,KAAKsF,EAAMqU,8BAA8BpZ,SAAQ,SAAS0F,GAC/DX,EAAMqU,6BAA6B1T,GAAe1F,SAAQ,SAASc,GACjEslB,EAAI1X,KAAKwW,EAAcngB,EAAO,cAAeW,EAAe5E,EAAMyD,EAAQyU,0BAI9EzZ,OAAOE,KAAKsF,EAAMwU,+BAA+BvZ,SAAQ,SAAS0F,GAChEX,EAAMwU,8BAA8B7T,GAAe1F,SAAQ,SAASc,GAClEslB,EAAI1X,KA+DV,SAAmC3J,EAAOW,EAAe5E,EAAMskB,GAC7D,IAAIiB,EAAmBthB,EAAMsa,2BAA2B3Z,GACpDyZ,EAAYpa,EAAMqa,+BAA+BiH,GACjDpjB,EAAQnC,EAAKmC,MAAMkc,GACnBmH,EAAYnO,EAAKiN,GAAe,SAAS1K,GAC3C,OAAOA,EAAM5Z,OAAS4E,KAGpBgV,EAAQzX,EAAMC,QAAO,SAASqjB,EAAmB5E,GACnD,IAAI6E,EACFD,GAAqBpO,EAAKoO,EAAkBvV,MAAM,SAAS7P,GACzD,OAAOA,EAAEL,OAAS6gB,KAEtB,YAAoBjf,IAAb8jB,EAAyBA,EAAWD,IAC1CD,GAECjB,EAAS3K,GAASA,EAAM2K,OAAU,EAClC7B,EAAc9I,GAASA,EAAM8I,aAAe,EAC5CzgB,EAAQ2X,GAASA,EAAM3X,MAAS,GAEpC,MAAO,CACLoiB,KAAM,eACNzf,cAAeA,EACf5E,KAAMiC,EACNsiB,MAAOA,EACP7B,WAAYA,GAxFD3I,CAA0B9V,EAAOW,EAAe5E,EAAMyD,EAAQ0U,2BAK3E1Z,OAAOE,KAAKsF,EAAMsU,oBAAoBrZ,SAAQ,SAAS0F,GACrD,IAAI0U,EAAYrV,EAAMsU,mBAAmB3T,GACzCnG,OAAOE,KAAK2a,GAAWpa,SAAQ,SAASqa,GACtCD,EAAUC,GAAUra,SAAQ,SAASwB,GACnC4kB,EAAI1X,KAAK,CACPyW,KAAM,UACNzf,cAAeA,EACf5E,KAAMU,EACNilB,aAAcjlB,EACd6Y,SAAUA,aAMlBtV,EAAMuU,eAAetZ,SAAQ,SAASc,GACpCslB,EAAI1X,KAAK,CAACyW,KAAM,MAAOzf,cAAe,QAAS5E,KAAMA,OAGhDslB,GAoET3iB,EAAOC,QAAU+e,G,kCCx5BjB,SAASiE,EAAiBllB,EAAOmlB,GAC/B,GAAInlB,IAAUmlB,EAAO,CACnB,IAAIC,OAAyBlkB,IAAVlB,EACfqlB,EAAsB,OAAVrlB,EAEZslB,OAAyBpkB,IAAVikB,EACfI,EAAsB,OAAVJ,EAEhB,IACII,GAAavlB,EAAQmlB,GACtBE,GAAaC,IACbF,EAED,OAAO,EAET,IACIC,GAAarlB,EAAQmlB,GACtBI,GAAaH,IACbE,EAED,OAAQ,EAGZ,OAAO,EAqDTrjB,EAAOC,QA7CP,SAAiBsjB,EAAYC,EAAWC,GACtC,IAAKxlB,MAAMC,QAAQqlB,GACjB,MAAO,GAGJtlB,MAAMC,QAAQulB,KACjBA,EAAS,IAGX,IAAIpE,EAASkE,EAAW/kB,KAAI,SAAST,EAAOW,GAC1C,MAAO,CACLglB,SAAUF,EAAUhlB,KAAI,SAASmlB,GAC/B,OAAO5lB,EAAM4lB,MAEfjlB,MAAOA,EACPX,MAAOA,MAyBX,OArBAshB,EAAOmD,MAAK,SAAkB1kB,EAAQolB,GAGpC,IAFA,IAAIxkB,GAAS,IAEJA,EAAQZ,EAAO4lB,SAAS9nB,QAAQ,CACvC,IAAI+mB,EAAMM,EAAiBnlB,EAAO4lB,SAAShlB,GAAQwkB,EAAMQ,SAAShlB,IAClE,GAAIikB,EACF,OAAIjkB,GAAS+kB,EAAO7nB,OACX+mB,EAEa,SAAlBc,EAAO/kB,IACDikB,EAEHA,EAMX,OAAO7kB,EAAOY,MAAQwkB,EAAMxkB,SAGvB2gB,EAAO7gB,KAAI,SAASmkB,GACzB,OAAOA,EAAI5kB,W,kCCxEf,IAAI2W,EAAOH,EAAQ,MAQnBvU,EAAOC,QAAU,SAAoB0d,EAAQiG,GAC3C,IAAIC,GAAuBD,GAAY,IAAIplB,KAAI,SAASgkB,GACtD,OAAOA,EAAKhjB,MAAM,QAGpB,OAAOme,EAAOle,QACZ,SAA0BqkB,EAAKtB,GAC7B,IAAIuB,EAAkBvB,EAAKhjB,MAAM,KAE7BwkB,EAAkBtP,EAAKmP,GAAqB,SAC9CI,GAEA,OAAOA,EAAmB,KAAOF,EAAgB,MAGnD,OAAIA,EAAgBnoB,OAAS,IAAMooB,GACjCF,EAAI,GAAG7Y,KAAK8Y,EAAgB,IAC5BD,EAAI,GAAG7Y,KAAK8Y,EAAgB,IACrBD,IAGTA,EAAI,GAAG7Y,KAAK+Y,EAAgB,IAC5BF,EAAI,GAAG7Y,KAAK+Y,EAAgB,IACrBF,KAET,CAAC,GAAI,O,kCCtBT9jB,EAAOC,QAXP,SAAkBikB,EAAMC,GACtBD,EAAKnnB,UAAYjB,OAAOsoB,OAAOD,EAAUpnB,UAAW,CAClDsM,YAAa,CACXtL,MAAOmmB,EACP5nB,YAAY,EACZyO,UAAU,EACVD,cAAc,O,kCCNpB9K,EAAOC,QAAU,S,kCCAjB,IAAIokB,EAAsB9P,EAAQ,MAE9BW,EAAmBX,EAAQ,MAC3ByK,EAAgBzK,EAAQ,MAiC5B,SAAS+P,EAAoBC,EAAQ7lB,EAAOujB,GAC1C,OAAO,IAAIoC,EAAoBE,EAAQ7lB,EAAOujB,GAQhDqC,EAAoBvT,QAAUwD,EAAQ,MAOtC+P,EAAoBD,oBAAsBA,EAO1CC,EAAoBpP,iBAAmBA,EAOvCoP,EAAoBtF,cAAgBA,EAEpChf,EAAOC,QAAUqkB,G,kCCpEjB,IAAIpP,EAAmBX,EAAQ,MAC3ByK,EAAgBzK,EAAQ,MACxBiQ,EAAgBjQ,EAAQ,MACxBkQ,EAAiBlQ,EAAQ,MAEzBmQ,EAASnQ,EAAQ,KACjBoQ,EAAWpQ,EAAQ,MACnBK,EAAgBL,EAAQ,MACxBxV,EAAOwV,EAAQ,MACfD,EAAQC,EAAQ,MAEhBxD,EAAUwD,EAAQ,MAyGtB,SAAS8P,EAAoBE,EAAQ7lB,EAAO2jB,GACJ,oBAA3BkC,EAAOvS,iBAChBuS,EAAOvS,gBAAgB,cAAgBjB,EAAU,KAGnD7M,KAAK0gB,UAAUL,GACf,IAAItC,EAAOI,GAAW,GACtBJ,EAAKvjB,MAAQA,EACbwF,KAAK5C,MAAQ4T,EAAiB6B,KAAKkL,GACnC/d,KAAK2gB,YAAc,KACnB3gB,KAAK4gB,SAAW,EAChB5gB,KAAK6gB,sBAAwB,EAC7B7gB,KAAK8gB,eAAiB,GACtB9gB,KAAK+gB,kBAAoB,EA+tB3B,SAASC,EAAe3mB,GACtB,GAAIA,EAAO,EAAG,MAAM,IAAImF,MAAM,2BAO9B,OALAQ,KAAKihB,QAAQ,CACX7jB,MAAO4C,KAAK5C,MAAM8W,QAAQ7Z,GAC1B6mB,aAAa,IAGRlhB,KA6MT,SAASmhB,IACP,OAAOnhB,KAAK5C,MAAM/C,KAl7BpBomB,EAASN,EAAqBK,EAAOY,cAarCjB,EAAoBtnB,UAAUkX,OAAS,WAErC,OADA/P,KAAKqhB,QAAQ,CAACC,wBAAwB,IAC/BthB,MAGTmgB,EAAoBtnB,UAAU0oB,6BAA+B,WAE3D,OADAvhB,KAAKqhB,QAAQ,CAACC,wBAAwB,IAC/BthB,MAQTmgB,EAAoBtnB,UAAU2oB,SAAW,WACvC,IAAIpkB,EAAQ4C,KAAK5C,MACjB,OAAOmjB,EAAekB,qBAAqBrkB,IAuC7C+iB,EAAoBtnB,UAAU6oB,WAAa,SAASvD,EAASwD,GAC3D,IAAIC,EAAazD,EAAuBne,KAAK5C,MAAMyW,mBAAmBsK,GAA3Cne,KAAK5C,MAC5BykB,EAAUtB,EAAeuB,YAAYF,EAAUpnB,MAAOonB,GACtD/P,EAAO7R,KAQX,GANAA,KAAK+gB,oBAEL/gB,KAAK+hB,KAAK,aAAc,CACtB3kB,MAAOwkB,KAGLD,EAuBJ,OAAO3hB,KAAKqgB,OAAOtQ,OAAO8R,GAASpoB,MAAK,SAASsS,GAG/C,OAFA8F,EAAKkP,oBAC0B,IAA3BlP,EAAKkP,mBAAyBlP,EAAKkQ,KAAK,oBACrC,CACLhW,QAAS,IAAI+O,EAAc8G,EAAW7V,EAAQnP,SAC9CQ,MAAOwkB,EACPI,kBAAmBjW,MAEpB,SAASvF,GAGV,MAFAqL,EAAKkP,oBAC0B,IAA3BlP,EAAKkP,mBAAyBlP,EAAKkQ,KAAK,oBACtCvb,KAjCNxG,KAAKqgB,OACFtQ,OAAO8R,GACPpoB,MAAK,SAASsS,GACb8F,EAAKkP,oBAC0B,IAA3BlP,EAAKkP,mBACPlP,EAAKkQ,KAAK,oBAGZJ,EAAG,KAAM,IAAI7G,EAAc8G,EAAW7V,EAAQnP,SAAUglB,MAEzDnZ,OAAM,SAASwZ,GACdpQ,EAAKkP,oBAC0B,IAA3BlP,EAAKkP,mBACPlP,EAAKkQ,KAAK,oBAGZJ,EAAGM,EAAK,KAAML,OA+BtBzB,EAAoBtnB,UAAUsX,YAAc,SAASgO,GACnD,IAAI/gB,EAAQ4C,KAAK5C,MACb8kB,EAAgBliB,KAAK8gB,eAAe,GACxC,IAAKoB,EACH,OAAO7oB,QAAQC,QAAQ,IAEzB,IAAI6oB,EAAeD,EAAcE,iBAAiBhlB,GAC9CiM,EAAO+G,EACT,CACEiS,wBAAyBlE,EAAQkE,wBACjCC,OAAQnE,EAAQmE,QAElB,CACElU,OAAQvT,EAAK0lB,EAAekB,qBAAqBU,GAAe,CAC9D,sBACA,cACA,+BACA,0BAKFI,EAAe,8GACnB,GAAqC,oBAA1BviB,KAAKqgB,OAAOnQ,UACrB,MAAM,IAAI1Q,MAAM+iB,GAElB,IAAI/nB,EAAQwF,KAAKqgB,OAAOnQ,UAAUiS,EAAa3nB,OAC/C,GAAiC,oBAAtBA,EAAM2V,YACf,MAAM,IAAI3Q,MAAM+iB,GAElB,OAAO/nB,EAAM2V,YAAYgS,EAAaxT,MAAOwP,EAAQvP,eAAgBvF,IAqCvE8W,EAAoBtnB,UAAUuI,qBAAuB,SAAS2R,EAAOpE,EAAO6T,EAAcC,GACxF,IAAIC,EAA4D,oBAArC1iB,KAAKqgB,OAAOjf,qBACvC,IACGshB,GACgC,oBAA1B1iB,KAAKqgB,OAAOnQ,UAEnB,MAAM,IAAI1Q,MACR,yKAGJ,IAAIpC,EAAQ4C,KAAK5C,MAAMyW,mBAAmB4O,GAAa,IACnDE,EAAgBvlB,EAAM2X,mBAAmBhC,GACzC6P,EAAerC,EAAesC,uBAAuB9P,EAAOpE,EAAO6T,EAAcplB,GAErF4C,KAAK+gB,oBACL,IAAIlP,EAAO7R,KAYX,OAVAA,KAAK+hB,KAAK,uBAAwB,CAChC3kB,MAAOA,EACP2V,MAAOA,EACPpE,MAAOA,KAGyB+T,EAC9B1iB,KAAKqgB,OAAOjf,qBAAqB,CAAC,CAAC8M,UAAW9Q,EAAM5C,MAAO4T,OAAQwU,KACnE5iB,KAAKqgB,OAAOnQ,UAAU9S,EAAM5C,OAAO4G,qBAAqBwhB,IAEzBnpB,MAAK,SAAsBsS,GAY5D,OAXA8F,EAAKkP,oBAC0B,IAA3BlP,EAAKkP,mBAAyBlP,EAAKkQ,KAAK,qBAE5ChW,EAAUhS,MAAMC,QAAQ+R,GAAWA,EAAQ,GAAKA,GAExC+W,UAAUzqB,SAAQ,SAASmB,GACjCA,EAAE2c,UAAYwM,EACVvlB,EAAM8a,0BAA0BnF,EAAOvZ,EAAEK,OACzCuD,EAAM4a,eAAejF,EAAOvZ,EAAEK,UAG7BkS,KACN,SAASvF,GAGV,MAFAqL,EAAKkP,oBAC0B,IAA3BlP,EAAKkP,mBAAyBlP,EAAKkQ,KAAK,oBACtCvb,MAaV2Z,EAAoBtnB,UAAUmb,SAAW,SAASrJ,GAMhD,OALA3K,KAAKihB,QAAQ,CACX7jB,MAAO4C,KAAK5C,MAAMH,YAAY+W,SAASrJ,GACvCuW,aAAa,IAGRlhB,MA0BTmgB,EAAoBtnB,UAAUsa,iBAAmB,SAASha,GAMxD,OALA6G,KAAKihB,QAAQ,CACX7jB,MAAO4C,KAAK5C,MAAMH,YAAYkW,iBAAiBha,GAC/C+nB,aAAa,IAGRlhB,MAWTmgB,EAAoBtnB,UAAUib,UAAY,WAMxC,OALA9T,KAAKihB,QAAQ,CACX7jB,MAAO4C,KAAK5C,MAAMH,YAAY6W,YAC9BoN,aAAa,IAGRlhB,MAcTmgB,EAAoBtnB,UAAUyd,8BAAgC,SAASvD,EAAOlZ,GAM5E,OALAmG,KAAKihB,QAAQ,CACX7jB,MAAO4C,KAAK5C,MAAMH,YAAYqZ,8BAA8BvD,EAAOlZ,GACnEqnB,aAAa,IAGRlhB,MAMTmgB,EAAoBtnB,UAAUkqB,qBAAuB,WACnD,OAAO/iB,KAAKsW,8BAA8B5V,MAAMV,KAAMvI,YAgBxD0oB,EAAoBtnB,UAAU+e,+BAAiC,SAAS7E,EAAOlZ,GAM7E,OALAmG,KAAKihB,QAAQ,CACX7jB,MAAO4C,KAAK5C,MAAMH,YAAY2a,+BAA+B7E,EAAOlZ,GACpEqnB,aAAa,IAGRlhB,MAeTmgB,EAAoBtnB,UAAU4b,qBAAuB,SAAS1V,EAAW2T,EAAU7Y,GAMjF,OALAmG,KAAKihB,QAAQ,CACX7jB,MAAO4C,KAAK5C,MAAMH,YAAYwX,qBAAqB1V,EAAW2T,EAAU7Y,GACxEqnB,aAAa,IAGRlhB,MAcTmgB,EAAoBtnB,UAAUqd,mBAAqB,SAASnD,EAAOlZ,GAMjE,OALAmG,KAAKihB,QAAQ,CACX7jB,MAAO4C,KAAK5C,MAAMH,YAAYiZ,mBAAmBnD,EAAOlZ,GACxDqnB,aAAa,IAGRlhB,MAMTmgB,EAAoBtnB,UAAUmqB,UAAY,WACxC,OAAOhjB,KAAKkW,mBAAmBxV,MAAMV,KAAMvI,YAe7C0oB,EAAoBtnB,UAAUoqB,kBAAoB,SAASlQ,EAAOlZ,GAMhE,OALAmG,KAAKihB,QAAQ,CACX7jB,MAAO4C,KAAK5C,MAAMH,YAAYoZ,qBAAqBtD,EAAOlZ,GAC1DqnB,aAAa,IAGRlhB,MAMTmgB,EAAoBtnB,UAAUqqB,WAAa,WACzC,OAAOljB,KAAKijB,kBAAkBviB,MAAMV,KAAMvI,YAa5C0oB,EAAoBtnB,UAAUsqB,OAAS,SAAS3M,GAM9C,OALAxW,KAAKihB,QAAQ,CACX7jB,MAAO4C,KAAK5C,MAAMH,YAAYsZ,iBAAiBC,GAC/C0K,aAAa,IAGRlhB,MAqBTmgB,EAAoBtnB,UAAUoc,wBAA0B,SAASlW,EAAW2T,EAAU7Y,GAMpF,OALAmG,KAAKihB,QAAQ,CACX7jB,MAAO4C,KAAK5C,MAAMH,YAAYgY,wBAAwBlW,EAAW2T,EAAU7Y,GAC3EqnB,aAAa,IAGRlhB,MAiBTmgB,EAAoBtnB,UAAUoe,iCAAmC,SAASlE,EAAOlZ,GAM/E,OALAmG,KAAKihB,QAAQ,CACX7jB,MAAO4C,KAAK5C,MAAMH,YAAYga,iCAAiClE,EAAOlZ,GACtEqnB,aAAa,IAGRlhB,MAMTmgB,EAAoBtnB,UAAUuqB,wBAA0B,WACtD,OAAOpjB,KAAKiX,iCAAiCvW,MAAMV,KAAMvI,YAW3D0oB,EAAoBtnB,UAAUif,kCAAoC,SAAS/E,GAMzE,OALA/S,KAAKihB,QAAQ,CACX7jB,MAAO4C,KAAK5C,MAAMH,YAAY6a,kCAAkC/E,GAChEmO,aAAa,IAGRlhB,MAiBTmgB,EAAoBtnB,UAAUie,sBAAwB,SAAS/D,EAAOlZ,GAMpE,OALAmG,KAAKihB,QAAQ,CACX7jB,MAAO4C,KAAK5C,MAAMH,YAAY6Z,sBAAsB/D,EAAOlZ,GAC3DqnB,aAAa,IAGRlhB,MAMTmgB,EAAoBtnB,UAAUwqB,aAAe,WAC3C,OAAOrjB,KAAK8W,sBAAsBpW,MAAMV,KAAMvI,YAiBhD0oB,EAAoBtnB,UAAUyqB,qBAAuB,SAASvQ,EAAOlZ,GAMnE,OALAmG,KAAKihB,QAAQ,CACX7jB,MAAO4C,KAAK5C,MAAMH,YAAY+Z,wBAAwBjE,EAAOlZ,GAC7DqnB,aAAa,IAGRlhB,MAMTmgB,EAAoBtnB,UAAU0qB,cAAgB,WAC5C,OAAOvjB,KAAKsjB,qBAAqB5iB,MAAMV,KAAMvI,YAa/C0oB,EAAoBtnB,UAAU2qB,UAAY,SAAShN,GAMjD,OALAxW,KAAKihB,QAAQ,CACX7jB,MAAO4C,KAAK5C,MAAMH,YAAYia,oBAAoBV,GAClD0K,aAAa,IAGRlhB,MAcTmgB,EAAoBtnB,UAAU4qB,qBAAuB,SAAS1Q,EAAOlZ,GAMnE,OALAmG,KAAKihB,QAAQ,CACX7jB,MAAO4C,KAAK5C,MAAMH,YAAYsa,6BAA6BxE,EAAOlZ,GAClEqnB,aAAa,IAGRlhB,MAMTmgB,EAAoBtnB,UAAU6qB,cAAgB,WAC5C,OAAO1jB,KAAKyjB,qBAAqB/iB,MAAMV,KAAMvI,YAkB/C0oB,EAAoBtnB,UAAUse,iBAAmB,SAASpE,EAAOlZ,GAC/D,OAAOmG,KAAKoX,sBAAsBrE,EAAOlZ,IAiB3CsmB,EAAoBtnB,UAAUue,sBAAwB,SAASrE,EAAOlZ,GAMpE,OALAmG,KAAKihB,QAAQ,CACX7jB,MAAO4C,KAAK5C,MAAMH,YAAYma,sBAAsBrE,EAAOlZ,GAC3DqnB,aAAa,IAGRlhB,MAMTmgB,EAAoBtnB,UAAU8qB,aAAe,WAC3C,OAAO3jB,KAAKoX,sBAAsB1W,MAAMV,KAAMvI,YAahD0oB,EAAoBtnB,UAAU+qB,UAAY,SAASpN,GAMjD,OALAxW,KAAKihB,QAAQ,CACX7jB,MAAO4C,KAAK5C,MAAMH,YAAY8a,oBAAoBvB,GAClD0K,aAAa,IAGRlhB,MAYTmgB,EAAoBtnB,UAAUgrB,SAAW,WACvC,IAAIxpB,EAAO2F,KAAK5C,MAAM/C,MAAQ,EAC9B,OAAO2F,KAAKkU,QAAQ7Z,EAAO,IAY7B8lB,EAAoBtnB,UAAUirB,aAAe,WAC3C,IAAIzpB,EAAO2F,KAAK5C,MAAM/C,MAAQ,EAC9B,OAAO2F,KAAKkU,QAAQ7Z,EAAO,IAyB7B8lB,EAAoBtnB,UAAUmoB,eAAiBA,EAU/Cb,EAAoBtnB,UAAUqb,QAAU8M,EAWxCb,EAAoBtnB,UAAUkb,SAAW,SAAS5a,GAMhD,OALA6G,KAAKihB,QAAQ,CACX7jB,MAAO4C,KAAK5C,MAAMH,YAAY8W,SAAS5a,GACvC+nB,aAAa,IAGRlhB,MAoBTmgB,EAAoBtnB,UAAUmgB,kBAAoB,SAASC,EAAWpf,GAMpE,OALAmG,KAAKihB,QAAQ,CACX7jB,MAAO4C,KAAK5C,MAAMH,YAAY+b,kBAAkBC,EAAWpf,GAC3DqnB,aAAa,IAGRlhB,MAUTmgB,EAAoBtnB,UAAUiJ,SAAW,SAASiiB,GAMhD,OALA/jB,KAAKihB,QAAQ,CACX7jB,MAAO4T,EAAiB6B,KAAKkR,GAC7B7C,aAAa,IAGRlhB,MAoBTmgB,EAAoBtnB,UAAUmrB,0CAA4C,SAASD,GAEjF,OADA/jB,KAAK5C,MAAQ,IAAI4T,EAAiB+S,GAC3B/jB,MA0BTmgB,EAAoBtnB,UAAU0F,eAAiB,SAASQ,GACtD,QAAI2R,EAAc1Q,KAAK5C,MAAMiY,sBAAsBtW,MAExCiB,KAAK5C,MAAMyX,mBAAmB9V,GAChCiB,KAAK5C,MAAM4a,eAAejZ,GACxBiB,KAAK5C,MAAM2X,mBAAmBhW,GAChCiB,KAAK5C,MAAM8a,0BAA0BnZ,KACnCiB,KAAK5C,MAAM6Y,oBAAoBlX,IACjCiB,KAAK5C,MAAMya,2BAA2B9Y,KA8BjDohB,EAAoBtnB,UAAUolB,WAAa,SAASlL,EAAOlZ,GACzD,OAAOmG,KAAK5C,MAAM6a,iBAAiBlF,EAAOlZ,IAM5CsmB,EAAoBtnB,UAAUorB,qBAAuB,SAASlR,EAAOlZ,GACnE,OAAOmG,KAAK5C,MAAM8a,0BAA0BnF,EAAOlZ,IAQrDsmB,EAAoBtnB,UAAUqrB,OAAS,SAAS1N,GAC9C,OAAOxW,KAAK5C,MAAMqZ,aAAaD,IAMjC2J,EAAoBtnB,UAAU4d,aAAe,WAC3C,OAAOzW,KAAKmkB,kBAAkBzjB,MAAMV,KAAMvI,YAW5C0oB,EAAoBtnB,UAAUurB,SAAW,WACvC,OAAOpkB,KAAK5C,MAAM5C,OAYpB2lB,EAAoBtnB,UAAUsoB,eAAiBA,EAM/ChB,EAAoBtnB,UAAUwrB,QAAUlD,EAOxChB,EAAoBtnB,UAAUyrB,QAAU,WACtC,OAAOtkB,KAAK5C,MAAMuU,gBA+CpBwO,EAAoBtnB,UAAU4F,eAAiB,SAAS8P,GACtD,IAAI4J,EAAc,GAElB,GAAInY,KAAK5C,MAAMyX,mBAAmBtG,GACVvO,KAAK5C,MAAMwX,0BAA0BrG,GAE3ClW,SAAQ,SAASqO,GAC/ByR,EAAYpR,KAAK,CACflN,MAAO6M,EACP8W,KAAM,mBAIexd,KAAK5C,MAAM4X,sBAAsBzG,GAEvClW,SAAQ,SAASqO,GAClCyR,EAAYpR,KAAK,CACflN,MAAO6M,EACP8W,KAAM,oBAGL,GAAIxd,KAAK5C,MAAM2X,mBAAmBxG,GAAY,CAC7BvO,KAAK5C,MAAM0X,0BAA0BvG,GAE3ClW,SAAQ,SAASqO,GAC/ByR,EAAYpR,KAAK,CACflN,MAAO6M,EACP8W,KAAM,mBAKZ,IAAI9L,EAAqB1R,KAAK5C,MAAMiY,sBAAsB9G,GAY1D,OAVA3W,OAAOE,KAAK4Z,GAAoBrZ,SAAQ,SAASqa,GAC/C,IAAI7Y,EAAQ6X,EAAmBgB,GAE/ByF,EAAYpR,KAAK,CACflN,MAAOA,EACP6Y,SAAUA,EACV8K,KAAM,eAIHrF,GASTgI,EAAoBtnB,UAAUyc,qBAAuB,SAASvW,EAAW2T,GACvE,OAAO1S,KAAK5C,MAAMkY,qBAAqBvW,EAAW2T,IAQpDyN,EAAoBtnB,UAAUihB,+BAAiC,SAASvL,GACtE,OAAOvO,KAAK5C,MAAM0c,+BAA+BvL,IAanD4R,EAAoBtnB,UAAUwoB,QAAU,SAASlD,GAC/C,IAAI/gB,EAAQ4C,KAAK5C,MACbmnB,EAAS,GACTC,EAAc,GAEbrG,EAAQmD,yBACXkD,EAAcjE,EAAeuB,YAAY1kB,EAAM5C,MAAO4C,GAEtDmnB,EAAOxd,KAAK,CACV3J,MAAOA,EACPqnB,aAAcD,EAAY9sB,OAC1BgtB,OAAQ1kB,OAGVA,KAAK+hB,KAAK,SAAU,CAClB3kB,MAAOA,EACPR,QAASoD,KAAK2gB,eAIlB,IAAIgE,EAAiB3kB,KAAK8gB,eAAexmB,KAAI,SAAS4nB,GACpD,IAAIC,EAAeD,EAAcE,iBAAiBhlB,GAC9CwnB,EAAsBrE,EAAeuB,YAAYK,EAAa3nB,MAAO2nB,GAazE,OAXAoC,EAAOxd,KAAK,CACV3J,MAAO+kB,EACPsC,aAAcG,EAAoBltB,OAClCgtB,OAAQxC,IAGVA,EAAcH,KAAK,SAAU,CAC3B3kB,MAAO+kB,EACPvlB,QAASslB,EAAcvB,cAGlBiE,KAGL/C,EAAU9nB,MAAMlB,UAAUb,OAAO0I,MAAM8jB,EAAaG,GACpDE,EAAU7kB,KAAK4gB,WAEnB5gB,KAAK+gB,oBAEL,IACE/gB,KAAKqgB,OAAOtQ,OAAO8R,GAChBpoB,KAAKuG,KAAK8kB,yBAAyBxjB,KAAKtB,KAAMukB,EAAQM,IACtDpc,MAAMzI,KAAK+kB,sBAAsBzjB,KAAKtB,KAAM6kB,IAC/C,MAAO5hB,GAEPjD,KAAK+hB,KAAK,QAAS,CACjB9e,MAAOA,MAgBbkd,EAAoBtnB,UAAUisB,yBAA2B,SAASP,EAAQM,EAAS9Y,GAGjF,KAAI8Y,EAAU7kB,KAAK6gB,sBAAnB,CAKA7gB,KAAK+gB,mBAAsB8D,EAAU7kB,KAAK6gB,qBAC1C7gB,KAAK6gB,qBAAuBgE,EAEG,IAA3B7kB,KAAK+gB,mBAAyB/gB,KAAK+hB,KAAK,oBAE5C,IAAInlB,EAAUmP,EAAQnP,QAAQwH,QAE9BmgB,EAAOlsB,SAAQ,SAASqQ,GACtB,IAAItL,EAAQsL,EAAEtL,MACVqnB,EAAe/b,EAAE+b,aACjBC,EAAShc,EAAEgc,OACXM,EAAkBpoB,EAAQqoB,OAAO,EAAGR,GAEpCS,EAAoBR,EAAO/D,YAAc,IAAI7F,EAAc1d,EAAO4nB,GAEtEN,EAAO3C,KAAK,SAAU,CACpBnlB,QAASsoB,EACT9nB,MAAOA,SAKb+iB,EAAoBtnB,UAAUksB,sBAAwB,SAASF,EAAS5hB,GAClE4hB,EAAU7kB,KAAK6gB,uBAKnB7gB,KAAK+gB,mBAAqB8D,EAAU7kB,KAAK6gB,qBACzC7gB,KAAK6gB,qBAAuBgE,EAE5B7kB,KAAK+hB,KAAK,QAAS,CACjB9e,MAAOA,IAGsB,IAA3BjD,KAAK+gB,mBAAyB/gB,KAAK+hB,KAAK,sBAG9C5B,EAAoBtnB,UAAUssB,mBAAqB,SAASxW,EAAOyW,EAAc3R,EAAgBD,GAC/F,OAAO7E,GACmB,IAAxByW,EAAa1tB,QACa,IAA1B+b,EAAe/b,QACO,IAAtB8b,EAAW9b,QASfyoB,EAAoBtnB,UAAUwsB,2BAA6B,SAAStS,GAClE,OAAO/S,KAAK5C,MAAMkoB,uBAAuBvS,IACvC/S,KAAK5C,MAAMkoB,uBAAuBvS,GAAOrb,OAAS,GAGtDyoB,EAAoBtnB,UAAUooB,QAAU,SAASsE,GAC/C,IAAInoB,EAAQmoB,EAAMnoB,MACd8jB,EAAcqE,EAAMrE,YAEpB9jB,IAAU4C,KAAK5C,QACjB4C,KAAK5C,MAAQA,EAEb4C,KAAK+hB,KAAK,SAAU,CAClB3kB,MAAO4C,KAAK5C,MACZR,QAASoD,KAAK2gB,YACdO,YAAaA,MASnBf,EAAoBtnB,UAAUkV,WAAa,WAEzC,OADA/N,KAAKqgB,OAAOtS,YAAc/N,KAAKqgB,OAAOtS,aAC/B/N,MASTmgB,EAAoBtnB,UAAU6nB,UAAY,SAAS8E,GACjD,OAAIxlB,KAAKqgB,SAAWmF,IAEqB,oBAA9BA,EAAU1X,iBACnB0X,EAAU1X,gBAAgB,cAAgBjB,EAAU,KAEtD7M,KAAKqgB,OAASmF,GALwBxlB,MAcxCmgB,EAAoBtnB,UAAU4sB,UAAY,WACxC,OAAOzlB,KAAKqgB,QAsBdF,EAAoBtnB,UAAU6sB,OAAS,SAASC,GAC9C,IAAIzD,EAAgB,IAAI5B,EAActgB,KAAM2lB,GAE5C,OADA3lB,KAAK8gB,eAAe/Z,KAAKmb,GAClBA,GAUT/B,EAAoBtnB,UAAU+sB,oBAAsB,SAAS1D,GAC3D,IAAI2D,EAAM7lB,KAAK8gB,eAAe5lB,QAAQgnB,GACtC,IAAa,IAAT2D,EAAY,MAAM,IAAIrmB,MAAM,mCAChCQ,KAAK8gB,eAAemE,OAAOY,EAAK,IAOlC1F,EAAoBtnB,UAAUitB,mBAAqB,WACjD,OAAO9lB,KAAK+gB,kBAAoB,GAmBlCjlB,EAAOC,QAAUokB,G,kCC/6CjBrkB,EAAOC,QATP,SAAsBgqB,EAAMC,GAC1B,OAAOD,EAAK9tB,QAAO,SAAS4B,EAAOW,GACjC,OACEwrB,EAAK9qB,QAAQrB,IAAU,GACvBksB,EAAK7qB,QAAQrB,KAAWW,O,kCCQ9BsB,EAAOC,QAZP,SAAS0U,EAAY1G,GACnB,GAAiB,kBAANA,EACT,OAAOA,EACF,GAAiB,kBAANA,EAChB,OAAOsI,WAAWtI,GACb,GAAIhQ,MAAMC,QAAQ+P,GACvB,OAAOA,EAAEzP,IAAImW,GAGf,MAAM,IAAIjR,MAAM,2E,kCCTlB1D,EAAOC,QAAU,SAA0BoV,GACzC,OAAkB,OAAdA,GAGG,wBAAwB8U,KAAK9U,K,kCCQtC,IAAIb,EAAeD,EAAQ,MACvBxV,EAAOwV,EAAQ,MACfK,EAAgBL,EAAQ,MAExB6V,EAAM,CAQR9P,cAAe,SAAuB+P,EAAgBpnB,EAAWlF,GAC/D,GAAIqsB,EAAI/P,UAAUgQ,EAAgBpnB,EAAWlF,GAC3C,OAAOssB,EAGT,IAAIC,EAAgB,GAAKvsB,EAErBwsB,EAAmBF,EAAepnB,GAEpConB,EAAepnB,GAAW/G,OAAOouB,GADjC,CAACA,GAGCzR,EAAM,GAIV,OAFAA,EAAI5V,GAAasnB,EAEV/V,EAAa,GAAIqE,EAAKwR,IAW/BpP,iBAAkB,SAA0BoP,EAAgBpnB,EAAWlF,GACrE,QAAckB,IAAVlB,EAGF,OAAOqsB,EAAItS,gBAAgBuS,GAAgB,SAASpc,EAAGvQ,GACrD,OAAOuF,IAAcvF,KAIzB,IAAI4sB,EAAgB,GAAKvsB,EAEzB,OAAOqsB,EAAItS,gBAAgBuS,GAAgB,SAASpc,EAAGvQ,GACrD,OAAOuF,IAAcvF,GAAK4sB,IAAkBrc,MAUhDoN,iBAAkB,SAA0BgP,EAAgBpnB,EAAWlF,GACrE,QAAckB,IAAVlB,EAAqB,MAAM,IAAI2F,MAAM,gDAEzC,OAAI0mB,EAAI/P,UAAUgQ,EAAgBpnB,EAAWlF,GACpCqsB,EAAInP,iBAAiBoP,EAAgBpnB,EAAWlF,GAGlDqsB,EAAI9P,cAAc+P,EAAgBpnB,EAAWlF,IAatD+Z,gBAAiB,SAAyBuS,EAAgBpnB,EAAWunB,GACnE,QAAkBvrB,IAAdgE,EACF,OAAK2R,EAAcyV,GAGZ,GAFEA,EAGJ,GAAyB,kBAAdpnB,EAChB,OAAOlE,EAAKsrB,EAAgB,CAACpnB,IACxB,GAAyB,oBAAdA,EAA0B,CAC1C,IAAIwW,GAAa,EAEbgR,EAAoB3uB,OAAOE,KAAKquB,GAAgB5qB,QAAO,SAASka,EAAMnd,GACxE,IAAIqd,EAASwQ,EAAe7tB,IAAQ,GAChCglB,EAAY3H,EAAO1d,QAAO,SAAS4B,GACrC,OAAQkF,EAAUlF,EAAOvB,EAAKguB,MAQhC,OALIhJ,EAAU5lB,SAAWie,EAAOje,SAC9B6d,GAAa,GAEfE,EAAKnd,GAAOglB,EAEL7H,IACN,IAEH,OAAIF,EAAmBgR,EAChBJ,IAYXhQ,UAAW,SAAmBgQ,EAAgBpnB,EAAWyd,GACvD,IAAIgK,IAAwBL,EAAepnB,IACzConB,EAAepnB,GAAWrH,OAAS,EAErC,QAAwBqD,IAApByhB,IAAkCgK,EACpC,OAAOA,EAGT,IAAIC,EAA0B,GAAKjK,EAEnC,OAAuE,IAAhE2J,EAAepnB,GAAW7D,QAAQurB,KAI7C3qB,EAAOC,QAAUmqB,G,kCChJjBpqB,EAAOC,QAAU,SAAiBE,GAChC,OAAKlC,MAAMC,QAAQiC,GAIZA,EAAMhE,OAAO4G,SAHX,K,kCCDX/C,EAAOC,QAAU,SAAcE,EAAOC,GACpC,IAAKnC,MAAMC,QAAQiC,GACjB,OAAQ,EAGV,IAAK,IAAIzE,EAAI,EAAGA,EAAIyE,EAAMvE,OAAQF,IAChC,GAAI0E,EAAWD,EAAMzE,IACnB,OAAOA,EAGX,OAAQ,I,kCCXVsE,EAAOC,QAMP,SAAuBqB,GACrB,OAAO,SAAkBspB,EAAyBC,GAChD,IAAI3Q,EAAoB5Y,EAAMkU,mBAAmBqV,GAC7CC,EACDxpB,EAAMwU,8BAA8BoE,EAAkB7c,OACrDiE,EAAMwU,8BAA8BoE,EAAkB7c,MAAM,IAC9D,GACE0tB,EAAwBzpB,EAAMqa,+BAChCzB,GAEE8Q,EAAuB1pB,EAAMsc,yBAC/B1D,GAEE+Q,EAA8B3pB,EAAMuc,gCACtC3D,GAEEyD,EAASuN,EACX5pB,EAAMoc,4BAA4BxD,IAGhCiR,EAAiBP,EAAwB5V,OAAM,SAASoW,GAC1D,OAAOA,EAAYrL,cAGjBsL,EA2BR,SACE1N,EACAoN,EACAC,EACAC,EACA9T,GAEA,OAAO,SACLmU,EACAV,EACAW,GAEA,IAAIC,EAASF,EAEb,GAAIC,EAA2B,EAAG,CAChC,IAAIE,EAAQ,EAIZ,IAFAD,EAASF,EAEFG,EAAQF,GAA0B,CAIvC,IAAIhe,EAAOie,GAAUvtB,MAAMC,QAAQstB,EAAOje,MAAQie,EAAOje,KAAO,GAChEie,EAAS9W,EAAKnH,GAAM,SAASme,GAC3B,OAAOA,EAAQrR,aAEjBoR,KAKJ,GAAID,EAAQ,CAYV,IAAIG,EAAS7vB,OAAOE,KAAK4uB,EAAwBrd,MAC9C/O,KAAI,SAASuiB,GACZ,MAAO,CAACA,EAAY6J,EAAwBrd,KAAKwT,OAElD5kB,QAAO,SAASyvB,GAEf,OAgCV,SACE7K,EACA8K,EACA1U,EACA4T,EACAC,EACAC,GAGA,GACED,IAC8C,IAA7CjK,EAAW3hB,QAAQ4rB,IAClBA,IAAyBjK,GAE3B,OAAO,EAIT,OACIiK,IAC+C,IAA/CjK,EAAW3hB,QAAQ2rB,IAEpBC,GACCjK,EAAWvhB,MAAMurB,GAAuBnvB,OACtCovB,EAAqBxrB,MAAMurB,GAAuBnvB,SAClD,IAG4C,IAA/CmlB,EAAW3hB,QAAQ2rB,KACoC,IAAtD5T,EAAkB/X,QAAQ2rB,IAEc,IAA1C5T,EAAkB/X,QAAQ2hB,IAEkC,IAA3DA,EAAW3hB,QAAQysB,EAAad,KAC9BE,GAC2C,IAA1ClK,EAAW3hB,QAAQ+X,IAnEV2U,CADUF,EAAM,GAGrBJ,EAAOlsB,MAAQ0rB,EACf7T,EACA4T,EACAC,EACAC,MAINO,EAAOje,KAAO6Q,EACZuN,EAAOntB,KAAI,SAASotB,GAClB,IAAI7K,EAAa6K,EAAM,GAGvB,OAwDV,SACEG,EACAhL,EACAgK,EACA5T,EACA4I,GAEA,IAAIhe,EAAQgf,EAAWvhB,MAAMurB,GAC7B,MAAO,CACL1tB,KAAM0E,EAAMA,EAAMnG,OAAS,GAAGuiB,OAC9B7e,KAAMyhB,EACNa,MAAOmK,EACP1R,UACElD,IAAsB4J,GAC4C,IAAlE5J,EAAkB/X,QAAQ2hB,EAAagK,GACzChL,WAAYA,EACZxS,KAAM,MAxEOye,CAFUJ,EAAM,GAIrB7K,EACAgK,EACA5T,EACAyT,EAAwB7K,eAG5BpC,EAAO,GACPA,EAAO,IAIX,OAAO2N,GAzGc9M,CACnBb,EACAoN,EACAC,EACAC,EACAH,GAGEhqB,EAAU8pB,EAQd,OANII,IACFlqB,EAAU8pB,EAAwBtiB,MAChC0iB,EAAqBxrB,MAAMurB,GAAuBnvB,SAI/CkF,EAAQrB,OAAO4rB,EAAgB,CACpChuB,KAAMiE,EAAMkU,mBAAmBqV,GAAwBxtB,KACvDukB,MAAO,KACPvH,WAAW,EACX/a,KAAM,KACNygB,WAAYoL,EACZ5d,KAAM,SAlDZ,IAAI6Q,EAAU7J,EAAQ,MAClBG,EAAOH,EAAQ,MACf2W,EAAiC3W,EAAQ,O,kCCJ7C,IAAImQ,EAASnQ,EAAQ,KAarB,SAASiQ,EAAcyH,EAAYpC,GACjC3lB,KAAKgoB,KAAOD,EACZ/nB,KAAK2lB,GAAKA,EACV3lB,KAAK2gB,YAAc,KAfNtQ,EAAQ,KAkBvBoQ,CAASH,EAAeE,EAAOY,cAO/Bd,EAAcznB,UAAUovB,OAAS,WAC/BjoB,KAAKkoB,qBACLloB,KAAKgoB,KAAKpC,oBAAoB5lB,OAGhCsgB,EAAcznB,UAAUupB,iBAAmB,SAAS7O,GAClD,OAAOvT,KAAK2lB,GAAGpS,IAGjBzX,EAAOC,QAAUukB,G,kCCnCjB,IAAIlQ,EAAQC,EAAQ,MAEhBkQ,EAAiB,CAOnBuB,YAAa,SAAoBtnB,EAAO4C,GACtC,IAAIykB,EAAU,GAgCd,OA7BAA,EAAQ9a,KAAK,CACXmH,UAAW1T,EACX4T,OAAQmS,EAAekB,qBAAqBrkB,KAI9CA,EAAMob,8BAA8BngB,SAAQ,SAASokB,GACnDoF,EAAQ9a,KAAK,CACXmH,UAAW1T,EACX4T,OAAQmS,EAAe4H,iCAAiC/qB,EAAOqf,QAKnErf,EAAMsb,+BAA+BrgB,SAAQ,SAASokB,GACpD,IAAIzG,EAAoB5Y,EAAMsa,2BAA2B+E,GAErDxJ,EAAoB7V,EAAM8V,0BAA0BuJ,GAGpDjF,EAAYpa,EAAMqa,+BAA+BzB,GACjD/C,EAAkBvb,OAAS,GAAKub,EAAkB,GAAG3X,MAAMkc,GAAW9f,OAAS,GACjFmqB,EAAQ9a,KAAK,CACXmH,UAAW1T,EACX4T,OAAQmS,EAAe4H,iCAAiC/qB,EAAOqf,GAAc,QAK5EoF,GAQTJ,qBAAsB,SAASrkB,GAC7B,IAAIgU,EAAShU,EAAMgU,OAChBpZ,OAAOoF,EAAMiU,mBACbrZ,OAAOuoB,EAAe6H,qCAAqChrB,IAG1DgoB,EAAe7E,EAAe8H,iBAAiBjrB,GAC/CqW,EAAiB8M,EAAe+H,mBAAmBlrB,GAEnDmrB,EAAmB,CACrBnX,OAAQA,EACRoC,WAHe+M,EAAeiI,eAAeprB,IAc/C,OARIgoB,EAAa1tB,OAAS,IACxB6wB,EAAiBnD,aAAeA,GAG9B3R,EAAe/b,OAAS,IAC1B6wB,EAAiB9U,eAAiBA,GAG7BrD,EAAM,GAAIhT,EAAM0b,iBAAkByP,IAU3CJ,iCAAkC,SAAS/qB,EAAO2V,EAAO0V,GACvD,IAAIrD,EAAe7E,EAAe8H,iBAAiBjrB,EAAO2V,EAAO0V,GAC7DhV,EAAiB8M,EAAe+H,mBAAmBlrB,EAAO2V,GAE1DwV,EAAmB,CACrBnuB,YAAa,EACbC,KAAM,EACNquB,qBAAsB,GACtBC,sBAAuB,GACvBC,oBAAqB,GACrBpV,WAPe+M,EAAeiI,eAAeprB,GAQ7CyrB,WAAW,EACXC,gBAAgB,GAGd9S,EAAoB5Y,EAAMsa,2BAA2B3E,GAoBzD,OAjBEwV,EAAiBnX,OADf4E,EACwBuK,EAAewI,0CACvC3rB,EACA4Y,EACAyS,GAGwB1V,EAGxBU,EAAe/b,OAAS,IAC1B6wB,EAAiB9U,eAAiBA,GAGhC2R,EAAa1tB,OAAS,IACxB6wB,EAAiBnD,aAAeA,GAG3BhV,EAAM,GAAIhT,EAAM0b,iBAAkByP,IAS3CD,mBAAoB,SAASlrB,EAAOmR,GAClC,GAAInR,EAAMqW,eACR,OAAOrW,EAAMqW,eAGf,IAAIA,EAAiB,GAqBrB,OAnBA7b,OAAOE,KAAKsF,EAAMsU,oBAAoBrZ,SAAQ,SAAS0G,GACrD,IAAI0T,EAAYrV,EAAMsU,mBAAmB3S,IAAc,GACvDnH,OAAOE,KAAK2a,GAAWpa,SAAQ,SAASqa,GACtC,IAAIiD,EAASlD,EAAUC,IAAa,GAChCnE,IAAcxP,GAChB4W,EAAOtd,SAAQ,SAASwB,GACtB,GAAIE,MAAMC,QAAQH,GAAQ,CACxB,IAAImvB,EAAKnvB,EAAMS,KAAI,SAASyP,GAC1B,OAAOhL,EAAY2T,EAAW3I,KAEhC0J,EAAe1M,KAAKiiB,QAEpBvV,EAAe1M,KAAKhI,EAAY2T,EAAW7Y,YAO9C4Z,GAQT+U,eAAgB,SAASprB,GACvB,OAAIA,EAAMoW,WACDpW,EAAMoW,WAGRpW,EAAMuU,eAAe1E,KAAK,MAWnCob,iBAAkB,SAASjrB,EAAO2V,EAAO0V,GACvC,IAAIrD,EAAe,GAEf7T,EAAoBnU,EAAMmU,mBAAqB,GACnD3Z,OAAOE,KAAKyZ,GAAmBlZ,SAAQ,SAASkW,IAC5BgD,EAAkBhD,IAAc,IACtClW,SAAQ,SAASwkB,GAC3BuI,EAAare,KAAKwH,EAAY,IAAMsO,SAIxC,IAAIrL,EAAiBpU,EAAMoU,gBAAkB,GAC7C5Z,OAAOE,KAAK0Z,GAAgBnZ,SAAQ,SAASkW,IACzBiD,EAAejD,IAAc,IACnClW,SAAQ,SAASwkB,GAC3BuI,EAAare,KAAKwH,EAAY,KAAOsO,SAIzC,IAAIpL,EAA+BrU,EAAMqU,8BAAgC,GACzE7Z,OAAOE,KAAK2Z,GAA8BpZ,SAAQ,SAASkW,GACzD,IAAIyP,EAAcvM,EAA6BlD,IAAc,GAC7D,GAAIA,IAAcwE,GAAUiL,GAAsC,IAAvBA,EAAYtmB,OAAvD,CAGA,IAAIuxB,EAAY,GAEhBjL,EAAY3lB,SAAQ,SAASwkB,GAC3BoM,EAAUliB,KAAKwH,EAAY,IAAMsO,MAGnCuI,EAAare,KAAKkiB,OAGpB,IAAIrX,EAAgCxU,EAAMwU,+BAAiC,GA4C3E,OA3CAha,OAAOE,KAAK8Z,GAA+BvZ,SAAQ,SAASkW,GAC1D,IACIsO,GADcjL,EAA8BrD,IAAc,IACjC,GAE7B,QAAmBxT,IAAf8hB,EAAJ,CAIA,IAGIqM,EACAC,EAJAnT,EAAoB5Y,EAAMsa,2BAA2BnJ,GACrDiJ,EAAYpa,EAAMqa,+BAA+BzB,GACjDhD,EAAW5V,EAAMsc,yBAAyB1D,GAK9C,GAAIjD,IAAUxE,EAAW,CAGvB,IAAuC,IAAnCsO,EAAW3hB,QAAQsc,KAAuBxE,IAAsC,IAA1ByV,GACvDzV,GAAYA,EAAS1X,MAAMkc,GAAW9f,SAAWmlB,EAAWvhB,MAAMkc,GAAW9f,OAC9E,OAGGsb,GAIHmW,EAAkBnW,EAAS1X,MAAMkc,GAAW9f,OAAS,EACrDmlB,EAAa7J,IAJbmW,EAAkBtM,EAAWvhB,MAAMkc,GAAW9f,OAAS,EACvDmlB,EAAaA,EAAWzY,MAAM,EAAGyY,EAAWlF,YAAYH,KAM1D0R,EAAoBlT,EAAkBwE,WAAW2O,QAEjDA,EAAkBtM,EAAWvhB,MAAMkc,GAAW9f,OAAS,EAEvDwxB,EAAoBlT,EAAkBwE,WAAW2O,GAG/CD,GACF9D,EAAare,KAAK,CAACmiB,EAAoB,IAAMrM,QAI1CuI,GAGTgD,qCAAsC,SAAShrB,GAG7C,OAAOA,EAAMkU,mBAAmB/V,QAE9B,SAA+C6tB,EAAepT,GAC5D,IAAIqT,EAAyBjsB,EAAM8V,0BAA0B8C,EAAkB7c,MAAM,GAGrF,IAAKkwB,EAEH,OADAD,EAAcriB,KAAKiP,EAAkBwE,WAAW,IACzC4O,EAGT,IAAI5R,EAAYpa,EAAMqa,+BAA+BzB,GACjDuR,EAAQ8B,EAAuB/tB,MAAMkc,GAAW9f,OAChD4xB,EAAgBtT,EAAkBwE,WAAWpW,MAAM,EAAGmjB,EAAQ,GAElE,OAAO6B,EAAcpxB,OAAOsxB,KAjBtB,KAqBZP,0CAA2C,SAAS3rB,EAAO4Y,EAAmBuT,GAC5E,IAAI/R,EAAYpa,EAAMqa,+BAA+BzB,GACrD,IAAkB,IAAduT,EAAoB,CACtB,IAAIvW,EAAW5V,EAAMsc,yBAAyB1D,GAC1CsG,EAAiB,EAKrB,OAHItJ,IACFsJ,EAAiBtJ,EAAS1X,MAAMkc,GAAW9f,QAEtC,CAACse,EAAkBwE,WAAW8B,IAGvC,IAIIkN,GAJyBpsB,EAAM8V,0BAA0B8C,EAAkB7c,MAAM,IAAM,IAIlDmC,MAAMkc,GAAW9f,OAAS,EACnE,OAAOse,EAAkBwE,WAAWpW,MAAM,EAAGolB,EAAc,IAG7D3G,uBAAwB,SAAStU,EAAWI,EAAO6T,EAAcplB,GAC/D,IAAIqsB,EAA+BrsB,EAAM2X,mBAAmBxG,GAC1DnR,EAAM+V,iBAAiB5E,GACvBnR,EACEssB,EAAiC,CACnClb,WAAYG,EACZJ,UAAWA,GAKb,MAH4B,kBAAjBiU,IACTkH,EAA+BlH,aAAeA,GAEzCpS,EACL,GACAmQ,EAAekB,qBAAqBgI,GACpCC,KAKN5tB,EAAOC,QAAUwkB,G,kCChUjB,gDASA,SAASoJ,EAAqB1rB,EAAOlB,EAAaX,GAChD,IACI6W,EAAoBjV,YAA0BC,EAAOlB,EAAaX,EAL/D,QAK4E,IAEnF,OAAI6W,GAIG,GAGT,SAAS2W,EAAQ3rB,EAAOlB,EAAaC,EAAgBZ,GACnD,IAEIytB,EAAYvsB,YAAgB,GAjBzB,QAiBiCN,GAGxC,OAAOF,YAAYC,EAAa8sB,EAAWztB,GAD3B,GAmBH0tB,gBAAgB,CAC7B5wB,YAAa,mBACb4K,UAAW,CACTpF,kBAAmBqrB,IAAUC,QAE/B3pB,iBAAkB,SAA0BpC,EAAOlB,EAAaJ,GAC9D,MAAO,CACLsW,kBAAmB0W,EAAqB1rB,EAAOlB,EAAa,CAC1DP,IAAKyB,EAAMsC,aACXjE,kBAAmB2B,EAAMsD,oBAE3BwB,gBAAiBpG,EAAcoG,kBAGnCtC,OAAQ,SAAgBxC,EAAOlB,EAAaC,GAC1C,OAAO4sB,EAAQ3rB,EAAOlB,EAAaC,EAAgB,CACjDR,IAAKyB,EAAMsC,aACXjE,kBAAmB2B,EAAMsD,qBAG7BmB,QAAS,SAAiBzE,EAAOlB,GAC/B,OApCJ,SAAkBkB,EAAOlB,EAAaX,GACpC,OAAOuC,YAAa5B,EAAaX,EAxB1B,SA2DE6tB,CAAShsB,EAAOlB,EAAa,CAClCP,IAAKyB,EAAMsC,aACXjE,kBAAmB2B,EAAMsD,qBAG7B7B,oBAAqB,SAA6BwD,EAAkBjF,EAAOlB,GACzE,OAAOmG,EAAiB8Q,SAAS2V,EAAqB1rB,EAAOlB,EAAa,CACxEP,IAAKyB,EAAMsC,aACXjE,kBAAmB2B,EAAMsD,sBAG7B5B,YAAa,SAAqB1B,EAAOlB,GACvC,IAAIa,EAvEC,QAwEDqV,EAAoB0W,EAAqB1rB,EAAOlB,EAAa,CAC/DP,IAAKyB,EAAMsC,aACXjE,kBAAmB2B,EAAMsD,oBAE3B,MAAO,CACL3D,GAAIA,EACJpD,MAAO2B,YAAW,CAChBK,IAAKyB,EAAMsC,aACXjE,kBAAmB2B,EAAMsD,oBAE3B2oB,MAA6B,OAAtBjX,EAA6B,GAAK,CAAC,CACxCkX,MAAO,GAAGnyB,OAAO4F,EAAI,MAAM5F,OAAOib,GAClCpZ,MAAO,SAAesI,GACpB,OAAOynB,EAAQ3rB,EAAOkE,EAAW,GAAI,CACnC3F,IAAKyB,EAAMsC,aACXjE,kBAAmB2B,EAAMsD,qBAG7B0R,kBAAmBA,S,kCChG3B,kCA+Ce6W,gBAAgB,CAC7B5wB,YAAa,cACbmH,iBAAkB,SAA0BpC,EAAOlB,EAAaJ,GAC9D,IAAIC,EAAUF,YAAWC,EAAe,CACtCH,IAAKyB,EAAMsC,aACXjE,kBAAmB2B,EAAMsD,oBAG3B,IAAK3E,EACH,MAAO,CACLzC,KAAM,IAIV,IAAIiwB,EAAoBlwB,YAAqB0C,EAAQzC,KAAMyC,EAAQxC,YAAawC,EAAQvC,MAExF,MAAO,CACLF,KAFgCO,YAAW0vB,EAAmBxtB,EAAQjC,WAiB1E+E,oBAAqB,SAA6BwD,GAChD,OAAOA,M,kMC/EJ,IAAImnB,EAAiB,CAC1BC,gBAAiB,6BACjBC,iBAAkB,+B,cCQpB,SAASC,EAAiBC,GACoB,oBAAjCA,EAAa3c,kBACtB2c,EAAa3c,gBAAgB,UAAU9V,OAAO0yB,UAAc,MAC5DD,EAAa3c,gBAAgB,wBAAwB9V,OCd1C,SDc0D,OAIzE,IAAI2yB,EAAsB,SAA6BC,GACrD,OAAOvuB,YAAmB,CACxBG,IAAKouB,EAAO3sB,MAAMsC,aAClBjE,kBAAmBsuB,EAAO3sB,MAAMsD,qBAIhCspB,EAA4B,SAAmCD,EAAQ/tB,GACzE,OAAO+tB,EAAO3sB,MAAMsD,kBAAkBhF,gBAAkBM,GAMtDiuB,EAAgB,SAAuBF,GACzC,OAAO/rB,QAAQ+rB,EAAO3sB,MAAMpB,UAG1BkuB,EAA0B,SAAiCH,EAAQ/tB,GACrE,OAAO+tB,EAAO3sB,MAAMpB,UAAYA,GAG9BmuB,EAAwB,SAA+BC,EAAaC,GACtE,IAAIC,EAAqBL,EAAcG,GACnCG,EAAsBN,EAAcI,GAExC,OAAIC,IAAuBC,GACjB,GAGLD,GAAsBC,EAClB,EAGF,GAKT,SAASC,EAAyB9X,GAgBhC,OAAO3b,OAAOE,KAAKyb,GAAYjZ,KAAI,SAAUhC,GAC3C,OAZW,SAAgBwvB,GAC3B,IAAK,IAAIxnB,EAAO7I,UAAUC,OAAQ0G,EAAO,IAAIrE,MAAMuG,EAAO,EAAIA,EAAO,EAAI,GAAIrF,EAAO,EAAGA,EAAOqF,EAAMrF,IAClGmD,EAAKnD,EAAO,GAAKxD,UAAUwD,GAG7B,IAAIzD,EAAI,EACR,OAAOswB,EAAOzsB,QAAQ,OAAO,WAC3B,OAAO2N,mBAAmB5K,EAAK5G,SAK1B8zB,CAAO,QAAShzB,GAhBsBuB,EAgBD0Z,EAAWjb,GAfN,oBAA1CV,OAAOiB,UAAU6C,SAAS3C,KAAKc,IAA0E,mBAA1CjC,OAAOiB,UAAU6C,SAAS3C,KAAKc,GAetC+N,KAAKI,UAAUuL,EAAWjb,IAAQib,EAAWjb,KAhBxF,IAAyBuB,KAiB5CoT,KAAK,KAaK,SAASse,EAA2BjtB,GACjD,IAAI4P,EAAY5P,EAAK4P,UACjBsd,EAAoBltB,EAAKmtB,aACzBA,OAAqC,IAAtBD,EAA+B,GAAKA,EACnDf,EAAensB,EAAKmsB,aACpBiB,EAAeptB,EAAKotB,aACpBC,EAAqBrtB,EAAKqtB,mBAC1BjH,EAAStE,IAAoBqK,EAAcvc,EAAW5W,YAAc,GAAI+yB,IAC5EG,EAAiBC,GACjB/F,EAAOkH,GAAG,UA2LV,WACOC,IACHA,EAAqBxc,YAAW,WAC9B,IAAIyc,EAAkBnrB,EAAMC,WAExBsR,GADqB4Z,EAAgBlpB,mBACtBU,YAAyBwoB,EAAiB,CAAC,wBAE9DnrB,EAAMmB,SAASxK,YAAc,GAAI4a,EAAc,CAC7CnP,iBAAiB,OAElB4oB,OArM8BC,GAAG,SAAUG,EAAoB,CACpElvB,QAASqR,KACP0d,GAAG,QAASI,GAChB,IAAIC,GAAO,EACPJ,EAAqB,KACrBK,EAA0BxH,EAAOtnB,MACjC4E,EEtGS,SAA8BmqB,GAC3C,IAAItrB,EAAU,GAEVurB,GAAY,EAGhB,SAASC,IACHD,IAIJA,GAAY,EACZ7yB,aAAM,WACJ6yB,GAAY,EACZD,QAIJ,MAAO,CACLlqB,eAAgB,SAAwB2oB,GAGtC,OAFA/pB,EAAQkG,KAAK6jB,GACbyB,IACO,WACLxrB,EAAQokB,OAAOpkB,EAAQ3F,QAAQ0vB,GAAS,GACxCyB,MAGJ7pB,OAAQ6pB,EACRC,WAAY,WACV,OAAOzrB,IFyEU0rB,EAsVrB,WACE,IAAIvpB,EAAWrD,EAAYgB,EAAMC,WAAWC,SAC5CF,EAAMmB,SAASxK,YAAc,GAAIqJ,EAAMC,WAAY,CACjDoC,SAAUA,EACVH,WAAW,KAIbkN,QA3JF,SAA6BsQ,EAAQzjB,GACnC,IAAKA,EACH,OAMF,KAAMyjB,EAAO1S,aAAe0S,EAAOmM,mBAAqBnM,EAAOoM,WAA+C,oBAA3BpM,EAAOvS,iBACxF,OAUF,GAAIuS,EAAO1S,cAAgB0S,EAAOmM,eAAgB,CAChDnM,EAAOmM,gBAAiB,EACxB,IAAIE,EAAarM,EAAOtQ,OAExBsQ,EAAOtQ,OAAS,SAAU1B,GACxB,IAAK,IAAIvN,EAAQrJ,UAAUC,OAAQi1B,EAAa,IAAI5yB,MAAM+G,EAAQ,EAAIA,EAAQ,EAAI,GAAIC,EAAQ,EAAGA,EAAQD,EAAOC,IAC9G4rB,EAAW5rB,EAAQ,GAAKtJ,UAAUsJ,GAGpC,IAAI6rB,EAA+Bve,EAAS/T,KAAI,SAAUoR,GACxD,OAAOpU,YAAc,GAAIoU,EAAS,CAChC0C,OAAQid,EAAyB3f,EAAQ0C,aAG7C,OAAOiS,EAAO1S,YAAYJ,eAAe7H,IAAI,CAC3CqF,OAAQ,SACR3M,KAAM,CAACwuB,GAA8B50B,OAAO20B,KAC3C,WACD,OAAOD,EAAWhsB,WAAM,EAAQ,CAAC2N,GAAUrW,OAAO20B,QAKxD,GAAI5yB,MAAMC,QAAQ4C,EAAQA,SAExB,YAMJ,SAAkDyjB,EAAQzjB,GAGxD,GAAIyjB,EAAO1S,YAgBT,YAfA0S,EAAO1S,YAAYJ,eAAerF,IAAI,CACpC6C,OAAQ,SACR3M,KAAM,CAACxB,EAAQrB,QAAO,SAAU+I,EAAK6W,GACnC,OAAO7W,EAAItM,OAAOmjB,EAAO0R,WAAWvyB,KAAI,SAAUoR,GAChD,MAAO,CACLwC,UAAWxC,EAAQlR,MACnB4T,OAAQ1C,EAAQ0C,cAGnB,MACF,CACDxR,QAASA,EAAQrB,QAAO,SAAU+I,EAAK6W,GACrC,OAAO7W,EAAItM,OAAOmjB,EAAO0R,cACxB,MAWP,IAAIv0B,EAAM,6BAA6BN,OAAO4P,KAAKI,UAAU,CAC3DqG,SAAUzR,EAAQrB,QAAO,SAAU+I,EAAK6W,GACtC,OAAO7W,EAAItM,OAAOmjB,EAAO0R,WAAWvyB,KAAI,SAAUoR,GAChD,MAAO,CACLwC,UAAWxC,EAAQlR,MACnB4T,OAAQ1C,EAAQ0C,cAGnB,OAELiS,EAAOyM,MAAQx1B,YAAc,GAAI+oB,EAAOyM,MAAOxvB,YAAgB,GAAIhF,EAAKsP,KAAKI,UAAU,CACrFpL,QAASA,EAAQrB,QAAO,SAAU+I,EAAK6W,GACrC,OAAO7W,EAAItM,OAAOmjB,EAAO0R,cACxB,QAhDHE,CAAyC1M,EAAQzjB,EAAQA,UAoD7D,SAAmDyjB,EAAQzjB,GAGzD,GAAIyjB,EAAO1S,YAYT,YAXA0S,EAAO1S,YAAYJ,eAAerF,IAAI,CACpC6C,OAAQ,SACR3M,KAAM,CAACxB,EAAQiwB,WAAWvyB,KAAI,SAAUoR,GACtC,MAAO,CACLwC,UAAWxC,EAAQlR,MACnB4T,OAAQ1C,EAAQ0C,aAGnB,CACDxR,QAASA,EAAQiwB,aAWrB,IAAIv0B,EAAM,6BAA6BN,OAAO4P,KAAKI,UAAU,CAC3DqG,SAAUzR,EAAQiwB,WAAWvyB,KAAI,SAAUoR,GACzC,MAAO,CACLwC,UAAWxC,EAAQlR,MACnB4T,OAAQ1C,EAAQ0C,cAItBiS,EAAOyM,MAAQx1B,YAAc,GAAI+oB,EAAOyM,MAAOxvB,YAAgB,GAAIhF,EAAKsP,KAAKI,UAAU,CACrFpL,QAASA,EAAQiwB,eAjFnBG,CAA0C3M,EAAQzjB,GAjPpDqwB,CAAoBxC,EAAciB,GAClC,IAAI/qB,EGzGS,SAAqB8qB,GAClC,IAAIruB,EAAQquB,EACRyB,EAAY,GAChB,MAAO,CACLtsB,SAAU,WACR,OAAOxD,GAET0E,SAAU,SAAkBK,GAC1B/E,EAAQ+E,EACR+qB,EAAU70B,SAAQ,SAAU80B,GAC1B,OAAOA,QAGXvrB,UAAW,SAAmBurB,GAE5B,OADAD,EAAUnmB,KAAKomB,GACR,WACLD,EAAUjI,OAAOiI,EAAUhyB,QAAQiyB,GAAW,MHyFxCC,CAAY,CACtBvsB,QAAS4qB,EACTzoB,SAAUqqB,EAAgB3B,GAC1B9uB,QAkUF,SAA6BA,GAC3B,IAAKA,EACH,OAAO,KAGT,GAAI7C,MAAMC,QAAQ4C,EAAQA,SACxB,OAAOA,EAAQA,QAAQrB,QAAO,SAAU+I,EAAK6W,GAC3C,OAAO7jB,YAAc,GAAIgN,EAAKhH,YAAgB,GAAI6d,EAAOmS,iBAAkB,IAAIlN,IAAoBtF,cAAc,IAAIsF,IAAoBpP,iBAAiBmK,EAAO/d,OAAQ+d,EAAO0R,gBAC/K,IAGL,OAAO,IAAIzM,IAAoBtF,cAAc,IAAIsF,IAAoBpP,iBAAiBpU,EAAQQ,OAAQR,EAAQiwB,YA7UrGU,CAAoB7B,GAC7BzoB,MAAO,KACPJ,WAAW,EACXE,iBAAiB,EACjBD,yBAAyB,IAkB3B,SAASnD,EAAYvC,GACnB,OAAO4E,EAAesqB,aAAar0B,QAAO,SAAU2yB,GAClD,OAAO/rB,QAAQ+rB,EAAOjrB,gBACrBrF,KAAI,SAAUswB,GACf,OAAOA,EAAOjrB,YAAYvC,MAI9B,SAASsC,IACP,IAAI8tB,EAAmBxrB,EAAesqB,aAAar0B,QAAO,SAAU2yB,GAClE,OAAO/rB,QAAQ+rB,EAAOlrB,wBACrBzH,QAAO,SAAU2yB,GAClB,OAAQD,EAAoBC,KAAYE,EAAcF,MACrDrvB,QAAO,SAAUkjB,EAAKmM,GACvB,OAAOA,EAAOlrB,oBAAoB+e,KACjCyN,GACCuB,EAAiBzrB,EAAesqB,aAAar0B,QAAO,SAAU2yB,GAChE,OAAO/rB,QAAQ+rB,EAAOlrB,wBACrBzH,QAAO,SAAU2yB,GAClB,IAAI8C,EAA8B/C,EAAoBC,IAAWC,EAA0BD,EAAQ1c,GAC/Fyf,EAAyB7C,EAAcF,IAAWG,EAAwBH,EAAQ1c,GACtF,OAAOwf,GAA+BC,KAGvCrP,KAAK0M,GAAuBzvB,QAAO,SAAUkjB,EAAKmM,GACjD,OAAOA,EAAOlrB,oBAAoB+e,KACjC+O,GACCI,EAAiB5rB,EAAesqB,aAAar0B,QAAO,SAAU2yB,GAChE,OAAO/rB,QAAQ+rB,EAAOlrB,wBACrBzH,QAAO,SAAU2yB,GAClB,IAAIiD,EAAiClD,EAAoBC,KAAYC,EAA0BD,EAAQ1c,GACnG4f,EAA4BhD,EAAcF,KAAYG,EAAwBH,EAAQ1c,GAC1F,OAAO2f,GAAkCC,KAG1CxP,KAAK0M,GAAuBzvB,QAAO,SAAU8B,EAASutB,GACrD,IAAI/tB,EAAU8tB,EAAoBC,GAAUA,EAAO3sB,MAAMsD,kBAAkBhF,cAAgBquB,EAAO3sB,MAAMpB,QACpGgE,EAAUxD,EAAQR,IAAY,GAClC,OAAOvF,YAAc,GAAI+F,EAASC,YAAgB,GAAIT,EAASgE,EAAQ7I,OAAO4yB,OAC7E,IASH,MAAO,CACL6C,eAAgBA,EAChBM,kBAVsBn2B,OAAOE,KAAK81B,GAAgBtzB,KAAI,SAAUuC,GAChE,MAAO,CACL0W,WAAYqa,EAAe/wB,GAAStB,QAAO,SAAUkjB,EAAKmM,GACxD,OAAOA,EAAOlrB,oBAAoB+e,KACjC+O,GACH3wB,QAASA,OASf,SAASkT,IACP,IAAKkc,EAAM,CACT,IAAI+B,EAAuBtuB,EAAoBglB,EAAOtnB,OAClDqwB,EAAiBO,EAAqBP,eACtCM,EAAoBC,EAAqBD,kBAM7CrJ,EAAO5D,eAAe1c,QAAQ/L,SAAQ,SAAU6pB,GAe9CA,EAAc+F,YAEhB8F,EAAkB11B,SAAQ,SAAUmG,GAClC,IAAI3B,EAAU2B,EAAM3B,QAChB0W,EAAa/U,EAAM+U,WACHmR,EAAOgB,QAAO,WAChC,OAAOnS,KAEKqY,GAAG,SAAUG,EAAoB,CAC7ClvB,QAASA,KACP+uB,GAAG,QAASI,MAElBtH,EAAO5iB,SAAS2rB,GAChB/I,EAAO3U,UAIX,SAASgc,EAAoB7sB,GAC3B,IAAIrC,EAAUqC,EAAMrC,QACpB,OAAO,SAAU0oB,GACf,IAAInoB,EAAQuD,EAAMC,WACdqtB,GAAyBvJ,EAAO5D,eAAeppB,OAC/CkF,EAAUQ,EAAMR,QAAUQ,EAAMR,QAAU,GAI9CA,GAAWqxB,GAAyBrxB,EAAQ+gB,eAAiB,GAAK/gB,EAKhEA,EAHGqxB,EAGO1I,EAAM3oB,QAFNtF,YAAc,GAAIsF,EAASU,YAAgB,GAAIT,EAAS0oB,EAAM3oB,UAK1E,IAAI0W,EAAe3S,EAAMC,WACrBstB,EAAsB5a,EAAavQ,gBAElC2hB,EAAOoB,uBACVpW,aAAamc,GACbA,EAAqB,KACrBqC,GAAsB,GAGC5a,EAAa1Q,mBAAtC,IACIsP,EAAe5O,YAAyBgQ,EAAc,CAAC,uBAE3D3S,EAAMmB,SAASxK,YAAc,GAAI4a,EAAc,CAC7CtV,QAASA,EACTmG,gBAAiBmrB,EACjBrrB,WAAW,EACXI,MAAO,SAKb,SAAS+oB,EAAkBltB,GACzB,IAAImE,EAAQnE,EAAMmE,MACdqQ,EAAe3S,EAAMC,WACrBstB,EAAsB5a,EAAavQ,gBAElC2hB,EAAOoB,uBACVpW,aAAamc,GACbqC,GAAsB,GAGC5a,EAAa1Q,mBAAtC,IACIsP,EAAe5O,YAAyBgQ,EAAc,CAAC,uBAE3D3S,EAAMmB,SAASxK,YAAc,GAAI4a,EAAc,CAC7CnP,gBAAiBmrB,EACjBjrB,MAAOA,EACPJ,WAAW,KAgPf,MAAO,CACLlC,MAAOA,EACPqB,eAAgBA,EAChBmsB,cATF,WACE,OAAOxtB,EAAMC,WAAWoC,SAASzH,QAAO,SAAUkjB,EAAK2P,GACrD,MAA0B,qBAAZA,EAAKxwB,GAAqB6gB,EAAIzmB,OAAOo2B,EAAKxwB,IAAM6gB,IAC7D,KAOH/e,oBAAqBA,EACrByB,uBAlDF,SAAgCktB,GAC9B,IAAI9f,EAAY8f,EAAM9f,UAClBI,EAAQ0f,EAAM1f,MACd2f,EAAqBD,EAAM7L,aAC3BA,OAAsC,IAAvB8L,EAAgC,GAAKA,EAGpDC,EAA0B1lB,KAAK2lB,IAAI,EAAG3lB,KAAK4lB,IAAIjM,EAAc,MACjE7hB,EAAMmB,SAASxK,YAAc,GAAIqJ,EAAMC,WAAY,CACjDkC,yBAAyB,KAE3B4hB,EAAOtjB,qBAAqBmN,EAAWI,EAAO4f,GAAyB90B,MAAK,SAAUsS,GACpF,IAAI2iB,EAEJ/tB,EAAMmB,SAASxK,YAAc,GAAIqJ,EAAMC,WAAY,CACjDqC,MAAO,KACPH,yBAAyB,EACzBF,mBAAoBtL,YAAc,GAAIqJ,EAAMC,WAAWgC,oBAAqB8rB,EAAiB,GAAIpxB,YAAgBoxB,EAAgBngB,EAAWxC,EAAQ+W,WAAYxlB,YAAgBoxB,EAAgB,QAAS/f,GAAQ+f,UAElN,SAAUzrB,GACXtC,EAAMmB,SAASxK,YAAc,GAAIqJ,EAAMC,WAAY,CACjDkC,yBAAyB,EACzBG,MAAOA,QAERwF,OAAM,SAAUxF,GAKjBoM,YAAW,WACT,MAAMpM,SAqBV0rB,sBA7DF,SAA+BC,GAC7B,IAAI5rB,EAAWrD,EAAYivB,GAC3BjuB,EAAMmB,SAASxK,YAAc,GAAIqJ,EAAMC,WAAY,CACjDC,QAAS+tB,EACT5rB,SAAUA,EACVH,WAAW,KAEbkN,KAuDAnQ,gBAvEF,SAAyBgvB,GACvB,IAAI7xB,EAAc4D,EAAMC,WAAWC,QACnC,OAAOmB,EAAesqB,aAAar0B,QAAO,SAAU2yB,GAClD,OAAO/rB,QAAQ+rB,EAAOhrB,oBACrBrE,QAAO,SAAUkjB,EAAKmM,GACvB,OAAOA,EAAOhrB,gBAAgB7C,EAAa0hB,KAC1CmQ,IAkEHC,aAzZF,SAAsBxO,GACpBmK,EAAiBnK,GACjBqE,EAAOhE,UAAUL,GACjBtQ,KAuZA+e,YAnBF,SAAqBC,GACnB7C,EAA0BA,EAAwBnY,SAASgb,IAmB3DhhB,WArZF,WACE2W,EAAO3W,aACPgC,KAoZAif,WAhaF,WACE/C,GAAO,IAmaX,SAASoB,EAAgB3B,GACvB,OAAKA,EAKEA,EAAa1oB,SAAS1I,KAAI,SAAU20B,GACzC,OAAO33B,YAAc,CACnBuC,MAAO,cACNo1B,EAAO,CACR/E,MAAO+E,EAAM/E,OAAS+E,EAAM/E,MAAM5vB,KAAI,SAAU40B,GAC9C,OAAO53B,YAAc,CACnBuC,MAAO,cACNq1B,EAAM,CACPhF,MAAOgF,EAAKhF,OAASgF,EAAKhF,MAAM5vB,KAAI,SAAU60B,GAC5C,OAAO73B,YAAc,CACnBuC,MAAO,cACNs1B,gBAfJ,G,cI3gBX,SAASC,EAAanxB,GACpB,OAAOY,QAAQZ,EAAMlB,aA0CvB,IAAIsyB,EAEJ,SAAUxvB,GAuBR,SAASwvB,EAAcpxB,GACrB,IAAI6B,EAEJC,YAAgBC,KAAMqvB,GAEtBvvB,EAAQG,YAA2BD,KAAME,YAAgBmvB,GAAet2B,KAAKiH,KAAM/B,IAEnFX,YAAgB6C,YAAuBL,GAAQ,gBAAgB,GAE/D,IAAIwvB,EAAuB/D,EAA2B,CACpDrd,UAAWpO,EAAM7B,MAAMiQ,UACvBuc,aAAc3qB,EAAM7B,MAAMwsB,aAC1BgB,aAAc3rB,EAAM7B,MAAMlB,aAAe,GACzC2uB,aAAc5rB,EAAM7B,MAAMytB,aAC1BC,mBAAoB7rB,EAAM7B,MAAM0tB,qBAE9BprB,EAAe,CACjBI,MAAO2uB,EAAqB3uB,MAC5BqB,eAAgBstB,EAAqBttB,eACrCvF,kBAAmBqD,EAAM7B,MAAMiQ,UAC/B1N,sBAAuBV,EAAMyvB,6BAA6BjuB,KAAKnB,YAAuBL,IACtFkB,mBAAoBlB,EAAMkB,mBAAmBM,KAAKnB,YAAuBL,IACzEqB,uBAAwBrB,EAAMqB,uBAAuBG,KAAKnB,YAAuBL,IACjF2C,oBAAqB3C,EAAM2C,oBAAoBnB,KAAKnB,YAAuBL,IAC3EuB,mBAAoBvB,EAAMuB,mBAAmBC,KAAKnB,YAAuBL,KAO3E,OALAA,EAAM1C,MAAQ,CACZgyB,aAAcA,EAAatvB,EAAM7B,OACjCqxB,qBAAsBA,EACtB/uB,aAAcA,GAETT,EAqGT,OA1JA0B,YAAU6tB,EAAexvB,GAEzB4B,YAAa4tB,EAAe,KAAM,CAAC,CACjC/2B,IAAK,2BACLuB,MAAO,SAAkCqI,EAAWstB,GAClD,IAAIC,EAAmBL,EAAaltB,GAChCwtB,EAAsBF,EAAUF,qBAAqB3uB,MAAMC,WAAWC,QACtE+tB,EAAkB1sB,EAAUnF,YAMhC,OAJI0yB,IAAqBltB,IAAQmtB,EAAqBd,IACpDY,EAAUF,qBAAqBX,sBAAsBzsB,EAAUnF,aAG1D,CACLqyB,aAAcK,EACdlvB,aAAcjJ,YAAc,GAAIk4B,EAAUjvB,aAAc,CACtD9D,kBAAmByF,EAAUgM,iBAwCrCzM,YAAa4tB,EAAe,CAAC,CAC3B/2B,IAAK,qBACLuB,MAAO,SAA4ByI,GACjC,IAAIqtB,EAAmBP,EAAa9sB,GAEpC,GAAIqtB,IAAqB3vB,KAAK5C,MAAMgyB,aAClC,MAAM,IAAI5vB,MAAM,0EAGlB,IAAKmwB,GAAoB3vB,KAAK5C,MAAMgyB,aAClC,MAAM,IAAI5vB,MAAM,0EAGdQ,KAAK/B,MAAM2xB,UAAYttB,EAAUstB,SAAW5vB,KAAK/B,MAAM2xB,SACzD5vB,KAAK5C,MAAMkyB,qBAAqBvhB,aAG9BzL,EAAU4L,YAAclO,KAAK/B,MAAMiQ,WACrClO,KAAK5C,MAAMkyB,qBAAqBR,YAAY9uB,KAAK/B,MAAMiQ,WAGrD5L,EAAUmoB,eAAiBzqB,KAAK/B,MAAMwsB,cACxCzqB,KAAK5C,MAAMkyB,qBAAqBT,aAAa7uB,KAAK/B,MAAMwsB,gBAG3D,CACDnyB,IAAK,uBACLuB,MAAO,WACLmG,KAAK6B,cAAe,EACpB7B,KAAK5C,MAAMkyB,qBAAqBN,eAEjC,CACD12B,IAAK,qBACLuB,MAAO,SAA4BkD,GAEjC,OADAA,EAAciD,KAAK5C,MAAMkyB,qBAAqB1vB,gBAAgB7C,GACvDiD,KAAK5C,MAAMgyB,cAAgBpvB,KAAK/B,MAAMuF,UAAYxD,KAAK/B,MAAMuF,UAAUzG,EAAaiD,KAAK6vB,gBAAkB,MAEnH,CACDv3B,IAAK,+BACLuB,MAAO,SAAsCkD,GAC3CA,EAAciD,KAAK5C,MAAMkyB,qBAAqB1vB,gBAAgB7C,GAC9DiD,KAAKyC,oBAAoB1F,GAEpBiD,KAAK5C,MAAMgyB,cACdpvB,KAAK5C,MAAMkyB,qBAAqBX,sBAAsB5xB,KAGzD,CACDzE,IAAK,sBACLuB,MAAO,SAA6BkD,GAC9BiD,KAAK/B,MAAMwE,sBAAwBzC,KAAK6B,cAC1C7B,KAAK/B,MAAMwE,oBAAoB1F,KAGlC,CACDzE,IAAK,qBACLuB,MAAO,SAA4B6F,EAAqBtD,EAAS6B,EAAO0B,GACtE,GAAIK,KAAK/B,MAAMoD,mBAAoB,CACjC,IAAIyuB,EAAe9vB,KAAK/B,MAAMlB,YAAciD,KAAK/B,MAAMlB,YAAc,GAErEiD,KAAK/B,MAAMoD,mBAAmB3B,EAAqBtD,EAAS6B,EAAO6xB,GAGrE,GAAI9vB,KAAK/B,MAAM8xB,iBAAkB,CAC/B,IAAIC,EAAgBhwB,KAAK/B,MAAMlB,YAAciD,KAAK/B,MAAMlB,YAAc,GAEtEiD,KAAK/B,MAAM8xB,iBAAiB,CAC1BrwB,oBAAqBA,EACrBC,YAAaA,EACbvD,QAASA,EACT6B,MAAOA,EACPlB,YAAaizB,OAIlB,CACD13B,IAAK,yBACLuB,MAAO,SAAgCkD,GACrCiD,KAAK5C,MAAMkyB,qBAAqBnuB,uBAAuBpE,KAExD,CACDzE,IAAK,eACLuB,MAAO,WACL,OAAOmG,KAAK5C,MAAMkyB,qBAAqBnB,kBAExC,CACD71B,IAAK,SACLuB,MAAO,WACL,OAA4C,IAAxCo2B,WAASvS,MAAM1d,KAAK/B,MAAMif,UACrB,KAGFvZ,IAAMC,cAAcyC,IAAuB,CAChDxM,MAAOmG,KAAK5C,MAAMmD,cACjBP,KAAK/B,MAAMif,cAIXmS,EA3JT,CA4JEp2B,aAEFqE,YAAgB+xB,EAAe,eAAgB,CAC7C1D,mBAAoB,IACpBiE,SAAS,IAGXtyB,YAAgB+xB,EAAe,YAAa,CAE1CnhB,UAAW6b,IAAUC,OAAOkG,WAC5BzF,aAAcV,IAAUoG,MAAM,CAC5BpgB,OAAQga,IAAUqG,KAAKF,WACvB9uB,qBAAsB2oB,IAAUqG,KAChCtiB,gBAAiBic,IAAUqG,KAC3BriB,WAAYgc,IAAUqG,OACrBF,WACH1sB,UAAWumB,IAAUqG,KACrBR,QAAS7F,IAAUsG,KACnBtzB,YAAagtB,IAAUnwB,OACvB6I,oBAAqBsnB,IAAUqG,KAC/B/uB,mBAAoB0oB,IAAUqG,KAC9BL,iBAAkBhG,IAAUqG,KAC5B1E,aAAc3B,IAAUuG,UAAU,CAACvG,IAAUnwB,OAAQmwB,IAAU9tB,QAC/DihB,SAAU6M,IAAU9M,KACpB0O,mBAAoB5B,IAAUwG,SAGjBlB","file":"static/js/4.39db8081.chunk.js","sourcesContent":["import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? Object(arguments[i]) : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\n// From https://github.com/reactjs/react-redux/blob/master/src/utils/shallowEqual.js\nexport var shallowEqual = function shallowEqual(objA, objB) {\n  if (objA === objB) {\n    return true;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  } // Test for A's keys different from B.\n\n\n  var hasOwn = Object.prototype.hasOwnProperty;\n\n  for (var i = 0; i < keysA.length; i++) {\n    if (!hasOwn.call(objB, keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {\n      return false;\n    }\n  }\n\n  return true;\n};\nexport var getDisplayName = function getDisplayName(Component) {\n  return Component.displayName || Component.name || 'UnknownComponent';\n};\nvar resolved = Promise.resolve();\nexport var defer = function defer(f) {\n  resolved.then(f);\n};\n\nvar isPlainObject = function isPlainObject(value) {\n  return _typeof(value) === 'object' && value !== null && !Array.isArray(value);\n};\n\nexport var removeEmptyKey = function removeEmptyKey(obj) {\n  Object.keys(obj).forEach(function (key) {\n    var value = obj[key];\n\n    if (!isPlainObject(value)) {\n      return;\n    }\n\n    if (!objectHasKeys(value)) {\n      delete obj[key];\n    } else {\n      removeEmptyKey(value);\n    }\n  });\n  return obj;\n};\nexport var removeEmptyArraysFromObject = function removeEmptyArraysFromObject(obj) {\n  Object.keys(obj).forEach(function (key) {\n    var value = obj[key];\n\n    if (Array.isArray(value) && value.length === 0) {\n      delete obj[key];\n    }\n  });\n  return obj;\n};\nexport function addAbsolutePositions(hits, hitsPerPage, page) {\n  return hits.map(function (hit, index) {\n    return _objectSpread({}, hit, {\n      __position: hitsPerPage * page + index + 1\n    });\n  });\n}\nexport function addQueryID(hits, queryID) {\n  if (!queryID) {\n    return hits;\n  }\n\n  return hits.map(function (hit) {\n    return _objectSpread({}, hit, {\n      __queryID: queryID\n    });\n  });\n}\nexport function find(array, comparator) {\n  if (!Array.isArray(array)) {\n    return undefined;\n  }\n\n  for (var i = 0; i < array.length; i++) {\n    if (comparator(array[i])) {\n      return array[i];\n    }\n  }\n\n  return undefined;\n}\nexport function objectHasKeys(object) {\n  return object && Object.keys(object).length > 0;\n} // https://github.com/babel/babel/blob/3aaafae053fa75febb3aa45d45b6f00646e30ba4/packages/babel-helpers/src/helpers.js#L604-L620\n\nexport function omit(source, excluded) {\n  if (source === null || source === undefined) {\n    return {};\n  }\n\n  var target = {};\n  var sourceKeys = Object.keys(source);\n\n  for (var i = 0; i < sourceKeys.length; i++) {\n    var _key = sourceKeys[i];\n\n    if (excluded.indexOf(_key) >= 0) {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    target[_key] = source[_key];\n  }\n\n  return target;\n}\n/**\n * Retrieve the value at a path of the object:\n *\n * @example\n * getPropertyByPath(\n *   { test: { this: { function: [{ now: { everyone: true } }] } } },\n *   'test.this.function[0].now.everyone'\n * ); // true\n *\n * getPropertyByPath(\n *   { test: { this: { function: [{ now: { everyone: true } }] } } },\n *   ['test', 'this', 'function', 0, 'now', 'everyone']\n * ); // true\n *\n * @param object Source object to query\n * @param path either an array of properties, or a string form of the properties, separated by .\n */\n\nexport var getPropertyByPath = function getPropertyByPath(object, path) {\n  return (Array.isArray(path) ? path : path.replace(/\\[(\\d+)]/g, '.$1').split('.')).reduce(function (current, key) {\n    return current ? current[key] : undefined;\n  }, object);\n};\nexport function getObjectType(object) {\n  return Object.prototype.toString.call(object).slice(8, -1);\n}","'use strict';\n\nfunction clone(value) {\n  if (typeof value === 'object' && value !== null) {\n    return _merge(Array.isArray(value) ? [] : {}, value);\n  }\n  return value;\n}\n\nfunction isObjectOrArrayOrFunction(value) {\n  return (\n    typeof value === 'function' ||\n    Array.isArray(value) ||\n    Object.prototype.toString.call(value) === '[object Object]'\n  );\n}\n\nfunction _merge(target, source) {\n  if (target === source) {\n    return target;\n  }\n\n  for (var key in source) {\n    if (!Object.prototype.hasOwnProperty.call(source, key)) {\n      continue;\n    }\n\n    var sourceVal = source[key];\n    var targetVal = target[key];\n\n    if (typeof targetVal !== 'undefined' && typeof sourceVal === 'undefined') {\n      continue;\n    }\n\n    if (isObjectOrArrayOrFunction(targetVal) && isObjectOrArrayOrFunction(sourceVal)) {\n      target[key] = _merge(targetVal, sourceVal);\n    } else {\n      target[key] = clone(sourceVal);\n    }\n  }\n  return target;\n}\n\n/**\n * This method is like Object.assign, but recursively merges own and inherited\n * enumerable keyed properties of source objects into the destination object.\n *\n * NOTE: this behaves like lodash/merge, but:\n * - does mutate functions if they are a source\n * - treats non-plain objects as plain\n * - does not work for circular objects\n * - treats sparse arrays as sparse\n * - does not convert Array-like objects (Arguments, NodeLists, etc.) to arrays\n *\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n */\n\nfunction merge(target) {\n  if (!isObjectOrArrayOrFunction(target)) {\n    target = {};\n  }\n\n  for (var i = 1, l = arguments.length; i < l; i++) {\n    var source = arguments[i];\n\n    if (isObjectOrArrayOrFunction(source)) {\n      _merge(target, source);\n    }\n  }\n  return target;\n}\n\nmodule.exports = merge;\n","'use strict';\n\n// @MAJOR can be replaced by native Array#find when we change support\nmodule.exports = function find(array, comparator) {\n  if (!Array.isArray(array)) {\n    return undefined;\n  }\n\n  for (var i = 0; i < array.length; i++) {\n    if (comparator(array[i])) {\n      return array[i];\n    }\n  }\n};\n","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport { omit } from './utils';\nexport function getIndexId(context) {\n  return hasMultipleIndices(context) ? context.multiIndexContext.targetedIndex : context.ais.mainTargetedIndex;\n}\nexport function getResults(searchResults, context) {\n  if (searchResults.results) {\n    if (searchResults.results.hits) {\n      return searchResults.results;\n    }\n\n    var indexId = getIndexId(context);\n\n    if (searchResults.results[indexId]) {\n      return searchResults.results[indexId];\n    }\n  }\n\n  return null;\n}\nexport function hasMultipleIndices(context) {\n  return context && context.multiIndexContext;\n} // eslint-disable-next-line max-params\n\nexport function refineValue(searchState, nextRefinement, context, resetPage, namespace) {\n  if (hasMultipleIndices(context)) {\n    var indexId = getIndexId(context);\n    return namespace ? refineMultiIndexWithNamespace(searchState, nextRefinement, indexId, resetPage, namespace) : refineMultiIndex(searchState, nextRefinement, indexId, resetPage);\n  } else {\n    // When we have a multi index page with shared widgets we should also\n    // reset their page to 1 if the resetPage is provided. Otherwise the\n    // indices will always be reset\n    // see: https://github.com/algolia/react-instantsearch/issues/310\n    // see: https://github.com/algolia/react-instantsearch/issues/637\n    if (searchState.indices && resetPage) {\n      Object.keys(searchState.indices).forEach(function (targetedIndex) {\n        searchState = refineValue(searchState, {\n          page: 1\n        }, {\n          multiIndexContext: {\n            targetedIndex: targetedIndex\n          }\n        }, true, namespace);\n      });\n    }\n\n    return namespace ? refineSingleIndexWithNamespace(searchState, nextRefinement, resetPage, namespace) : refineSingleIndex(searchState, nextRefinement, resetPage);\n  }\n}\n\nfunction refineMultiIndex(searchState, nextRefinement, indexId, resetPage) {\n  var page = resetPage ? {\n    page: 1\n  } : undefined;\n  var state = searchState.indices && searchState.indices[indexId] ? _objectSpread({}, searchState.indices, _defineProperty({}, indexId, _objectSpread({}, searchState.indices[indexId], nextRefinement, page))) : _objectSpread({}, searchState.indices, _defineProperty({}, indexId, _objectSpread({}, nextRefinement, page)));\n  return _objectSpread({}, searchState, {\n    indices: state\n  });\n}\n\nfunction refineSingleIndex(searchState, nextRefinement, resetPage) {\n  var page = resetPage ? {\n    page: 1\n  } : undefined;\n  return _objectSpread({}, searchState, nextRefinement, page);\n} // eslint-disable-next-line max-params\n\n\nfunction refineMultiIndexWithNamespace(searchState, nextRefinement, indexId, resetPage, namespace) {\n  var _objectSpread4;\n\n  var page = resetPage ? {\n    page: 1\n  } : undefined;\n  var state = searchState.indices && searchState.indices[indexId] ? _objectSpread({}, searchState.indices, _defineProperty({}, indexId, _objectSpread({}, searchState.indices[indexId], (_objectSpread4 = {}, _defineProperty(_objectSpread4, namespace, _objectSpread({}, searchState.indices[indexId][namespace], nextRefinement)), _defineProperty(_objectSpread4, \"page\", 1), _objectSpread4)))) : _objectSpread({}, searchState.indices, _defineProperty({}, indexId, _objectSpread(_defineProperty({}, namespace, nextRefinement), page)));\n  return _objectSpread({}, searchState, {\n    indices: state\n  });\n}\n\nfunction refineSingleIndexWithNamespace(searchState, nextRefinement, resetPage, namespace) {\n  var page = resetPage ? {\n    page: 1\n  } : undefined;\n  return _objectSpread({}, searchState, _defineProperty({}, namespace, _objectSpread({}, searchState[namespace], nextRefinement)), page);\n}\n\nfunction getNamespaceAndAttributeName(id) {\n  var parts = id.match(/^([^.]*)\\.(.*)/);\n  var namespace = parts && parts[1];\n  var attributeName = parts && parts[2];\n  return {\n    namespace: namespace,\n    attributeName: attributeName\n  };\n}\n\nfunction hasRefinements(_ref) {\n  var multiIndex = _ref.multiIndex,\n      indexId = _ref.indexId,\n      namespace = _ref.namespace,\n      attributeName = _ref.attributeName,\n      id = _ref.id,\n      searchState = _ref.searchState;\n\n  if (multiIndex && namespace) {\n    return searchState.indices && searchState.indices[indexId] && searchState.indices[indexId][namespace] && Object.hasOwnProperty.call(searchState.indices[indexId][namespace], attributeName);\n  }\n\n  if (multiIndex) {\n    return searchState.indices && searchState.indices[indexId] && Object.hasOwnProperty.call(searchState.indices[indexId], id);\n  }\n\n  if (namespace) {\n    return searchState[namespace] && Object.hasOwnProperty.call(searchState[namespace], attributeName);\n  }\n\n  return Object.hasOwnProperty.call(searchState, id);\n}\n\nfunction getRefinements(_ref2) {\n  var multiIndex = _ref2.multiIndex,\n      indexId = _ref2.indexId,\n      namespace = _ref2.namespace,\n      attributeName = _ref2.attributeName,\n      id = _ref2.id,\n      searchState = _ref2.searchState;\n\n  if (multiIndex && namespace) {\n    return searchState.indices[indexId][namespace][attributeName];\n  }\n\n  if (multiIndex) {\n    return searchState.indices[indexId][id];\n  }\n\n  if (namespace) {\n    return searchState[namespace][attributeName];\n  }\n\n  return searchState[id];\n}\n\nexport function getCurrentRefinementValue(props, searchState, context, id, defaultValue) {\n  var indexId = getIndexId(context);\n\n  var _getNamespaceAndAttri = getNamespaceAndAttributeName(id),\n      namespace = _getNamespaceAndAttri.namespace,\n      attributeName = _getNamespaceAndAttri.attributeName;\n\n  var multiIndex = hasMultipleIndices(context);\n  var args = {\n    multiIndex: multiIndex,\n    indexId: indexId,\n    namespace: namespace,\n    attributeName: attributeName,\n    id: id,\n    searchState: searchState\n  };\n  var hasRefinementsValue = hasRefinements(args);\n\n  if (hasRefinementsValue) {\n    return getRefinements(args);\n  }\n\n  if (props.defaultRefinement) {\n    return props.defaultRefinement;\n  }\n\n  return defaultValue;\n}\nexport function cleanUpValue(searchState, context, id) {\n  var indexId = getIndexId(context);\n\n  var _getNamespaceAndAttri2 = getNamespaceAndAttributeName(id),\n      namespace = _getNamespaceAndAttri2.namespace,\n      attributeName = _getNamespaceAndAttri2.attributeName;\n\n  if (hasMultipleIndices(context) && Boolean(searchState.indices)) {\n    return cleanUpValueWithMultiIndex({\n      attribute: attributeName,\n      searchState: searchState,\n      indexId: indexId,\n      id: id,\n      namespace: namespace\n    });\n  }\n\n  return cleanUpValueWithSingleIndex({\n    attribute: attributeName,\n    searchState: searchState,\n    id: id,\n    namespace: namespace\n  });\n}\n\nfunction cleanUpValueWithSingleIndex(_ref3) {\n  var searchState = _ref3.searchState,\n      id = _ref3.id,\n      namespace = _ref3.namespace,\n      attribute = _ref3.attribute;\n\n  if (namespace) {\n    return _objectSpread({}, searchState, _defineProperty({}, namespace, omit(searchState[namespace], [attribute])));\n  }\n\n  return omit(searchState, [id]);\n}\n\nfunction cleanUpValueWithMultiIndex(_ref4) {\n  var searchState = _ref4.searchState,\n      indexId = _ref4.indexId,\n      id = _ref4.id,\n      namespace = _ref4.namespace,\n      attribute = _ref4.attribute;\n  var indexSearchState = searchState.indices[indexId];\n\n  if (namespace && indexSearchState) {\n    return _objectSpread({}, searchState, {\n      indices: _objectSpread({}, searchState.indices, _defineProperty({}, indexId, _objectSpread({}, indexSearchState, _defineProperty({}, namespace, omit(indexSearchState[namespace], [attribute])))))\n    });\n  }\n\n  if (indexSearchState) {\n    return _objectSpread({}, searchState, {\n      indices: _objectSpread({}, searchState.indices, _defineProperty({}, indexId, omit(indexSearchState, [id])))\n    });\n  }\n\n  return searchState;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport isEqual from 'react-fast-compare';\nimport { shallowEqual, getDisplayName, removeEmptyKey } from './utils';\nimport { InstantSearchConsumer, IndexConsumer } from './context';\n\n/**\n * Connectors are the HOC used to transform React components\n * into InstantSearch widgets.\n * In order to simplify the construction of such connectors\n * `createConnector` takes a description and transform it into\n * a connector.\n * @param {ConnectorDescription} connectorDesc the description of the connector\n * @return {Connector} a function that wraps a component into\n * an instantsearch connected one.\n */\nexport function createConnectorWithoutContext(connectorDesc) {\n  if (!connectorDesc.displayName) {\n    throw new Error('`createConnector` requires you to provide a `displayName` property.');\n  }\n\n  var isWidget = typeof connectorDesc.getSearchParameters === 'function' || typeof connectorDesc.getMetadata === 'function' || typeof connectorDesc.transitionState === 'function';\n  return function (Composed) {\n    var Connector =\n    /*#__PURE__*/\n    function (_Component) {\n      _inherits(Connector, _Component);\n\n      function Connector(props) {\n        var _this;\n\n        _classCallCheck(this, Connector);\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(Connector).call(this, props));\n\n        _defineProperty(_assertThisInitialized(_this), \"unsubscribe\", void 0);\n\n        _defineProperty(_assertThisInitialized(_this), \"unregisterWidget\", void 0);\n\n        _defineProperty(_assertThisInitialized(_this), \"isUnmounting\", false);\n\n        _defineProperty(_assertThisInitialized(_this), \"state\", {\n          providedProps: _this.getProvidedProps(_this.props)\n        });\n\n        _defineProperty(_assertThisInitialized(_this), \"refine\", function () {\n          var _ref;\n\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          _this.props.contextValue.onInternalStateUpdate( // refine will always be defined here because the prop is only given conditionally\n          (_ref = connectorDesc.refine).call.apply(_ref, [_assertThisInitialized(_this), _this.props, _this.props.contextValue.store.getState().widgets].concat(args)));\n        });\n\n        _defineProperty(_assertThisInitialized(_this), \"createURL\", function () {\n          var _ref2;\n\n          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n          }\n\n          return _this.props.contextValue.createHrefForState( // refine will always be defined here because the prop is only given conditionally\n          (_ref2 = connectorDesc.refine).call.apply(_ref2, [_assertThisInitialized(_this), _this.props, _this.props.contextValue.store.getState().widgets].concat(args)));\n        });\n\n        _defineProperty(_assertThisInitialized(_this), \"searchForFacetValues\", function () {\n          var _ref3;\n\n          for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n            args[_key3] = arguments[_key3];\n          }\n\n          _this.props.contextValue.onSearchForFacetValues( // searchForFacetValues will always be defined here because the prop is only given conditionally\n          (_ref3 = connectorDesc.searchForFacetValues).call.apply(_ref3, [_assertThisInitialized(_this), _this.props, _this.props.contextValue.store.getState().widgets].concat(args)));\n        });\n\n        if (connectorDesc.getSearchParameters) {\n          _this.props.contextValue.onSearchParameters(connectorDesc.getSearchParameters.bind(_assertThisInitialized(_this)), {\n            ais: _this.props.contextValue,\n            multiIndexContext: _this.props.indexContextValue\n          }, _this.props, connectorDesc.getMetadata && connectorDesc.getMetadata.bind(_assertThisInitialized(_this)));\n        }\n\n        return _this;\n      }\n\n      _createClass(Connector, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          var _this2 = this;\n\n          this.unsubscribe = this.props.contextValue.store.subscribe(function () {\n            if (!_this2.isUnmounting) {\n              _this2.setState({\n                providedProps: _this2.getProvidedProps(_this2.props)\n              });\n            }\n          });\n\n          if (isWidget) {\n            this.unregisterWidget = this.props.contextValue.widgetsManager.registerWidget(this);\n          }\n        }\n      }, {\n        key: \"shouldComponentUpdate\",\n        value: function shouldComponentUpdate(nextProps, nextState) {\n          if (typeof connectorDesc.shouldComponentUpdate === 'function') {\n            return connectorDesc.shouldComponentUpdate.call(this, this.props, nextProps, this.state, nextState);\n          }\n\n          var propsEqual = shallowEqual(this.props, nextProps);\n\n          if (this.state.providedProps === null || nextState.providedProps === null) {\n            if (this.state.providedProps === nextState.providedProps) {\n              return !propsEqual;\n            }\n\n            return true;\n          }\n\n          return !propsEqual || !shallowEqual(this.state.providedProps, nextState.providedProps);\n        }\n      }, {\n        key: \"componentDidUpdate\",\n        value: function componentDidUpdate(prevProps) {\n          if (!isEqual(prevProps, this.props)) {\n            this.setState({\n              providedProps: this.getProvidedProps(this.props)\n            });\n\n            if (isWidget) {\n              this.props.contextValue.widgetsManager.update();\n\n              if (typeof connectorDesc.transitionState === 'function') {\n                this.props.contextValue.onSearchStateChange(connectorDesc.transitionState.call(this, this.props, this.props.contextValue.store.getState().widgets, this.props.contextValue.store.getState().widgets));\n              }\n            }\n          }\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          this.isUnmounting = true;\n\n          if (this.unsubscribe) {\n            this.unsubscribe();\n          }\n\n          if (this.unregisterWidget) {\n            this.unregisterWidget();\n\n            if (typeof connectorDesc.cleanUp === 'function') {\n              var nextState = connectorDesc.cleanUp.call(this, this.props, this.props.contextValue.store.getState().widgets);\n              this.props.contextValue.store.setState(_objectSpread({}, this.props.contextValue.store.getState(), {\n                widgets: nextState\n              }));\n              this.props.contextValue.onSearchStateChange(removeEmptyKey(nextState));\n            }\n          }\n        }\n      }, {\n        key: \"getProvidedProps\",\n        value: function getProvidedProps(props) {\n          var _this$props$contextVa = this.props.contextValue.store.getState(),\n              widgets = _this$props$contextVa.widgets,\n              results = _this$props$contextVa.results,\n              resultsFacetValues = _this$props$contextVa.resultsFacetValues,\n              searching = _this$props$contextVa.searching,\n              searchingForFacetValues = _this$props$contextVa.searchingForFacetValues,\n              isSearchStalled = _this$props$contextVa.isSearchStalled,\n              metadata = _this$props$contextVa.metadata,\n              error = _this$props$contextVa.error;\n\n          var searchResults = {\n            results: results,\n            searching: searching,\n            searchingForFacetValues: searchingForFacetValues,\n            isSearchStalled: isSearchStalled,\n            error: error\n          };\n          return connectorDesc.getProvidedProps.call(this, props, widgets, searchResults, metadata, // @MAJOR: move this attribute on the `searchResults` it doesn't\n          // makes sense to have it into a separate argument. The search\n          // flags are on the object why not the results?\n          resultsFacetValues);\n        }\n      }, {\n        key: \"getSearchParameters\",\n        value: function getSearchParameters(searchParameters) {\n          if (typeof connectorDesc.getSearchParameters === 'function') {\n            return connectorDesc.getSearchParameters.call(this, searchParameters, this.props, this.props.contextValue.store.getState().widgets);\n          }\n\n          return null;\n        }\n      }, {\n        key: \"getMetadata\",\n        value: function getMetadata(nextWidgetsState) {\n          if (typeof connectorDesc.getMetadata === 'function') {\n            return connectorDesc.getMetadata.call(this, this.props, nextWidgetsState);\n          }\n\n          return {};\n        }\n      }, {\n        key: \"transitionState\",\n        value: function transitionState(prevWidgetsState, nextWidgetsState) {\n          if (typeof connectorDesc.transitionState === 'function') {\n            return connectorDesc.transitionState.call(this, this.props, prevWidgetsState, nextWidgetsState);\n          }\n\n          return nextWidgetsState;\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          var _this$props = this.props,\n              contextValue = _this$props.contextValue,\n              props = _objectWithoutProperties(_this$props, [\"contextValue\"]);\n\n          var providedProps = this.state.providedProps;\n\n          if (providedProps === null) {\n            return null;\n          }\n\n          var refineProps = typeof connectorDesc.refine === 'function' ? {\n            refine: this.refine,\n            createURL: this.createURL\n          } : {};\n          var searchForFacetValuesProps = typeof connectorDesc.searchForFacetValues === 'function' ? {\n            searchForItems: this.searchForFacetValues\n          } : {};\n          return React.createElement(Composed, _extends({}, props, providedProps, refineProps, searchForFacetValuesProps));\n        }\n      }]);\n\n      return Connector;\n    }(Component);\n\n    _defineProperty(Connector, \"displayName\", \"\".concat(connectorDesc.displayName, \"(\").concat(getDisplayName(Composed), \")\"));\n\n    _defineProperty(Connector, \"propTypes\", connectorDesc.propTypes);\n\n    _defineProperty(Connector, \"defaultProps\", connectorDesc.defaultProps);\n\n    return Connector;\n  };\n}\n\nvar createConnectorWithContext = function createConnectorWithContext(connectorDesc) {\n  return function (Composed) {\n    var Connector = createConnectorWithoutContext(connectorDesc)(Composed);\n\n    var ConnectorWrapper = function ConnectorWrapper(props) {\n      return React.createElement(InstantSearchConsumer, null, function (contextValue) {\n        return React.createElement(IndexConsumer, null, function (indexContextValue) {\n          return React.createElement(Connector, _extends({\n            contextValue: contextValue,\n            indexContextValue: indexContextValue\n          }, props));\n        });\n      });\n    };\n\n    return ConnectorWrapper;\n  };\n};\n\nexport default createConnectorWithContext;","'use strict';\n\n// NOTE: this behaves like lodash/defaults, but doesn't mutate the target\n// it also preserve keys order\nmodule.exports = function defaultsPure() {\n  var sources = Array.prototype.slice.call(arguments);\n\n  return sources.reduceRight(function(acc, source) {\n    Object.keys(Object(source)).forEach(function(key) {\n      if (source[key] === undefined) {\n        return;\n      }\n      if (acc[key] !== undefined) {\n        // remove if already added, so that we can add it in correct order\n        delete acc[key];\n      }\n      acc[key] = source[key];\n    });\n    return acc;\n  }, {});\n};\n","'use strict';\n\n// https://github.com/babel/babel/blob/3aaafae053fa75febb3aa45d45b6f00646e30ba4/packages/babel-helpers/src/helpers.js#L604-L620\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source === null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key;\n  var i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;\n","'use strict';\n\nfunction objectHasKeys(obj) {\n  return obj && Object.keys(obj).length > 0;\n}\n\nmodule.exports = objectHasKeys;\n","/* global Map:readonly, Set:readonly, ArrayBuffer:readonly */\n\nvar hasElementType = typeof Element !== 'undefined';\nvar hasMap = typeof Map === 'function';\nvar hasSet = typeof Set === 'function';\nvar hasArrayBuffer = typeof ArrayBuffer === 'function' && !!ArrayBuffer.isView;\n\n// Note: We **don't** need `envHasBigInt64Array` in fde es6/index.js\n\nfunction equal(a, b) {\n  // START: fast-deep-equal es6/index.js 3.1.1\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n    // START: Modifications:\n    // 1. Extra `has<Type> &&` helpers in initial condition allow es6 code\n    //    to co-exist with es5.\n    // 2. Replace `for of` with es5 compliant iteration using `for`.\n    //    Basically, take:\n    //\n    //    ```js\n    //    for (i of a.entries())\n    //      if (!b.has(i[0])) return false;\n    //    ```\n    //\n    //    ... and convert to:\n    //\n    //    ```js\n    //    it = a.entries();\n    //    while (!(i = it.next()).done)\n    //      if (!b.has(i.value[0])) return false;\n    //    ```\n    //\n    //    **Note**: `i` access switches to `i.value`.\n    var it;\n    if (hasMap && (a instanceof Map) && (b instanceof Map)) {\n      if (a.size !== b.size) return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!b.has(i.value[0])) return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!equal(i.value[1], b.get(i.value[0]))) return false;\n      return true;\n    }\n\n    if (hasSet && (a instanceof Set) && (b instanceof Set)) {\n      if (a.size !== b.size) return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!b.has(i.value[0])) return false;\n      return true;\n    }\n    // END: Modifications\n\n    if (hasArrayBuffer && ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (a[i] !== b[i]) return false;\n      return true;\n    }\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n    // END: fast-deep-equal\n\n    // START: react-fast-compare\n    // custom handling for DOM elements\n    if (hasElementType && a instanceof Element) return false;\n\n    // custom handling for React/Preact\n    for (i = length; i-- !== 0;) {\n      if ((keys[i] === '_owner' || keys[i] === '__v' || keys[i] === '__o') && a.$$typeof) {\n        // React-specific: avoid traversing React elements' _owner\n        // Preact-specific: avoid traversing Preact elements' __v and __o\n        //    __v = $_original / $_vnode\n        //    __o = $_owner\n        // These properties contain circular references and are not needed when\n        // comparing the actual elements (and not their owners)\n        // .$$typeof and ._store on just reasonable markers of elements\n\n        continue;\n      }\n\n      // all other properties should be traversed as usual\n      if (!equal(a[keys[i]], b[keys[i]])) return false;\n    }\n    // END: react-fast-compare\n\n    // START: fast-deep-equal\n    return true;\n  }\n\n  return a !== a && b !== b;\n}\n// end fast-deep-equal\n\nmodule.exports = function isEqual(a, b) {\n  try {\n    return equal(a, b);\n  } catch (error) {\n    if (((error.message || '').match(/stack|recursion/i))) {\n      // warn on circular references, don't crash\n      // browsers give this different errors name and messages:\n      // chrome/safari: \"RangeError\", \"Maximum call stack size exceeded\"\n      // firefox: \"InternalError\", too much recursion\"\n      // edge: \"Error\", \"Out of stack space\"\n      console.warn('react-fast-compare cannot handle circular refs');\n      return false;\n    }\n    // some other error. we should definitely know about these\n    throw error;\n  }\n};\n","import { createContext } from 'react';\nexport var instantSearchContext = createContext({\n  onInternalStateUpdate: function onInternalStateUpdate() {\n    return undefined;\n  },\n  createHrefForState: function createHrefForState() {\n    return '#';\n  },\n  onSearchForFacetValues: function onSearchForFacetValues() {\n    return undefined;\n  },\n  onSearchStateChange: function onSearchStateChange() {\n    return undefined;\n  },\n  onSearchParameters: function onSearchParameters() {\n    return undefined;\n  },\n  store: {},\n  widgetsManager: {},\n  mainTargetedIndex: ''\n});\nvar InstantSearchConsumer = instantSearchContext.Consumer,\n    InstantSearchProvider = instantSearchContext.Provider;\nexport { InstantSearchConsumer, InstantSearchProvider };\n\nvar _createContext = createContext(undefined),\n    IndexConsumer = _createContext.Consumer,\n    IndexProvider = _createContext.Provider;\n\nexport { IndexConsumer, IndexProvider };","/*! algoliasearch-lite.umd.js | 4.8.6 | © Algolia, inc. | https://github.com/algolia/algoliasearch-client-javascript */\n!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=e||self).algoliasearch=t()}(this,(function(){\"use strict\";function e(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function t(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function r(r){for(var n=1;n<arguments.length;n++){var o=null!=arguments[n]?arguments[n]:{};n%2?t(Object(o),!0).forEach((function(t){e(r,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(r,Object.getOwnPropertyDescriptors(o)):t(Object(o)).forEach((function(e){Object.defineProperty(r,e,Object.getOwnPropertyDescriptor(o,e))}))}return r}function n(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}function o(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if(!(Symbol.iterator in Object(e)||\"[object Arguments]\"===Object.prototype.toString.call(e)))return;var r=[],n=!0,o=!1,a=void 0;try{for(var u,i=e[Symbol.iterator]();!(n=(u=i.next()).done)&&(r.push(u.value),!t||r.length!==t);n=!0);}catch(e){o=!0,a=e}finally{try{n||null==i.return||i.return()}finally{if(o)throw a}}return r}(e,t)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}()}function a(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||\"[object Arguments]\"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance\")}()}function u(e){var t,r=\"algoliasearch-client-js-\".concat(e.key),n=function(){return void 0===t&&(t=e.localStorage||window.localStorage),t},a=function(){return JSON.parse(n().getItem(r)||\"{}\")};return{get:function(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{miss:function(){return Promise.resolve()}};return Promise.resolve().then((function(){var r=JSON.stringify(e),n=a()[r];return Promise.all([n||t(),void 0!==n])})).then((function(e){var t=o(e,2),n=t[0],a=t[1];return Promise.all([n,a||r.miss(n)])})).then((function(e){return o(e,1)[0]}))},set:function(e,t){return Promise.resolve().then((function(){var o=a();return o[JSON.stringify(e)]=t,n().setItem(r,JSON.stringify(o)),t}))},delete:function(e){return Promise.resolve().then((function(){var t=a();delete t[JSON.stringify(e)],n().setItem(r,JSON.stringify(t))}))},clear:function(){return Promise.resolve().then((function(){n().removeItem(r)}))}}}function i(e){var t=a(e.caches),r=t.shift();return void 0===r?{get:function(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{miss:function(){return Promise.resolve()}},n=t();return n.then((function(e){return Promise.all([e,r.miss(e)])})).then((function(e){return o(e,1)[0]}))},set:function(e,t){return Promise.resolve(t)},delete:function(e){return Promise.resolve()},clear:function(){return Promise.resolve()}}:{get:function(e,n){var o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{miss:function(){return Promise.resolve()}};return r.get(e,n,o).catch((function(){return i({caches:t}).get(e,n,o)}))},set:function(e,n){return r.set(e,n).catch((function(){return i({caches:t}).set(e,n)}))},delete:function(e){return r.delete(e).catch((function(){return i({caches:t}).delete(e)}))},clear:function(){return r.clear().catch((function(){return i({caches:t}).clear()}))}}}function s(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{serializable:!0},t={};return{get:function(r,n){var o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{miss:function(){return Promise.resolve()}},a=JSON.stringify(r);if(a in t)return Promise.resolve(e.serializable?JSON.parse(t[a]):t[a]);var u=n(),i=o&&o.miss||function(){return Promise.resolve()};return u.then((function(e){return i(e)})).then((function(){return u}))},set:function(r,n){return t[JSON.stringify(r)]=e.serializable?JSON.stringify(n):n,Promise.resolve(n)},delete:function(e){return delete t[JSON.stringify(e)],Promise.resolve()},clear:function(){return t={},Promise.resolve()}}}function c(e){for(var t=e.length-1;t>0;t--){var r=Math.floor(Math.random()*(t+1)),n=e[t];e[t]=e[r],e[r]=n}return e}function l(e,t){return t?(Object.keys(t).forEach((function(r){e[r]=t[r](e)})),e):e}function f(e){for(var t=arguments.length,r=new Array(t>1?t-1:0),n=1;n<t;n++)r[n-1]=arguments[n];var o=0;return e.replace(/%s/g,(function(){return encodeURIComponent(r[o++])}))}var h={WithinQueryParameters:0,WithinHeaders:1};function d(e,t){var r=e||{},n=r.data||{};return Object.keys(r).forEach((function(e){-1===[\"timeout\",\"headers\",\"queryParameters\",\"data\",\"cacheable\"].indexOf(e)&&(n[e]=r[e])})),{data:Object.entries(n).length>0?n:void 0,timeout:r.timeout||t,headers:r.headers||{},queryParameters:r.queryParameters||{},cacheable:r.cacheable}}var m={Read:1,Write:2,Any:3},p=1,v=2,y=3;function g(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:p;return r(r({},e),{},{status:t,lastUpdate:Date.now()})}function b(e){return\"string\"==typeof e?{protocol:\"https\",url:e,accept:m.Any}:{protocol:e.protocol||\"https\",url:e.url,accept:e.accept||m.Any}}var O=\"GET\",P=\"POST\";function q(e,t){return Promise.all(t.map((function(t){return e.get(t,(function(){return Promise.resolve(g(t))}))}))).then((function(e){var r=e.filter((function(e){return function(e){return e.status===p||Date.now()-e.lastUpdate>12e4}(e)})),n=e.filter((function(e){return function(e){return e.status===y&&Date.now()-e.lastUpdate<=12e4}(e)})),o=[].concat(a(r),a(n));return{getTimeout:function(e,t){return(0===n.length&&0===e?1:n.length+3+e)*t},statelessHosts:o.length>0?o.map((function(e){return b(e)})):t}}))}function j(e,t,n,o){var u=[],i=function(e,t){if(e.method===O||void 0===e.data&&void 0===t.data)return;var n=Array.isArray(e.data)?e.data:r(r({},e.data),t.data);return JSON.stringify(n)}(n,o),s=function(e,t){var n=r(r({},e.headers),t.headers),o={};return Object.keys(n).forEach((function(e){var t=n[e];o[e.toLowerCase()]=t})),o}(e,o),c=n.method,l=n.method!==O?{}:r(r({},n.data),o.data),f=r(r(r({\"x-algolia-agent\":e.userAgent.value},e.queryParameters),l),o.queryParameters),h=0,d=function t(r,a){var l=r.pop();if(void 0===l)throw{name:\"RetryError\",message:\"Unreachable hosts - your application id may be incorrect. If the error persists, contact support@algolia.com.\",transporterStackTrace:A(u)};var d={data:i,headers:s,method:c,url:S(l,n.path,f),connectTimeout:a(h,e.timeouts.connect),responseTimeout:a(h,o.timeout)},m=function(e){var t={request:d,response:e,host:l,triesLeft:r.length};return u.push(t),t},p={onSuccess:function(e){return function(e){try{return JSON.parse(e.content)}catch(t){throw function(e,t){return{name:\"DeserializationError\",message:e,response:t}}(t.message,e)}}(e)},onRetry:function(n){var o=m(n);return n.isTimedOut&&h++,Promise.all([e.logger.info(\"Retryable failure\",x(o)),e.hostsCache.set(l,g(l,n.isTimedOut?y:v))]).then((function(){return t(r,a)}))},onFail:function(e){throw m(e),function(e,t){var r=e.content,n=e.status,o=r;try{o=JSON.parse(r).message}catch(e){}return function(e,t,r){return{name:\"ApiError\",message:e,status:t,transporterStackTrace:r}}(o,n,t)}(e,A(u))}};return e.requester.send(d).then((function(e){return function(e,t){return function(e){var t=e.status;return e.isTimedOut||function(e){var t=e.isTimedOut,r=e.status;return!t&&0==~~r}(e)||2!=~~(t/100)&&4!=~~(t/100)}(e)?t.onRetry(e):2==~~(e.status/100)?t.onSuccess(e):t.onFail(e)}(e,p)}))};return q(e.hostsCache,t).then((function(e){return d(a(e.statelessHosts).reverse(),e.getTimeout)}))}function w(e){var t={value:\"Algolia for JavaScript (\".concat(e,\")\"),add:function(e){var r=\"; \".concat(e.segment).concat(void 0!==e.version?\" (\".concat(e.version,\")\"):\"\");return-1===t.value.indexOf(r)&&(t.value=\"\".concat(t.value).concat(r)),t}};return t}function S(e,t,r){var n=T(r),o=\"\".concat(e.protocol,\"://\").concat(e.url,\"/\").concat(\"/\"===t.charAt(0)?t.substr(1):t);return n.length&&(o+=\"?\".concat(n)),o}function T(e){return Object.keys(e).map((function(t){return f(\"%s=%s\",t,(r=e[t],\"[object Object]\"===Object.prototype.toString.call(r)||\"[object Array]\"===Object.prototype.toString.call(r)?JSON.stringify(e[t]):e[t]));var r})).join(\"&\")}function A(e){return e.map((function(e){return x(e)}))}function x(e){var t=e.request.headers[\"x-algolia-api-key\"]?{\"x-algolia-api-key\":\"*****\"}:{};return r(r({},e),{},{request:r(r({},e.request),{},{headers:r(r({},e.request.headers),t)})})}var N=function(e){var t=e.appId,n=function(e,t,r){var n={\"x-algolia-api-key\":r,\"x-algolia-application-id\":t};return{headers:function(){return e===h.WithinHeaders?n:{}},queryParameters:function(){return e===h.WithinQueryParameters?n:{}}}}(void 0!==e.authMode?e.authMode:h.WithinHeaders,t,e.apiKey),a=function(e){var t=e.hostsCache,r=e.logger,n=e.requester,a=e.requestsCache,u=e.responsesCache,i=e.timeouts,s=e.userAgent,c=e.hosts,l=e.queryParameters,f={hostsCache:t,logger:r,requester:n,requestsCache:a,responsesCache:u,timeouts:i,userAgent:s,headers:e.headers,queryParameters:l,hosts:c.map((function(e){return b(e)})),read:function(e,t){var r=d(t,f.timeouts.read),n=function(){return j(f,f.hosts.filter((function(e){return 0!=(e.accept&m.Read)})),e,r)};if(!0!==(void 0!==r.cacheable?r.cacheable:e.cacheable))return n();var a={request:e,mappedRequestOptions:r,transporter:{queryParameters:f.queryParameters,headers:f.headers}};return f.responsesCache.get(a,(function(){return f.requestsCache.get(a,(function(){return f.requestsCache.set(a,n()).then((function(e){return Promise.all([f.requestsCache.delete(a),e])}),(function(e){return Promise.all([f.requestsCache.delete(a),Promise.reject(e)])})).then((function(e){var t=o(e,2);t[0];return t[1]}))}))}),{miss:function(e){return f.responsesCache.set(a,e)}})},write:function(e,t){return j(f,f.hosts.filter((function(e){return 0!=(e.accept&m.Write)})),e,d(t,f.timeouts.write))}};return f}(r(r({hosts:[{url:\"\".concat(t,\"-dsn.algolia.net\"),accept:m.Read},{url:\"\".concat(t,\".algolia.net\"),accept:m.Write}].concat(c([{url:\"\".concat(t,\"-1.algolianet.com\")},{url:\"\".concat(t,\"-2.algolianet.com\")},{url:\"\".concat(t,\"-3.algolianet.com\")}]))},e),{},{headers:r(r(r({},n.headers()),{\"content-type\":\"application/x-www-form-urlencoded\"}),e.headers),queryParameters:r(r({},n.queryParameters()),e.queryParameters)}));return l({transporter:a,appId:t,addAlgoliaAgent:function(e,t){a.userAgent.add({segment:e,version:t})},clearCache:function(){return Promise.all([a.requestsCache.clear(),a.responsesCache.clear()]).then((function(){}))}},e.methods)},C=function(e){return function(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n={transporter:e.transporter,appId:e.appId,indexName:t};return l(n,r.methods)}},k=function(e){return function(t,n){var o=t.map((function(e){return r(r({},e),{},{params:T(e.params||{})})}));return e.transporter.read({method:P,path:\"1/indexes/*/queries\",data:{requests:o},cacheable:!0},n)}},J=function(e){return function(t,o){return Promise.all(t.map((function(t){var a=t.params,u=a.facetName,i=a.facetQuery,s=n(a,[\"facetName\",\"facetQuery\"]);return C(e)(t.indexName,{methods:{searchForFacetValues:F}}).searchForFacetValues(u,i,r(r({},o),s))})))}},E=function(e){return function(t,r,n){return e.transporter.read({method:P,path:f(\"1/answers/%s/prediction\",e.indexName),data:{query:t,queryLanguages:r},cacheable:!0},n)}},I=function(e){return function(t,r){return e.transporter.read({method:P,path:f(\"1/indexes/%s/query\",e.indexName),data:{query:t},cacheable:!0},r)}},F=function(e){return function(t,r,n){return e.transporter.read({method:P,path:f(\"1/indexes/%s/facets/%s/query\",e.indexName,t),data:{facetQuery:r},cacheable:!0},n)}},R=1,D=2,W=3;function H(e,t,n){var o,a={appId:e,apiKey:t,timeouts:{connect:1,read:2,write:30},requester:{send:function(e){return new Promise((function(t){var r=new XMLHttpRequest;r.open(e.method,e.url,!0),Object.keys(e.headers).forEach((function(t){return r.setRequestHeader(t,e.headers[t])}));var n,o=function(e,n){return setTimeout((function(){r.abort(),t({status:0,content:n,isTimedOut:!0})}),1e3*e)},a=o(e.connectTimeout,\"Connection timeout\");r.onreadystatechange=function(){r.readyState>r.OPENED&&void 0===n&&(clearTimeout(a),n=o(e.responseTimeout,\"Socket timeout\"))},r.onerror=function(){0===r.status&&(clearTimeout(a),clearTimeout(n),t({content:r.responseText||\"Network request failed\",status:r.status,isTimedOut:!1}))},r.onload=function(){clearTimeout(a),clearTimeout(n),t({content:r.responseText,status:r.status,isTimedOut:!1})},r.send(e.data)}))}},logger:(o=W,{debug:function(e,t){return R>=o&&console.debug(e,t),Promise.resolve()},info:function(e,t){return D>=o&&console.info(e,t),Promise.resolve()},error:function(e,t){return console.error(e,t),Promise.resolve()}}),responsesCache:s(),requestsCache:s({serializable:!1}),hostsCache:i({caches:[u({key:\"\".concat(\"4.8.6\",\"-\").concat(e)}),s()]}),userAgent:w(\"4.8.6\").add({segment:\"Browser\",version:\"lite\"}),authMode:h.WithinQueryParameters};return N(r(r(r({},a),n),{},{methods:{search:k,searchForFacetValues:J,multipleQueries:k,multipleSearchForFacetValues:J,initIndex:function(e){return function(t){return C(e)(t,{methods:{search:I,searchForFacetValues:F,findAnswers:E}})}}}}))}return H.version=\"4.8.6\",H}));\n","'use strict';\n\nvar merge = require('../functions/merge');\nvar defaultsPure = require('../functions/defaultsPure');\nvar intersection = require('../functions/intersection');\nvar find = require('../functions/find');\nvar valToNumber = require('../functions/valToNumber');\nvar omit = require('../functions/omit');\nvar objectHasKeys = require('../functions/objectHasKeys');\nvar isValidUserToken = require('../utils/isValidUserToken');\n\nvar RefinementList = require('./RefinementList');\n\n/**\n * isEqual, but only for numeric refinement values, possible values:\n * - 5\n * - [5]\n * - [[5]]\n * - [[5,5],[4]]\n */\nfunction isEqualNumericRefinement(a, b) {\n  if (Array.isArray(a) && Array.isArray(b)) {\n    return (\n      a.length === b.length &&\n      a.every(function(el, i) {\n        return isEqualNumericRefinement(b[i], el);\n      })\n    );\n  }\n  return a === b;\n}\n\n/**\n * like _.find but using deep equality to be able to use it\n * to find arrays.\n * @private\n * @param {any[]} array array to search into (elements are base or array of base)\n * @param {any} searchedValue the value we're looking for (base or array of base)\n * @return {any} the searched value or undefined\n */\nfunction findArray(array, searchedValue) {\n  return find(array, function(currentValue) {\n    return isEqualNumericRefinement(currentValue, searchedValue);\n  });\n}\n\n/**\n * The facet list is the structure used to store the list of values used to\n * filter a single attribute.\n * @typedef {string[]} SearchParameters.FacetList\n */\n\n/**\n * Structure to store numeric filters with the operator as the key. The supported operators\n * are `=`, `>`, `<`, `>=`, `<=` and `!=`.\n * @typedef {Object.<string, Array.<number|number[]>>} SearchParameters.OperatorList\n */\n\n/**\n * SearchParameters is the data structure that contains all the information\n * usable for making a search to Algolia API. It doesn't do the search itself,\n * nor does it contains logic about the parameters.\n * It is an immutable object, therefore it has been created in a way that each\n * changes does not change the object itself but returns a copy with the\n * modification.\n * This object should probably not be instantiated outside of the helper. It will\n * be provided when needed. This object is documented for reference as you'll\n * get it from events generated by the {@link AlgoliaSearchHelper}.\n * If need be, instantiate the Helper from the factory function {@link SearchParameters.make}\n * @constructor\n * @classdesc contains all the parameters of a search\n * @param {object|SearchParameters} newParameters existing parameters or partial object\n * for the properties of a new SearchParameters\n * @see SearchParameters.make\n * @example <caption>SearchParameters of the first query in\n *   <a href=\"http://demos.algolia.com/instant-search-demo/\">the instant search demo</a></caption>\n{\n   \"query\": \"\",\n   \"disjunctiveFacets\": [\n      \"customerReviewCount\",\n      \"category\",\n      \"salePrice_range\",\n      \"manufacturer\"\n  ],\n   \"maxValuesPerFacet\": 30,\n   \"page\": 0,\n   \"hitsPerPage\": 10,\n   \"facets\": [\n      \"type\",\n      \"shipping\"\n  ]\n}\n */\nfunction SearchParameters(newParameters) {\n  var params = newParameters ? SearchParameters._parseNumbers(newParameters) : {};\n\n  if (params.userToken !== undefined && !isValidUserToken(params.userToken)) {\n    console.warn('[algoliasearch-helper] The `userToken` parameter is invalid. This can lead to wrong analytics.\\n  - Format: [a-zA-Z0-9_-]{1,64}');\n  }\n  /**\n   * This attribute contains the list of all the conjunctive facets\n   * used. This list will be added to requested facets in the\n   * [facets attribute](https://www.algolia.com/doc/rest-api/search#param-facets) sent to algolia.\n   * @member {string[]}\n   */\n  this.facets = params.facets || [];\n  /**\n   * This attribute contains the list of all the disjunctive facets\n   * used. This list will be added to requested facets in the\n   * [facets attribute](https://www.algolia.com/doc/rest-api/search#param-facets) sent to algolia.\n   * @member {string[]}\n   */\n  this.disjunctiveFacets = params.disjunctiveFacets || [];\n  /**\n   * This attribute contains the list of all the hierarchical facets\n   * used. This list will be added to requested facets in the\n   * [facets attribute](https://www.algolia.com/doc/rest-api/search#param-facets) sent to algolia.\n   * Hierarchical facets are a sub type of disjunctive facets that\n   * let you filter faceted attributes hierarchically.\n   * @member {string[]|object[]}\n   */\n  this.hierarchicalFacets = params.hierarchicalFacets || [];\n\n  // Refinements\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the conjunctive facets. Each facet must be properly\n   * defined in the `facets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters selected for the associated facet name.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n  this.facetsRefinements = params.facetsRefinements || {};\n  /**\n   * This attribute contains all the filters that need to be\n   * excluded from the conjunctive facets. Each facet must be properly\n   * defined in the `facets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters excluded for the associated facet name.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n  this.facetsExcludes = params.facetsExcludes || {};\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the disjunctive facets. Each facet must be properly\n   * defined in the `disjunctiveFacets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters selected for the associated facet name.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n  this.disjunctiveFacetsRefinements = params.disjunctiveFacetsRefinements || {};\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the numeric attributes.\n   *\n   * The key is the name of the attribute, and the value is the\n   * filters to apply to this attribute.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `numericFilters` attribute.\n   * @member {Object.<string, SearchParameters.OperatorList>}\n   */\n  this.numericRefinements = params.numericRefinements || {};\n  /**\n   * This attribute contains all the tags used to refine the query.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `tagFilters` attribute.\n   * @member {string[]}\n   */\n  this.tagRefinements = params.tagRefinements || [];\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the hierarchical facets. Each facet must be properly\n   * defined in the `hierarchicalFacets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters selected for the associated facet name. The FacetList values\n   * are structured as a string that contain the values for each level\n   * separated by the configured separator.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n  this.hierarchicalFacetsRefinements = params.hierarchicalFacetsRefinements || {};\n\n  var self = this;\n  Object.keys(params).forEach(function(paramName) {\n    var isKeyKnown = SearchParameters.PARAMETERS.indexOf(paramName) !== -1;\n    var isValueDefined = params[paramName] !== undefined;\n\n    if (!isKeyKnown && isValueDefined) {\n      self[paramName] = params[paramName];\n    }\n  });\n}\n\n/**\n * List all the properties in SearchParameters and therefore all the known Algolia properties\n * This doesn't contain any beta/hidden features.\n * @private\n */\nSearchParameters.PARAMETERS = Object.keys(new SearchParameters());\n\n/**\n * @private\n * @param {object} partialState full or part of a state\n * @return {object} a new object with the number keys as number\n */\nSearchParameters._parseNumbers = function(partialState) {\n  // Do not reparse numbers in SearchParameters, they ought to be parsed already\n  if (partialState instanceof SearchParameters) return partialState;\n\n  var numbers = {};\n\n  var numberKeys = [\n    'aroundPrecision',\n    'aroundRadius',\n    'getRankingInfo',\n    'minWordSizefor2Typos',\n    'minWordSizefor1Typo',\n    'page',\n    'maxValuesPerFacet',\n    'distinct',\n    'minimumAroundRadius',\n    'hitsPerPage',\n    'minProximity'\n  ];\n\n  numberKeys.forEach(function(k) {\n    var value = partialState[k];\n    if (typeof value === 'string') {\n      var parsedValue = parseFloat(value);\n      // global isNaN is ok to use here, value is only number or NaN\n      numbers[k] = isNaN(parsedValue) ? value : parsedValue;\n    }\n  });\n\n  // there's two formats of insideBoundingBox, we need to parse\n  // the one which is an array of float geo rectangles\n  if (Array.isArray(partialState.insideBoundingBox)) {\n    numbers.insideBoundingBox = partialState.insideBoundingBox.map(function(geoRect) {\n      if (Array.isArray(geoRect)) {\n        return geoRect.map(function(value) {\n          return parseFloat(value);\n        });\n      }\n      return geoRect;\n    });\n  }\n\n  if (partialState.numericRefinements) {\n    var numericRefinements = {};\n    Object.keys(partialState.numericRefinements).forEach(function(attribute) {\n      var operators = partialState.numericRefinements[attribute] || {};\n      numericRefinements[attribute] = {};\n      Object.keys(operators).forEach(function(operator) {\n        var values = operators[operator];\n        var parsedValues = values.map(function(v) {\n          if (Array.isArray(v)) {\n            return v.map(function(vPrime) {\n              if (typeof vPrime === 'string') {\n                return parseFloat(vPrime);\n              }\n              return vPrime;\n            });\n          } else if (typeof v === 'string') {\n            return parseFloat(v);\n          }\n          return v;\n        });\n        numericRefinements[attribute][operator] = parsedValues;\n      });\n    });\n    numbers.numericRefinements = numericRefinements;\n  }\n\n  return merge({}, partialState, numbers);\n};\n\n/**\n * Factory for SearchParameters\n * @param {object|SearchParameters} newParameters existing parameters or partial\n * object for the properties of a new SearchParameters\n * @return {SearchParameters} frozen instance of SearchParameters\n */\nSearchParameters.make = function makeSearchParameters(newParameters) {\n  var instance = new SearchParameters(newParameters);\n\n  var hierarchicalFacets = newParameters.hierarchicalFacets || [];\n  hierarchicalFacets.forEach(function(facet) {\n    if (facet.rootPath) {\n      var currentRefinement = instance.getHierarchicalRefinement(facet.name);\n\n      if (currentRefinement.length > 0 && currentRefinement[0].indexOf(facet.rootPath) !== 0) {\n        instance = instance.clearRefinements(facet.name);\n      }\n\n      // get it again in case it has been cleared\n      currentRefinement = instance.getHierarchicalRefinement(facet.name);\n      if (currentRefinement.length === 0) {\n        instance = instance.toggleHierarchicalFacetRefinement(facet.name, facet.rootPath);\n      }\n    }\n  });\n\n  return instance;\n};\n\n/**\n * Validates the new parameters based on the previous state\n * @param {SearchParameters} currentState the current state\n * @param {object|SearchParameters} parameters the new parameters to set\n * @return {Error|null} Error if the modification is invalid, null otherwise\n */\nSearchParameters.validate = function(currentState, parameters) {\n  var params = parameters || {};\n\n  if (currentState.tagFilters && params.tagRefinements && params.tagRefinements.length > 0) {\n    return new Error(\n      '[Tags] Cannot switch from the managed tag API to the advanced API. It is probably ' +\n      'an error, if it is really what you want, you should first clear the tags with clearTags method.');\n  }\n\n  if (currentState.tagRefinements.length > 0 && params.tagFilters) {\n    return new Error(\n      '[Tags] Cannot switch from the advanced tag API to the managed API. It is probably ' +\n      'an error, if it is not, you should first clear the tags with clearTags method.');\n  }\n\n  if (\n    currentState.numericFilters &&\n    params.numericRefinements &&\n    objectHasKeys(params.numericRefinements)\n  ) {\n    return new Error(\n      \"[Numeric filters] Can't switch from the advanced to the managed API. It\" +\n        ' is probably an error, if this is really what you want, you have to first' +\n        ' clear the numeric filters.'\n    );\n  }\n\n  if (objectHasKeys(currentState.numericRefinements) && params.numericFilters) {\n    return new Error(\n      \"[Numeric filters] Can't switch from the managed API to the advanced. It\" +\n      ' is probably an error, if this is really what you want, you have to first' +\n      ' clear the numeric filters.');\n  }\n\n  return null;\n};\n\nSearchParameters.prototype = {\n  constructor: SearchParameters,\n\n  /**\n   * Remove all refinements (disjunctive + conjunctive + excludes + numeric filters)\n   * @method\n   * @param {undefined|string|SearchParameters.clearCallback} [attribute] optional string or function\n   * - If not given, means to clear all the filters.\n   * - If `string`, means to clear all refinements for the `attribute` named filter.\n   * - If `function`, means to clear all the refinements that return truthy values.\n   * @return {SearchParameters}\n   */\n  clearRefinements: function clearRefinements(attribute) {\n    var patch = {\n      numericRefinements: this._clearNumericRefinements(attribute),\n      facetsRefinements: RefinementList.clearRefinement(\n        this.facetsRefinements,\n        attribute,\n        'conjunctiveFacet'\n      ),\n      facetsExcludes: RefinementList.clearRefinement(\n        this.facetsExcludes,\n        attribute,\n        'exclude'\n      ),\n      disjunctiveFacetsRefinements: RefinementList.clearRefinement(\n        this.disjunctiveFacetsRefinements,\n        attribute,\n        'disjunctiveFacet'\n      ),\n      hierarchicalFacetsRefinements: RefinementList.clearRefinement(\n        this.hierarchicalFacetsRefinements,\n        attribute,\n        'hierarchicalFacet'\n      )\n    };\n    if (\n      patch.numericRefinements === this.numericRefinements &&\n      patch.facetsRefinements === this.facetsRefinements &&\n      patch.facetsExcludes === this.facetsExcludes &&\n      patch.disjunctiveFacetsRefinements === this.disjunctiveFacetsRefinements &&\n      patch.hierarchicalFacetsRefinements === this.hierarchicalFacetsRefinements\n    ) {\n      return this;\n    }\n    return this.setQueryParameters(patch);\n  },\n  /**\n   * Remove all the refined tags from the SearchParameters\n   * @method\n   * @return {SearchParameters}\n   */\n  clearTags: function clearTags() {\n    if (this.tagFilters === undefined && this.tagRefinements.length === 0) return this;\n\n    return this.setQueryParameters({\n      tagFilters: undefined,\n      tagRefinements: []\n    });\n  },\n  /**\n   * Set the index.\n   * @method\n   * @param {string} index the index name\n   * @return {SearchParameters}\n   */\n  setIndex: function setIndex(index) {\n    if (index === this.index) return this;\n\n    return this.setQueryParameters({\n      index: index\n    });\n  },\n  /**\n   * Query setter\n   * @method\n   * @param {string} newQuery value for the new query\n   * @return {SearchParameters}\n   */\n  setQuery: function setQuery(newQuery) {\n    if (newQuery === this.query) return this;\n\n    return this.setQueryParameters({\n      query: newQuery\n    });\n  },\n  /**\n   * Page setter\n   * @method\n   * @param {number} newPage new page number\n   * @return {SearchParameters}\n   */\n  setPage: function setPage(newPage) {\n    if (newPage === this.page) return this;\n\n    return this.setQueryParameters({\n      page: newPage\n    });\n  },\n  /**\n   * Facets setter\n   * The facets are the simple facets, used for conjunctive (and) faceting.\n   * @method\n   * @param {string[]} facets all the attributes of the algolia records used for conjunctive faceting\n   * @return {SearchParameters}\n   */\n  setFacets: function setFacets(facets) {\n    return this.setQueryParameters({\n      facets: facets\n    });\n  },\n  /**\n   * Disjunctive facets setter\n   * Change the list of disjunctive (or) facets the helper chan handle.\n   * @method\n   * @param {string[]} facets all the attributes of the algolia records used for disjunctive faceting\n   * @return {SearchParameters}\n   */\n  setDisjunctiveFacets: function setDisjunctiveFacets(facets) {\n    return this.setQueryParameters({\n      disjunctiveFacets: facets\n    });\n  },\n  /**\n   * HitsPerPage setter\n   * Hits per page represents the number of hits retrieved for this query\n   * @method\n   * @param {number} n number of hits retrieved per page of results\n   * @return {SearchParameters}\n   */\n  setHitsPerPage: function setHitsPerPage(n) {\n    if (this.hitsPerPage === n) return this;\n\n    return this.setQueryParameters({\n      hitsPerPage: n\n    });\n  },\n  /**\n   * typoTolerance setter\n   * Set the value of typoTolerance\n   * @method\n   * @param {string} typoTolerance new value of typoTolerance (\"true\", \"false\", \"min\" or \"strict\")\n   * @return {SearchParameters}\n   */\n  setTypoTolerance: function setTypoTolerance(typoTolerance) {\n    if (this.typoTolerance === typoTolerance) return this;\n\n    return this.setQueryParameters({\n      typoTolerance: typoTolerance\n    });\n  },\n  /**\n   * Add a numeric filter for a given attribute\n   * When value is an array, they are combined with OR\n   * When value is a single value, it will combined with AND\n   * @method\n   * @param {string} attribute attribute to set the filter on\n   * @param {string} operator operator of the filter (possible values: =, >, >=, <, <=, !=)\n   * @param {number | number[]} value value of the filter\n   * @return {SearchParameters}\n   * @example\n   * // for price = 50 or 40\n   * searchparameter.addNumericRefinement('price', '=', [50, 40]);\n   * @example\n   * // for size = 38 and 40\n   * searchparameter.addNumericRefinement('size', '=', 38);\n   * searchparameter.addNumericRefinement('size', '=', 40);\n   */\n  addNumericRefinement: function(attribute, operator, v) {\n    var value = valToNumber(v);\n\n    if (this.isNumericRefined(attribute, operator, value)) return this;\n\n    var mod = merge({}, this.numericRefinements);\n\n    mod[attribute] = merge({}, mod[attribute]);\n\n    if (mod[attribute][operator]) {\n      // Array copy\n      mod[attribute][operator] = mod[attribute][operator].slice();\n      // Add the element. Concat can't be used here because value can be an array.\n      mod[attribute][operator].push(value);\n    } else {\n      mod[attribute][operator] = [value];\n    }\n\n    return this.setQueryParameters({\n      numericRefinements: mod\n    });\n  },\n  /**\n   * Get the list of conjunctive refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getConjunctiveRefinements: function(facetName) {\n    if (!this.isConjunctiveFacet(facetName)) {\n      return [];\n    }\n    return this.facetsRefinements[facetName] || [];\n  },\n  /**\n   * Get the list of disjunctive refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getDisjunctiveRefinements: function(facetName) {\n    if (!this.isDisjunctiveFacet(facetName)) {\n      return [];\n    }\n    return this.disjunctiveFacetsRefinements[facetName] || [];\n  },\n  /**\n   * Get the list of hierarchical refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getHierarchicalRefinement: function(facetName) {\n    // we send an array but we currently do not support multiple\n    // hierarchicalRefinements for a hierarchicalFacet\n    return this.hierarchicalFacetsRefinements[facetName] || [];\n  },\n  /**\n   * Get the list of exclude refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getExcludeRefinements: function(facetName) {\n    if (!this.isConjunctiveFacet(facetName)) {\n      return [];\n    }\n    return this.facetsExcludes[facetName] || [];\n  },\n\n  /**\n   * Remove all the numeric filter for a given (attribute, operator)\n   * @method\n   * @param {string} attribute attribute to set the filter on\n   * @param {string} [operator] operator of the filter (possible values: =, >, >=, <, <=, !=)\n   * @param {number} [number] the value to be removed\n   * @return {SearchParameters}\n   */\n  removeNumericRefinement: function(attribute, operator, paramValue) {\n    if (paramValue !== undefined) {\n      if (!this.isNumericRefined(attribute, operator, paramValue)) {\n        return this;\n      }\n      return this.setQueryParameters({\n        numericRefinements: this._clearNumericRefinements(function(value, key) {\n          return (\n            key === attribute &&\n            value.op === operator &&\n            isEqualNumericRefinement(value.val, valToNumber(paramValue))\n          );\n        })\n      });\n    } else if (operator !== undefined) {\n      if (!this.isNumericRefined(attribute, operator)) return this;\n      return this.setQueryParameters({\n        numericRefinements: this._clearNumericRefinements(function(value, key) {\n          return key === attribute && value.op === operator;\n        })\n      });\n    }\n\n    if (!this.isNumericRefined(attribute)) return this;\n    return this.setQueryParameters({\n      numericRefinements: this._clearNumericRefinements(function(value, key) {\n        return key === attribute;\n      })\n    });\n  },\n  /**\n   * Get the list of numeric refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {SearchParameters.OperatorList} list of refinements\n   */\n  getNumericRefinements: function(facetName) {\n    return this.numericRefinements[facetName] || {};\n  },\n  /**\n   * Return the current refinement for the (attribute, operator)\n   * @param {string} attribute attribute in the record\n   * @param {string} operator operator applied on the refined values\n   * @return {Array.<number|number[]>} refined values\n   */\n  getNumericRefinement: function(attribute, operator) {\n    return this.numericRefinements[attribute] && this.numericRefinements[attribute][operator];\n  },\n  /**\n   * Clear numeric filters.\n   * @method\n   * @private\n   * @param {string|SearchParameters.clearCallback} [attribute] optional string or function\n   * - If not given, means to clear all the filters.\n   * - If `string`, means to clear all refinements for the `attribute` named filter.\n   * - If `function`, means to clear all the refinements that return truthy values.\n   * @return {Object.<string, OperatorList>}\n   */\n  _clearNumericRefinements: function _clearNumericRefinements(attribute) {\n    if (attribute === undefined) {\n      if (!objectHasKeys(this.numericRefinements)) {\n        return this.numericRefinements;\n      }\n      return {};\n    } else if (typeof attribute === 'string') {\n      return omit(this.numericRefinements, [attribute]);\n    } else if (typeof attribute === 'function') {\n      var hasChanged = false;\n      var numericRefinements = this.numericRefinements;\n      var newNumericRefinements = Object.keys(numericRefinements).reduce(function(memo, key) {\n        var operators = numericRefinements[key];\n        var operatorList = {};\n\n        operators = operators || {};\n        Object.keys(operators).forEach(function(operator) {\n          var values = operators[operator] || [];\n          var outValues = [];\n          values.forEach(function(value) {\n            var predicateResult = attribute({val: value, op: operator}, key, 'numeric');\n            if (!predicateResult) outValues.push(value);\n          });\n          if (outValues.length !== values.length) {\n            hasChanged = true;\n          }\n          operatorList[operator] = outValues;\n        });\n\n        memo[key] = operatorList;\n\n        return memo;\n      }, {});\n\n      if (hasChanged) return newNumericRefinements;\n      return this.numericRefinements;\n    }\n  },\n  /**\n   * Add a facet to the facets attribute of the helper configuration, if it\n   * isn't already present.\n   * @method\n   * @param {string} facet facet name to add\n   * @return {SearchParameters}\n   */\n  addFacet: function addFacet(facet) {\n    if (this.isConjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.setQueryParameters({\n      facets: this.facets.concat([facet])\n    });\n  },\n  /**\n   * Add a disjunctive facet to the disjunctiveFacets attribute of the helper\n   * configuration, if it isn't already present.\n   * @method\n   * @param {string} facet disjunctive facet name to add\n   * @return {SearchParameters}\n   */\n  addDisjunctiveFacet: function addDisjunctiveFacet(facet) {\n    if (this.isDisjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.setQueryParameters({\n      disjunctiveFacets: this.disjunctiveFacets.concat([facet])\n    });\n  },\n  /**\n   * Add a hierarchical facet to the hierarchicalFacets attribute of the helper\n   * configuration.\n   * @method\n   * @param {object} hierarchicalFacet hierarchical facet to add\n   * @return {SearchParameters}\n   * @throws will throw an error if a hierarchical facet with the same name was already declared\n   */\n  addHierarchicalFacet: function addHierarchicalFacet(hierarchicalFacet) {\n    if (this.isHierarchicalFacet(hierarchicalFacet.name)) {\n      throw new Error(\n        'Cannot declare two hierarchical facets with the same name: `' + hierarchicalFacet.name + '`');\n    }\n\n    return this.setQueryParameters({\n      hierarchicalFacets: this.hierarchicalFacets.concat([hierarchicalFacet])\n    });\n  },\n  /**\n   * Add a refinement on a \"normal\" facet\n   * @method\n   * @param {string} facet attribute to apply the faceting on\n   * @param {string} value value of the attribute (will be converted to string)\n   * @return {SearchParameters}\n   */\n  addFacetRefinement: function addFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n    if (RefinementList.isRefined(this.facetsRefinements, facet, value)) return this;\n\n    return this.setQueryParameters({\n      facetsRefinements: RefinementList.addRefinement(this.facetsRefinements, facet, value)\n    });\n  },\n  /**\n   * Exclude a value from a \"normal\" facet\n   * @method\n   * @param {string} facet attribute to apply the exclusion on\n   * @param {string} value value of the attribute (will be converted to string)\n   * @return {SearchParameters}\n   */\n  addExcludeRefinement: function addExcludeRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n    if (RefinementList.isRefined(this.facetsExcludes, facet, value)) return this;\n\n    return this.setQueryParameters({\n      facetsExcludes: RefinementList.addRefinement(this.facetsExcludes, facet, value)\n    });\n  },\n  /**\n   * Adds a refinement on a disjunctive facet.\n   * @method\n   * @param {string} facet attribute to apply the faceting on\n   * @param {string} value value of the attribute (will be converted to string)\n   * @return {SearchParameters}\n   */\n  addDisjunctiveFacetRefinement: function addDisjunctiveFacetRefinement(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      throw new Error(\n        facet + ' is not defined in the disjunctiveFacets attribute of the helper configuration');\n    }\n\n    if (RefinementList.isRefined(this.disjunctiveFacetsRefinements, facet, value)) return this;\n\n    return this.setQueryParameters({\n      disjunctiveFacetsRefinements: RefinementList.addRefinement(\n        this.disjunctiveFacetsRefinements, facet, value)\n    });\n  },\n  /**\n   * addTagRefinement adds a tag to the list used to filter the results\n   * @param {string} tag tag to be added\n   * @return {SearchParameters}\n   */\n  addTagRefinement: function addTagRefinement(tag) {\n    if (this.isTagRefined(tag)) return this;\n\n    var modification = {\n      tagRefinements: this.tagRefinements.concat(tag)\n    };\n\n    return this.setQueryParameters(modification);\n  },\n  /**\n   * Remove a facet from the facets attribute of the helper configuration, if it\n   * is present.\n   * @method\n   * @param {string} facet facet name to remove\n   * @return {SearchParameters}\n   */\n  removeFacet: function removeFacet(facet) {\n    if (!this.isConjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.clearRefinements(facet).setQueryParameters({\n      facets: this.facets.filter(function(f) {\n        return f !== facet;\n      })\n    });\n  },\n  /**\n   * Remove a disjunctive facet from the disjunctiveFacets attribute of the\n   * helper configuration, if it is present.\n   * @method\n   * @param {string} facet disjunctive facet name to remove\n   * @return {SearchParameters}\n   */\n  removeDisjunctiveFacet: function removeDisjunctiveFacet(facet) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.clearRefinements(facet).setQueryParameters({\n      disjunctiveFacets: this.disjunctiveFacets.filter(function(f) {\n        return f !== facet;\n      })\n    });\n  },\n  /**\n   * Remove a hierarchical facet from the hierarchicalFacets attribute of the\n   * helper configuration, if it is present.\n   * @method\n   * @param {string} facet hierarchical facet name to remove\n   * @return {SearchParameters}\n   */\n  removeHierarchicalFacet: function removeHierarchicalFacet(facet) {\n    if (!this.isHierarchicalFacet(facet)) {\n      return this;\n    }\n\n    return this.clearRefinements(facet).setQueryParameters({\n      hierarchicalFacets: this.hierarchicalFacets.filter(function(f) {\n        return f.name !== facet;\n      })\n    });\n  },\n  /**\n   * Remove a refinement set on facet. If a value is provided, it will clear the\n   * refinement for the given value, otherwise it will clear all the refinement\n   * values for the faceted attribute.\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {string} [value] value used to filter\n   * @return {SearchParameters}\n   */\n  removeFacetRefinement: function removeFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n    if (!RefinementList.isRefined(this.facetsRefinements, facet, value)) return this;\n\n    return this.setQueryParameters({\n      facetsRefinements: RefinementList.removeRefinement(this.facetsRefinements, facet, value)\n    });\n  },\n  /**\n   * Remove a negative refinement on a facet\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {string} value value used to filter\n   * @return {SearchParameters}\n   */\n  removeExcludeRefinement: function removeExcludeRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n    if (!RefinementList.isRefined(this.facetsExcludes, facet, value)) return this;\n\n    return this.setQueryParameters({\n      facetsExcludes: RefinementList.removeRefinement(this.facetsExcludes, facet, value)\n    });\n  },\n  /**\n   * Remove a refinement on a disjunctive facet\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {string} value value used to filter\n   * @return {SearchParameters}\n   */\n  removeDisjunctiveFacetRefinement: function removeDisjunctiveFacetRefinement(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      throw new Error(\n        facet + ' is not defined in the disjunctiveFacets attribute of the helper configuration');\n    }\n    if (!RefinementList.isRefined(this.disjunctiveFacetsRefinements, facet, value)) return this;\n\n    return this.setQueryParameters({\n      disjunctiveFacetsRefinements: RefinementList.removeRefinement(\n        this.disjunctiveFacetsRefinements, facet, value)\n    });\n  },\n  /**\n   * Remove a tag from the list of tag refinements\n   * @method\n   * @param {string} tag the tag to remove\n   * @return {SearchParameters}\n   */\n  removeTagRefinement: function removeTagRefinement(tag) {\n    if (!this.isTagRefined(tag)) return this;\n\n    var modification = {\n      tagRefinements: this.tagRefinements.filter(function(t) {\n        return t !== tag;\n      })\n    };\n\n    return this.setQueryParameters(modification);\n  },\n  /**\n   * Generic toggle refinement method to use with facet, disjunctive facets\n   * and hierarchical facets\n   * @param  {string} facet the facet to refine\n   * @param  {string} value the associated value\n   * @return {SearchParameters}\n   * @throws will throw an error if the facet is not declared in the settings of the helper\n   * @deprecated since version 2.19.0, see {@link SearchParameters#toggleFacetRefinement}\n   */\n  toggleRefinement: function toggleRefinement(facet, value) {\n    return this.toggleFacetRefinement(facet, value);\n  },\n  /**\n   * Generic toggle refinement method to use with facet, disjunctive facets\n   * and hierarchical facets\n   * @param  {string} facet the facet to refine\n   * @param  {string} value the associated value\n   * @return {SearchParameters}\n   * @throws will throw an error if the facet is not declared in the settings of the helper\n   */\n  toggleFacetRefinement: function toggleFacetRefinement(facet, value) {\n    if (this.isHierarchicalFacet(facet)) {\n      return this.toggleHierarchicalFacetRefinement(facet, value);\n    } else if (this.isConjunctiveFacet(facet)) {\n      return this.toggleConjunctiveFacetRefinement(facet, value);\n    } else if (this.isDisjunctiveFacet(facet)) {\n      return this.toggleDisjunctiveFacetRefinement(facet, value);\n    }\n\n    throw new Error('Cannot refine the undeclared facet ' + facet +\n      '; it should be added to the helper options facets, disjunctiveFacets or hierarchicalFacets');\n  },\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters}\n   */\n  toggleConjunctiveFacetRefinement: function toggleConjunctiveFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n\n    return this.setQueryParameters({\n      facetsRefinements: RefinementList.toggleRefinement(this.facetsRefinements, facet, value)\n    });\n  },\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters}\n   */\n  toggleExcludeFacetRefinement: function toggleExcludeFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n\n    return this.setQueryParameters({\n      facetsExcludes: RefinementList.toggleRefinement(this.facetsExcludes, facet, value)\n    });\n  },\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters}\n   */\n  toggleDisjunctiveFacetRefinement: function toggleDisjunctiveFacetRefinement(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      throw new Error(\n        facet + ' is not defined in the disjunctiveFacets attribute of the helper configuration');\n    }\n\n    return this.setQueryParameters({\n      disjunctiveFacetsRefinements: RefinementList.toggleRefinement(\n        this.disjunctiveFacetsRefinements, facet, value)\n    });\n  },\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters}\n   */\n  toggleHierarchicalFacetRefinement: function toggleHierarchicalFacetRefinement(facet, value) {\n    if (!this.isHierarchicalFacet(facet)) {\n      throw new Error(\n        facet + ' is not defined in the hierarchicalFacets attribute of the helper configuration');\n    }\n\n    var separator = this._getHierarchicalFacetSeparator(this.getHierarchicalFacetByName(facet));\n\n    var mod = {};\n\n    var upOneOrMultipleLevel = this.hierarchicalFacetsRefinements[facet] !== undefined &&\n      this.hierarchicalFacetsRefinements[facet].length > 0 && (\n      // remove current refinement:\n      // refinement was 'beer > IPA', call is toggleRefine('beer > IPA'), refinement should be `beer`\n      this.hierarchicalFacetsRefinements[facet][0] === value ||\n      // remove a parent refinement of the current refinement:\n      //  - refinement was 'beer > IPA > Flying dog'\n      //  - call is toggleRefine('beer > IPA')\n      //  - refinement should be `beer`\n      this.hierarchicalFacetsRefinements[facet][0].indexOf(value + separator) === 0\n    );\n\n    if (upOneOrMultipleLevel) {\n      if (value.indexOf(separator) === -1) {\n        // go back to root level\n        mod[facet] = [];\n      } else {\n        mod[facet] = [value.slice(0, value.lastIndexOf(separator))];\n      }\n    } else {\n      mod[facet] = [value];\n    }\n\n    return this.setQueryParameters({\n      hierarchicalFacetsRefinements: defaultsPure({}, mod, this.hierarchicalFacetsRefinements)\n    });\n  },\n\n  /**\n   * Adds a refinement on a hierarchical facet.\n   * @param {string} facet the facet name\n   * @param {string} path the hierarchical facet path\n   * @return {SearchParameter} the new state\n   * @throws Error if the facet is not defined or if the facet is refined\n   */\n  addHierarchicalFacetRefinement: function(facet, path) {\n    if (this.isHierarchicalFacetRefined(facet)) {\n      throw new Error(facet + ' is already refined.');\n    }\n    if (!this.isHierarchicalFacet(facet)) {\n      throw new Error(facet + ' is not defined in the hierarchicalFacets attribute of the helper configuration.');\n    }\n    var mod = {};\n    mod[facet] = [path];\n    return this.setQueryParameters({\n      hierarchicalFacetsRefinements: defaultsPure({}, mod, this.hierarchicalFacetsRefinements)\n    });\n  },\n\n  /**\n   * Removes the refinement set on a hierarchical facet.\n   * @param {string} facet the facet name\n   * @return {SearchParameter} the new state\n   * @throws Error if the facet is not defined or if the facet is not refined\n   */\n  removeHierarchicalFacetRefinement: function(facet) {\n    if (!this.isHierarchicalFacetRefined(facet)) {\n      return this;\n    }\n    var mod = {};\n    mod[facet] = [];\n    return this.setQueryParameters({\n      hierarchicalFacetsRefinements: defaultsPure({}, mod, this.hierarchicalFacetsRefinements)\n    });\n  },\n  /**\n   * Switch the tag refinement\n   * @method\n   * @param {string} tag the tag to remove or add\n   * @return {SearchParameters}\n   */\n  toggleTagRefinement: function toggleTagRefinement(tag) {\n    if (this.isTagRefined(tag)) {\n      return this.removeTagRefinement(tag);\n    }\n\n    return this.addTagRefinement(tag);\n  },\n  /**\n   * Test if the facet name is from one of the disjunctive facets\n   * @method\n   * @param {string} facet facet name to test\n   * @return {boolean}\n   */\n  isDisjunctiveFacet: function(facet) {\n    return this.disjunctiveFacets.indexOf(facet) > -1;\n  },\n  /**\n   * Test if the facet name is from one of the hierarchical facets\n   * @method\n   * @param {string} facetName facet name to test\n   * @return {boolean}\n   */\n  isHierarchicalFacet: function(facetName) {\n    return this.getHierarchicalFacetByName(facetName) !== undefined;\n  },\n  /**\n   * Test if the facet name is from one of the conjunctive/normal facets\n   * @method\n   * @param {string} facet facet name to test\n   * @return {boolean}\n   */\n  isConjunctiveFacet: function(facet) {\n    return this.facets.indexOf(facet) > -1;\n  },\n  /**\n   * Returns true if the facet is refined, either for a specific value or in\n   * general.\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} value, optional value. If passed will test that this value\n   * is filtering the given facet.\n   * @return {boolean} returns true if refined\n   */\n  isFacetRefined: function isFacetRefined(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      return false;\n    }\n    return RefinementList.isRefined(this.facetsRefinements, facet, value);\n  },\n  /**\n   * Returns true if the facet contains exclusions or if a specific value is\n   * excluded.\n   *\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} [value] optional value. If passed will test that this value\n   * is filtering the given facet.\n   * @return {boolean} returns true if refined\n   */\n  isExcludeRefined: function isExcludeRefined(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      return false;\n    }\n    return RefinementList.isRefined(this.facetsExcludes, facet, value);\n  },\n  /**\n   * Returns true if the facet contains a refinement, or if a value passed is a\n   * refinement for the facet.\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} value optional, will test if the value is used for refinement\n   * if there is one, otherwise will test if the facet contains any refinement\n   * @return {boolean}\n   */\n  isDisjunctiveFacetRefined: function isDisjunctiveFacetRefined(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      return false;\n    }\n    return RefinementList.isRefined(this.disjunctiveFacetsRefinements, facet, value);\n  },\n  /**\n   * Returns true if the facet contains a refinement, or if a value passed is a\n   * refinement for the facet.\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} value optional, will test if the value is used for refinement\n   * if there is one, otherwise will test if the facet contains any refinement\n   * @return {boolean}\n   */\n  isHierarchicalFacetRefined: function isHierarchicalFacetRefined(facet, value) {\n    if (!this.isHierarchicalFacet(facet)) {\n      return false;\n    }\n\n    var refinements = this.getHierarchicalRefinement(facet);\n\n    if (!value) {\n      return refinements.length > 0;\n    }\n\n    return refinements.indexOf(value) !== -1;\n  },\n  /**\n   * Test if the triple (attribute, operator, value) is already refined.\n   * If only the attribute and the operator are provided, it tests if the\n   * contains any refinement value.\n   * @method\n   * @param {string} attribute attribute for which the refinement is applied\n   * @param {string} [operator] operator of the refinement\n   * @param {string} [value] value of the refinement\n   * @return {boolean} true if it is refined\n   */\n  isNumericRefined: function isNumericRefined(attribute, operator, value) {\n    if (value === undefined && operator === undefined) {\n      return !!this.numericRefinements[attribute];\n    }\n\n    var isOperatorDefined =\n      this.numericRefinements[attribute] &&\n      this.numericRefinements[attribute][operator] !== undefined;\n\n    if (value === undefined || !isOperatorDefined) {\n      return isOperatorDefined;\n    }\n\n    var parsedValue = valToNumber(value);\n    var isAttributeValueDefined =\n      findArray(this.numericRefinements[attribute][operator], parsedValue) !==\n      undefined;\n\n    return isOperatorDefined && isAttributeValueDefined;\n  },\n  /**\n   * Returns true if the tag refined, false otherwise\n   * @method\n   * @param {string} tag the tag to check\n   * @return {boolean}\n   */\n  isTagRefined: function isTagRefined(tag) {\n    return this.tagRefinements.indexOf(tag) !== -1;\n  },\n  /**\n   * Returns the list of all disjunctive facets refined\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {string[]}\n   */\n  getRefinedDisjunctiveFacets: function getRefinedDisjunctiveFacets() {\n    var self = this;\n\n    // attributes used for numeric filter can also be disjunctive\n    var disjunctiveNumericRefinedFacets = intersection(\n      Object.keys(this.numericRefinements).filter(function(facet) {\n        return Object.keys(self.numericRefinements[facet]).length > 0;\n      }),\n      this.disjunctiveFacets\n    );\n\n    return Object.keys(this.disjunctiveFacetsRefinements).filter(function(facet) {\n      return self.disjunctiveFacetsRefinements[facet].length > 0;\n    })\n      .concat(disjunctiveNumericRefinedFacets)\n      .concat(this.getRefinedHierarchicalFacets());\n  },\n  /**\n   * Returns the list of all disjunctive facets refined\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {string[]}\n   */\n  getRefinedHierarchicalFacets: function getRefinedHierarchicalFacets() {\n    var self = this;\n    return intersection(\n      // enforce the order between the two arrays,\n      // so that refinement name index === hierarchical facet index\n      this.hierarchicalFacets.map(function(facet) { return facet.name; }),\n      Object.keys(this.hierarchicalFacetsRefinements).filter(function(facet) {\n        return self.hierarchicalFacetsRefinements[facet].length > 0;\n      })\n    );\n  },\n  /**\n   * Returned the list of all disjunctive facets not refined\n   * @method\n   * @return {string[]}\n   */\n  getUnrefinedDisjunctiveFacets: function() {\n    var refinedFacets = this.getRefinedDisjunctiveFacets();\n\n    return this.disjunctiveFacets.filter(function(f) {\n      return refinedFacets.indexOf(f) === -1;\n    });\n  },\n\n  managedParameters: [\n    'index',\n    'facets', 'disjunctiveFacets', 'facetsRefinements',\n    'facetsExcludes', 'disjunctiveFacetsRefinements',\n    'numericRefinements', 'tagRefinements', 'hierarchicalFacets', 'hierarchicalFacetsRefinements'\n  ],\n  getQueryParams: function getQueryParams() {\n    var managedParameters = this.managedParameters;\n\n    var queryParams = {};\n\n    var self = this;\n    Object.keys(this).forEach(function(paramName) {\n      var paramValue = self[paramName];\n      if (managedParameters.indexOf(paramName) === -1 && paramValue !== undefined) {\n        queryParams[paramName] = paramValue;\n      }\n    });\n\n    return queryParams;\n  },\n  /**\n   * Let the user set a specific value for a given parameter. Will return the\n   * same instance if the parameter is invalid or if the value is the same as the\n   * previous one.\n   * @method\n   * @param {string} parameter the parameter name\n   * @param {any} value the value to be set, must be compliant with the definition\n   * of the attribute on the object\n   * @return {SearchParameters} the updated state\n   */\n  setQueryParameter: function setParameter(parameter, value) {\n    if (this[parameter] === value) return this;\n\n    var modification = {};\n\n    modification[parameter] = value;\n\n    return this.setQueryParameters(modification);\n  },\n  /**\n   * Let the user set any of the parameters with a plain object.\n   * @method\n   * @param {object} params all the keys and the values to be updated\n   * @return {SearchParameters} a new updated instance\n   */\n  setQueryParameters: function setQueryParameters(params) {\n    if (!params) return this;\n\n    var error = SearchParameters.validate(this, params);\n\n    if (error) {\n      throw error;\n    }\n\n    var self = this;\n    var nextWithNumbers = SearchParameters._parseNumbers(params);\n    var previousPlainObject = Object.keys(this).reduce(function(acc, key) {\n      acc[key] = self[key];\n      return acc;\n    }, {});\n\n    var nextPlainObject = Object.keys(nextWithNumbers).reduce(\n      function(previous, key) {\n        var isPreviousValueDefined = previous[key] !== undefined;\n        var isNextValueDefined = nextWithNumbers[key] !== undefined;\n\n        if (isPreviousValueDefined && !isNextValueDefined) {\n          return omit(previous, [key]);\n        }\n\n        if (isNextValueDefined) {\n          previous[key] = nextWithNumbers[key];\n        }\n\n        return previous;\n      },\n      previousPlainObject\n    );\n\n    return new this.constructor(nextPlainObject);\n  },\n\n  /**\n   * Returns a new instance with the page reset. Two scenarios possible:\n   * the page is omitted -> return the given instance\n   * the page is set -> return a new instance with a page of 0\n   * @return {SearchParameters} a new updated instance\n   */\n  resetPage: function() {\n    if (this.page === undefined) {\n      return this;\n    }\n\n    return this.setPage(0);\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet separator or the default one (`>`)\n   * @param  {object} hierarchicalFacet\n   * @return {string} returns the hierarchicalFacet.separator or `>` as default\n   */\n  _getHierarchicalFacetSortBy: function(hierarchicalFacet) {\n    return hierarchicalFacet.sortBy || ['isRefined:desc', 'name:asc'];\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet separator or the default one (`>`)\n   * @private\n   * @param  {object} hierarchicalFacet\n   * @return {string} returns the hierarchicalFacet.separator or `>` as default\n   */\n  _getHierarchicalFacetSeparator: function(hierarchicalFacet) {\n    return hierarchicalFacet.separator || ' > ';\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet prefix path or null\n   * @private\n   * @param  {object} hierarchicalFacet\n   * @return {string} returns the hierarchicalFacet.rootPath or null as default\n   */\n  _getHierarchicalRootPath: function(hierarchicalFacet) {\n    return hierarchicalFacet.rootPath || null;\n  },\n\n  /**\n   * Helper function to check if we show the parent level of the hierarchicalFacet\n   * @private\n   * @param  {object} hierarchicalFacet\n   * @return {string} returns the hierarchicalFacet.showParentLevel or true as default\n   */\n  _getHierarchicalShowParentLevel: function(hierarchicalFacet) {\n    if (typeof hierarchicalFacet.showParentLevel === 'boolean') {\n      return hierarchicalFacet.showParentLevel;\n    }\n    return true;\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet by it's name\n   * @param  {string} hierarchicalFacetName\n   * @return {object} a hierarchicalFacet\n   */\n  getHierarchicalFacetByName: function(hierarchicalFacetName) {\n    return find(\n      this.hierarchicalFacets,\n      function(f) {\n        return f.name === hierarchicalFacetName;\n      }\n    );\n  },\n\n  /**\n   * Get the current breadcrumb for a hierarchical facet, as an array\n   * @param  {string} facetName Hierarchical facet name\n   * @return {array.<string>} the path as an array of string\n   */\n  getHierarchicalFacetBreadcrumb: function(facetName) {\n    if (!this.isHierarchicalFacet(facetName)) {\n      return [];\n    }\n\n    var refinement = this.getHierarchicalRefinement(facetName)[0];\n    if (!refinement) return [];\n\n    var separator = this._getHierarchicalFacetSeparator(\n      this.getHierarchicalFacetByName(facetName)\n    );\n    var path = refinement.split(separator);\n    return path.map(function(part) {\n      return part.trim();\n    });\n  },\n\n  toString: function() {\n    return JSON.stringify(this, null, 2);\n  }\n};\n\n/**\n * Callback used for clearRefinement method\n * @callback SearchParameters.clearCallback\n * @param {OperatorList|FacetList} value the value of the filter\n * @param {string} key the current attribute name\n * @param {string} type `numeric`, `disjunctiveFacet`, `conjunctiveFacet`, `hierarchicalFacet` or `exclude`\n * depending on the type of facet\n * @return {boolean} `true` if the element should be removed. `false` otherwise.\n */\nmodule.exports = SearchParameters;\n","'use strict';\n\nvar merge = require('../functions/merge');\nvar defaultsPure = require('../functions/defaultsPure');\nvar orderBy = require('../functions/orderBy');\nvar compact = require('../functions/compact');\nvar find = require('../functions/find');\nvar findIndex = require('../functions/findIndex');\nvar formatSort = require('../functions/formatSort');\n\nvar generateHierarchicalTree = require('./generate-hierarchical-tree');\n\n/**\n * @typedef SearchResults.Facet\n * @type {object}\n * @property {string} name name of the attribute in the record\n * @property {object} data the faceting data: value, number of entries\n * @property {object} stats undefined unless facet_stats is retrieved from algolia\n */\n\n/**\n * @typedef SearchResults.HierarchicalFacet\n * @type {object}\n * @property {string} name name of the current value given the hierarchical level, trimmed.\n * If root node, you get the facet name\n * @property {number} count number of objects matching this hierarchical value\n * @property {string} path the current hierarchical value full path\n * @property {boolean} isRefined `true` if the current value was refined, `false` otherwise\n * @property {HierarchicalFacet[]} data sub values for the current level\n */\n\n/**\n * @typedef SearchResults.FacetValue\n * @type {object}\n * @property {string} name the facet value itself\n * @property {number} count times this facet appears in the results\n * @property {boolean} isRefined is the facet currently selected\n * @property {boolean} isExcluded is the facet currently excluded (only for conjunctive facets)\n */\n\n/**\n * @typedef Refinement\n * @type {object}\n * @property {string} type the type of filter used:\n * `numeric`, `facet`, `exclude`, `disjunctive`, `hierarchical`\n * @property {string} attributeName name of the attribute used for filtering\n * @property {string} name the value of the filter\n * @property {number} numericValue the value as a number. Only for numeric filters.\n * @property {string} operator the operator used. Only for numeric filters.\n * @property {number} count the number of computed hits for this filter. Only on facets.\n * @property {boolean} exhaustive if the count is exhaustive\n */\n\n/**\n * @param {string[]} attributes\n */\nfunction getIndices(attributes) {\n  var indices = {};\n\n  attributes.forEach(function(val, idx) {\n    indices[val] = idx;\n  });\n\n  return indices;\n}\n\nfunction assignFacetStats(dest, facetStats, key) {\n  if (facetStats && facetStats[key]) {\n    dest.stats = facetStats[key];\n  }\n}\n\n/**\n * @typedef {Object} HierarchicalFacet\n * @property {string} name\n * @property {string[]} attributes\n */\n\n/**\n * @param {HierarchicalFacet[]} hierarchicalFacets\n * @param {string} hierarchicalAttributeName\n */\nfunction findMatchingHierarchicalFacetFromAttributeName(\n  hierarchicalFacets,\n  hierarchicalAttributeName\n) {\n  return find(hierarchicalFacets, function facetKeyMatchesAttribute(\n    hierarchicalFacet\n  ) {\n    var facetNames = hierarchicalFacet.attributes || [];\n    return facetNames.indexOf(hierarchicalAttributeName) > -1;\n  });\n}\n\n/*eslint-disable */\n/**\n * Constructor for SearchResults\n * @class\n * @classdesc SearchResults contains the results of a query to Algolia using the\n * {@link AlgoliaSearchHelper}.\n * @param {SearchParameters} state state that led to the response\n * @param {array.<object>} results the results from algolia client\n * @example <caption>SearchResults of the first query in\n * <a href=\"http://demos.algolia.com/instant-search-demo\">the instant search demo</a></caption>\n{\n   \"hitsPerPage\": 10,\n   \"processingTimeMS\": 2,\n   \"facets\": [\n      {\n         \"name\": \"type\",\n         \"data\": {\n            \"HardGood\": 6627,\n            \"BlackTie\": 550,\n            \"Music\": 665,\n            \"Software\": 131,\n            \"Game\": 456,\n            \"Movie\": 1571\n         },\n         \"exhaustive\": false\n      },\n      {\n         \"exhaustive\": false,\n         \"data\": {\n            \"Free shipping\": 5507\n         },\n         \"name\": \"shipping\"\n      }\n  ],\n   \"hits\": [\n      {\n         \"thumbnailImage\": \"http://img.bbystatic.com/BestBuy_US/images/products/1688/1688832_54x108_s.gif\",\n         \"_highlightResult\": {\n            \"shortDescription\": {\n               \"matchLevel\": \"none\",\n               \"value\": \"Safeguard your PC, Mac, Android and iOS devices with comprehensive Internet protection\",\n               \"matchedWords\": []\n            },\n            \"category\": {\n               \"matchLevel\": \"none\",\n               \"value\": \"Computer Security Software\",\n               \"matchedWords\": []\n            },\n            \"manufacturer\": {\n               \"matchedWords\": [],\n               \"value\": \"Webroot\",\n               \"matchLevel\": \"none\"\n            },\n            \"name\": {\n               \"value\": \"Webroot SecureAnywhere Internet Security (3-Device) (1-Year Subscription) - Mac/Windows\",\n               \"matchedWords\": [],\n               \"matchLevel\": \"none\"\n            }\n         },\n         \"image\": \"http://img.bbystatic.com/BestBuy_US/images/products/1688/1688832_105x210_sc.jpg\",\n         \"shipping\": \"Free shipping\",\n         \"bestSellingRank\": 4,\n         \"shortDescription\": \"Safeguard your PC, Mac, Android and iOS devices with comprehensive Internet protection\",\n         \"url\": \"http://www.bestbuy.com/site/webroot-secureanywhere-internet-security-3-devi…d=1219060687969&skuId=1688832&cmp=RMX&ky=2d3GfEmNIzjA0vkzveHdZEBgpPCyMnLTJ\",\n         \"name\": \"Webroot SecureAnywhere Internet Security (3-Device) (1-Year Subscription) - Mac/Windows\",\n         \"category\": \"Computer Security Software\",\n         \"salePrice_range\": \"1 - 50\",\n         \"objectID\": \"1688832\",\n         \"type\": \"Software\",\n         \"customerReviewCount\": 5980,\n         \"salePrice\": 49.99,\n         \"manufacturer\": \"Webroot\"\n      },\n      ....\n  ],\n   \"nbHits\": 10000,\n   \"disjunctiveFacets\": [\n      {\n         \"exhaustive\": false,\n         \"data\": {\n            \"5\": 183,\n            \"12\": 112,\n            \"7\": 149,\n            ...\n         },\n         \"name\": \"customerReviewCount\",\n         \"stats\": {\n            \"max\": 7461,\n            \"avg\": 157.939,\n            \"min\": 1\n         }\n      },\n      {\n         \"data\": {\n            \"Printer Ink\": 142,\n            \"Wireless Speakers\": 60,\n            \"Point & Shoot Cameras\": 48,\n            ...\n         },\n         \"name\": \"category\",\n         \"exhaustive\": false\n      },\n      {\n         \"exhaustive\": false,\n         \"data\": {\n            \"> 5000\": 2,\n            \"1 - 50\": 6524,\n            \"501 - 2000\": 566,\n            \"201 - 500\": 1501,\n            \"101 - 200\": 1360,\n            \"2001 - 5000\": 47\n         },\n         \"name\": \"salePrice_range\"\n      },\n      {\n         \"data\": {\n            \"Dynex™\": 202,\n            \"Insignia™\": 230,\n            \"PNY\": 72,\n            ...\n         },\n         \"name\": \"manufacturer\",\n         \"exhaustive\": false\n      }\n  ],\n   \"query\": \"\",\n   \"nbPages\": 100,\n   \"page\": 0,\n   \"index\": \"bestbuy\"\n}\n **/\n/*eslint-enable */\nfunction SearchResults(state, results) {\n  var mainSubResponse = results[0];\n\n  this._rawResults = results;\n\n  var self = this;\n\n  // https://www.algolia.com/doc/api-reference/api-methods/search/#response\n  Object.keys(mainSubResponse).forEach(function(key) {\n    self[key] = mainSubResponse[key];\n  });\n\n  /**\n   * query used to generate the results\n   * @name query\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * The query as parsed by the engine given all the rules.\n   * @name parsedQuery\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * all the records that match the search parameters. Each record is\n   * augmented with a new attribute `_highlightResult`\n   * which is an object keyed by attribute and with the following properties:\n   *  - `value` : the value of the facet highlighted (html)\n   *  - `matchLevel`: full, partial or none depending on how the query terms match\n   * @name hits\n   * @member {object[]}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * index where the results come from\n   * @name index\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * number of hits per page requested\n   * @name hitsPerPage\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * total number of hits of this query on the index\n   * @name nbHits\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * total number of pages with respect to the number of hits per page and the total number of hits\n   * @name nbPages\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * current page\n   * @name page\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * The position if the position was guessed by IP.\n   * @name aroundLatLng\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   * @example \"48.8637,2.3615\",\n   */\n  /**\n   * The radius computed by Algolia.\n   * @name automaticRadius\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   * @example \"126792922\",\n   */\n  /**\n   * String identifying the server used to serve this request.\n   *\n   * getRankingInfo needs to be set to `true` for this to be returned\n   *\n   * @name serverUsed\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   * @example \"c7-use-2.algolia.net\",\n   */\n  /**\n   * Boolean that indicates if the computation of the counts did time out.\n   * @deprecated\n   * @name timeoutCounts\n   * @member {boolean}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * Boolean that indicates if the computation of the hits did time out.\n   * @deprecated\n   * @name timeoutHits\n   * @member {boolean}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * True if the counts of the facets is exhaustive\n   * @name exhaustiveFacetsCount\n   * @member {boolean}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * True if the number of hits is exhaustive\n   * @name exhaustiveNbHits\n   * @member {boolean}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * Contains the userData if they are set by a [query rule](https://www.algolia.com/doc/guides/query-rules/query-rules-overview/).\n   * @name userData\n   * @member {object[]}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * queryID is the unique identifier of the query used to generate the current search results.\n   * This value is only available if the `clickAnalytics` search parameter is set to `true`.\n   * @name queryID\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * sum of the processing time of all the queries\n   * @member {number}\n   */\n  this.processingTimeMS = results.reduce(function(sum, result) {\n    return result.processingTimeMS === undefined\n      ? sum\n      : sum + result.processingTimeMS;\n  }, 0);\n\n  /**\n   * disjunctive facets results\n   * @member {SearchResults.Facet[]}\n   */\n  this.disjunctiveFacets = [];\n  /**\n   * disjunctive facets results\n   * @member {SearchResults.HierarchicalFacet[]}\n   */\n  this.hierarchicalFacets = state.hierarchicalFacets.map(function initFutureTree() {\n    return [];\n  });\n  /**\n   * other facets results\n   * @member {SearchResults.Facet[]}\n   */\n  this.facets = [];\n\n  var disjunctiveFacets = state.getRefinedDisjunctiveFacets();\n\n  var facetsIndices = getIndices(state.facets);\n  var disjunctiveFacetsIndices = getIndices(state.disjunctiveFacets);\n  var nextDisjunctiveResult = 1;\n\n  // Since we send request only for disjunctive facets that have been refined,\n  // we get the facets information from the first, general, response.\n\n  var mainFacets = mainSubResponse.facets || {};\n\n  Object.keys(mainFacets).forEach(function(facetKey) {\n    var facetValueObject = mainFacets[facetKey];\n\n    var hierarchicalFacet = findMatchingHierarchicalFacetFromAttributeName(\n      state.hierarchicalFacets,\n      facetKey\n    );\n\n    if (hierarchicalFacet) {\n      // Place the hierarchicalFacet data at the correct index depending on\n      // the attributes order that was defined at the helper initialization\n      var facetIndex = hierarchicalFacet.attributes.indexOf(facetKey);\n      var idxAttributeName = findIndex(state.hierarchicalFacets, function(f) {\n        return f.name === hierarchicalFacet.name;\n      });\n      self.hierarchicalFacets[idxAttributeName][facetIndex] = {\n        attribute: facetKey,\n        data: facetValueObject,\n        exhaustive: mainSubResponse.exhaustiveFacetsCount\n      };\n    } else {\n      var isFacetDisjunctive = state.disjunctiveFacets.indexOf(facetKey) !== -1;\n      var isFacetConjunctive = state.facets.indexOf(facetKey) !== -1;\n      var position;\n\n      if (isFacetDisjunctive) {\n        position = disjunctiveFacetsIndices[facetKey];\n        self.disjunctiveFacets[position] = {\n          name: facetKey,\n          data: facetValueObject,\n          exhaustive: mainSubResponse.exhaustiveFacetsCount\n        };\n        assignFacetStats(self.disjunctiveFacets[position], mainSubResponse.facets_stats, facetKey);\n      }\n      if (isFacetConjunctive) {\n        position = facetsIndices[facetKey];\n        self.facets[position] = {\n          name: facetKey,\n          data: facetValueObject,\n          exhaustive: mainSubResponse.exhaustiveFacetsCount\n        };\n        assignFacetStats(self.facets[position], mainSubResponse.facets_stats, facetKey);\n      }\n    }\n  });\n\n  // Make sure we do not keep holes within the hierarchical facets\n  this.hierarchicalFacets = compact(this.hierarchicalFacets);\n\n  // aggregate the refined disjunctive facets\n  disjunctiveFacets.forEach(function(disjunctiveFacet) {\n    var result = results[nextDisjunctiveResult];\n    var facets = result && result.facets ? result.facets : {};\n    var hierarchicalFacet = state.getHierarchicalFacetByName(disjunctiveFacet);\n\n    // There should be only item in facets.\n    Object.keys(facets).forEach(function(dfacet) {\n      var facetResults = facets[dfacet];\n\n      var position;\n\n      if (hierarchicalFacet) {\n        position = findIndex(state.hierarchicalFacets, function(f) {\n          return f.name === hierarchicalFacet.name;\n        });\n        var attributeIndex = findIndex(self.hierarchicalFacets[position], function(f) {\n          return f.attribute === dfacet;\n        });\n\n        // previous refinements and no results so not able to find it\n        if (attributeIndex === -1) {\n          return;\n        }\n\n        self.hierarchicalFacets[position][attributeIndex].data = merge(\n          {},\n          self.hierarchicalFacets[position][attributeIndex].data,\n          facetResults\n        );\n      } else {\n        position = disjunctiveFacetsIndices[dfacet];\n\n        var dataFromMainRequest = mainSubResponse.facets && mainSubResponse.facets[dfacet] || {};\n\n        self.disjunctiveFacets[position] = {\n          name: dfacet,\n          data: defaultsPure({}, facetResults, dataFromMainRequest),\n          exhaustive: result.exhaustiveFacetsCount\n        };\n        assignFacetStats(self.disjunctiveFacets[position], result.facets_stats, dfacet);\n\n        if (state.disjunctiveFacetsRefinements[dfacet]) {\n          state.disjunctiveFacetsRefinements[dfacet].forEach(function(refinementValue) {\n            // add the disjunctive refinements if it is no more retrieved\n            if (!self.disjunctiveFacets[position].data[refinementValue] &&\n              state.disjunctiveFacetsRefinements[dfacet].indexOf(refinementValue) > -1) {\n              self.disjunctiveFacets[position].data[refinementValue] = 0;\n            }\n          });\n        }\n      }\n    });\n    nextDisjunctiveResult++;\n  });\n\n  // if we have some root level values for hierarchical facets, merge them\n  state.getRefinedHierarchicalFacets().forEach(function(refinedFacet) {\n    var hierarchicalFacet = state.getHierarchicalFacetByName(refinedFacet);\n    var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n\n    var currentRefinement = state.getHierarchicalRefinement(refinedFacet);\n    // if we are already at a root refinement (or no refinement at all), there is no\n    // root level values request\n    if (currentRefinement.length === 0 || currentRefinement[0].split(separator).length < 2) {\n      return;\n    }\n\n    var result = results[nextDisjunctiveResult];\n    var facets = result && result.facets\n      ? result.facets\n      : {};\n    Object.keys(facets).forEach(function(dfacet) {\n      var facetResults = facets[dfacet];\n      var position = findIndex(state.hierarchicalFacets, function(f) {\n        return f.name === hierarchicalFacet.name;\n      });\n      var attributeIndex = findIndex(self.hierarchicalFacets[position], function(f) {\n        return f.attribute === dfacet;\n      });\n\n      // previous refinements and no results so not able to find it\n      if (attributeIndex === -1) {\n        return;\n      }\n\n      // when we always get root levels, if the hits refinement is `beers > IPA` (count: 5),\n      // then the disjunctive values will be `beers` (count: 100),\n      // but we do not want to display\n      //   | beers (100)\n      //     > IPA (5)\n      // We want\n      //   | beers (5)\n      //     > IPA (5)\n      var defaultData = {};\n\n      if (currentRefinement.length > 0) {\n        var root = currentRefinement[0].split(separator)[0];\n        defaultData[root] = self.hierarchicalFacets[position][attributeIndex].data[root];\n      }\n\n      self.hierarchicalFacets[position][attributeIndex].data = defaultsPure(\n        defaultData,\n        facetResults,\n        self.hierarchicalFacets[position][attributeIndex].data\n      );\n    });\n\n    nextDisjunctiveResult++;\n  });\n\n  // add the excludes\n  Object.keys(state.facetsExcludes).forEach(function(facetName) {\n    var excludes = state.facetsExcludes[facetName];\n    var position = facetsIndices[facetName];\n\n    self.facets[position] = {\n      name: facetName,\n      data: mainSubResponse.facets[facetName],\n      exhaustive: mainSubResponse.exhaustiveFacetsCount\n    };\n    excludes.forEach(function(facetValue) {\n      self.facets[position] = self.facets[position] || {name: facetName};\n      self.facets[position].data = self.facets[position].data || {};\n      self.facets[position].data[facetValue] = 0;\n    });\n  });\n\n  /**\n   * @type {Array}\n   */\n  this.hierarchicalFacets = this.hierarchicalFacets.map(generateHierarchicalTree(state));\n\n  /**\n   * @type {Array}\n   */\n  this.facets = compact(this.facets);\n  /**\n   * @type {Array}\n   */\n  this.disjunctiveFacets = compact(this.disjunctiveFacets);\n\n  this._state = state;\n}\n\n/**\n * Get a facet object with its name\n * @deprecated\n * @param {string} name name of the faceted attribute\n * @return {SearchResults.Facet} the facet object\n */\nSearchResults.prototype.getFacetByName = function(name) {\n  function predicate(facet) {\n    return facet.name === name;\n  }\n\n  return find(this.facets, predicate) ||\n    find(this.disjunctiveFacets, predicate) ||\n    find(this.hierarchicalFacets, predicate);\n};\n\n/**\n * Get the facet values of a specified attribute from a SearchResults object.\n * @private\n * @param {SearchResults} results the search results to search in\n * @param {string} attribute name of the faceted attribute to search for\n * @return {array|object} facet values. For the hierarchical facets it is an object.\n */\nfunction extractNormalizedFacetValues(results, attribute) {\n  function predicate(facet) {\n    return facet.name === attribute;\n  }\n\n  if (results._state.isConjunctiveFacet(attribute)) {\n    var facet = find(results.facets, predicate);\n    if (!facet) return [];\n\n    return Object.keys(facet.data).map(function(name) {\n      return {\n        name: name,\n        count: facet.data[name],\n        isRefined: results._state.isFacetRefined(attribute, name),\n        isExcluded: results._state.isExcludeRefined(attribute, name)\n      };\n    });\n  } else if (results._state.isDisjunctiveFacet(attribute)) {\n    var disjunctiveFacet = find(results.disjunctiveFacets, predicate);\n    if (!disjunctiveFacet) return [];\n\n    return Object.keys(disjunctiveFacet.data).map(function(name) {\n      return {\n        name: name,\n        count: disjunctiveFacet.data[name],\n        isRefined: results._state.isDisjunctiveFacetRefined(attribute, name)\n      };\n    });\n  } else if (results._state.isHierarchicalFacet(attribute)) {\n    return find(results.hierarchicalFacets, predicate);\n  }\n}\n\n/**\n * Sort nodes of a hierarchical facet results\n * @private\n * @param {HierarchicalFacet} node node to upon which we want to apply the sort\n */\nfunction recSort(sortFn, node) {\n  if (!node.data || node.data.length === 0) {\n    return node;\n  }\n\n  var children = node.data.map(function(childNode) {\n    return recSort(sortFn, childNode);\n  });\n  var sortedChildren = sortFn(children);\n  var newNode = merge({}, node, {data: sortedChildren});\n  return newNode;\n}\n\nSearchResults.DEFAULT_SORT = ['isRefined:desc', 'count:desc', 'name:asc'];\n\nfunction vanillaSortFn(order, data) {\n  return data.sort(order);\n}\n\n/**\n * Get a the list of values for a given facet attribute. Those values are sorted\n * refinement first, descending count (bigger value on top), and name ascending\n * (alphabetical order). The sort formula can overridden using either string based\n * predicates or a function.\n *\n * This method will return all the values returned by the Algolia engine plus all\n * the values already refined. This means that it can happen that the\n * `maxValuesPerFacet` [configuration](https://www.algolia.com/doc/rest-api/search#param-maxValuesPerFacet)\n * might not be respected if you have facet values that are already refined.\n * @param {string} attribute attribute name\n * @param {object} opts configuration options.\n * @param {Array.<string> | function} opts.sortBy\n * When using strings, it consists of\n * the name of the [FacetValue](#SearchResults.FacetValue) or the\n * [HierarchicalFacet](#SearchResults.HierarchicalFacet) attributes with the\n * order (`asc` or `desc`). For example to order the value by count, the\n * argument would be `['count:asc']`.\n *\n * If only the attribute name is specified, the ordering defaults to the one\n * specified in the default value for this attribute.\n *\n * When not specified, the order is\n * ascending.  This parameter can also be a function which takes two facet\n * values and should return a number, 0 if equal, 1 if the first argument is\n * bigger or -1 otherwise.\n *\n * The default value for this attribute `['isRefined:desc', 'count:desc', 'name:asc']`\n * @return {FacetValue[]|HierarchicalFacet|undefined} depending on the type of facet of\n * the attribute requested (hierarchical, disjunctive or conjunctive)\n * @example\n * helper.on('result', function(event){\n *   //get values ordered only by name ascending using the string predicate\n *   event.results.getFacetValues('city', {sortBy: ['name:asc']});\n *   //get values  ordered only by count ascending using a function\n *   event.results.getFacetValues('city', {\n *     // this is equivalent to ['count:asc']\n *     sortBy: function(a, b) {\n *       if (a.count === b.count) return 0;\n *       if (a.count > b.count)   return 1;\n *       if (b.count > a.count)   return -1;\n *     }\n *   });\n * });\n */\nSearchResults.prototype.getFacetValues = function(attribute, opts) {\n  var facetValues = extractNormalizedFacetValues(this, attribute);\n  if (!facetValues) {\n    return undefined;\n  }\n\n  var options = defaultsPure({}, opts, {sortBy: SearchResults.DEFAULT_SORT});\n\n  if (Array.isArray(options.sortBy)) {\n    var order = formatSort(options.sortBy, SearchResults.DEFAULT_SORT);\n    if (Array.isArray(facetValues)) {\n      return orderBy(facetValues, order[0], order[1]);\n    }\n    // If facetValues is not an array, it's an object thus a hierarchical facet object\n    return recSort(function(hierarchicalFacetValues) {\n      return orderBy(hierarchicalFacetValues, order[0], order[1]);\n    }, facetValues);\n  } else if (typeof options.sortBy === 'function') {\n    if (Array.isArray(facetValues)) {\n      return facetValues.sort(options.sortBy);\n    }\n    // If facetValues is not an array, it's an object thus a hierarchical facet object\n    return recSort(function(data) {\n      return vanillaSortFn(options.sortBy, data);\n    }, facetValues);\n  }\n  throw new Error(\n    'options.sortBy is optional but if defined it must be ' +\n    'either an array of string (predicates) or a sorting function'\n  );\n};\n\n/**\n * Returns the facet stats if attribute is defined and the facet contains some.\n * Otherwise returns undefined.\n * @param {string} attribute name of the faceted attribute\n * @return {object} The stats of the facet\n */\nSearchResults.prototype.getFacetStats = function(attribute) {\n  if (this._state.isConjunctiveFacet(attribute)) {\n    return getFacetStatsIfAvailable(this.facets, attribute);\n  } else if (this._state.isDisjunctiveFacet(attribute)) {\n    return getFacetStatsIfAvailable(this.disjunctiveFacets, attribute);\n  }\n\n  return undefined;\n};\n\n/**\n * @typedef {Object} FacetListItem\n * @property {string} name\n */\n\n/**\n * @param {FacetListItem[]} facetList (has more items, but enough for here)\n * @param {string} facetName\n */\nfunction getFacetStatsIfAvailable(facetList, facetName) {\n  var data = find(facetList, function(facet) {\n    return facet.name === facetName;\n  });\n  return data && data.stats;\n}\n\n/**\n * Returns all refinements for all filters + tags. It also provides\n * additional information: count and exhaustiveness for each filter.\n *\n * See the [refinement type](#Refinement) for an exhaustive view of the available\n * data.\n *\n * Note that for a numeric refinement, results are grouped per operator, this\n * means that it will return responses for operators which are empty.\n *\n * @return {Array.<Refinement>} all the refinements\n */\nSearchResults.prototype.getRefinements = function() {\n  var state = this._state;\n  var results = this;\n  var res = [];\n\n  Object.keys(state.facetsRefinements).forEach(function(attributeName) {\n    state.facetsRefinements[attributeName].forEach(function(name) {\n      res.push(getRefinement(state, 'facet', attributeName, name, results.facets));\n    });\n  });\n\n  Object.keys(state.facetsExcludes).forEach(function(attributeName) {\n    state.facetsExcludes[attributeName].forEach(function(name) {\n      res.push(getRefinement(state, 'exclude', attributeName, name, results.facets));\n    });\n  });\n\n  Object.keys(state.disjunctiveFacetsRefinements).forEach(function(attributeName) {\n    state.disjunctiveFacetsRefinements[attributeName].forEach(function(name) {\n      res.push(getRefinement(state, 'disjunctive', attributeName, name, results.disjunctiveFacets));\n    });\n  });\n\n  Object.keys(state.hierarchicalFacetsRefinements).forEach(function(attributeName) {\n    state.hierarchicalFacetsRefinements[attributeName].forEach(function(name) {\n      res.push(getHierarchicalRefinement(state, attributeName, name, results.hierarchicalFacets));\n    });\n  });\n\n\n  Object.keys(state.numericRefinements).forEach(function(attributeName) {\n    var operators = state.numericRefinements[attributeName];\n    Object.keys(operators).forEach(function(operator) {\n      operators[operator].forEach(function(value) {\n        res.push({\n          type: 'numeric',\n          attributeName: attributeName,\n          name: value,\n          numericValue: value,\n          operator: operator\n        });\n      });\n    });\n  });\n\n  state.tagRefinements.forEach(function(name) {\n    res.push({type: 'tag', attributeName: '_tags', name: name});\n  });\n\n  return res;\n};\n\n/**\n * @typedef {Object} Facet\n * @property {string} name\n * @property {Object} data\n * @property {boolean} exhaustive\n */\n\n/**\n * @param {*} state\n * @param {*} type\n * @param {string} attributeName\n * @param {*} name\n * @param {Facet[]} resultsFacets\n */\nfunction getRefinement(state, type, attributeName, name, resultsFacets) {\n  var facet = find(resultsFacets, function(f) {\n    return f.name === attributeName;\n  });\n  var count = facet && facet.data && facet.data[name] ? facet.data[name] : 0;\n  var exhaustive = (facet && facet.exhaustive) || false;\n\n  return {\n    type: type,\n    attributeName: attributeName,\n    name: name,\n    count: count,\n    exhaustive: exhaustive\n  };\n}\n\n/**\n * @param {*} state\n * @param {string} attributeName\n * @param {*} name\n * @param {Facet[]} resultsFacets\n */\nfunction getHierarchicalRefinement(state, attributeName, name, resultsFacets) {\n  var facetDeclaration = state.getHierarchicalFacetByName(attributeName);\n  var separator = state._getHierarchicalFacetSeparator(facetDeclaration);\n  var split = name.split(separator);\n  var rootFacet = find(resultsFacets, function(facet) {\n    return facet.name === attributeName;\n  });\n\n  var facet = split.reduce(function(intermediateFacet, part) {\n    var newFacet =\n      intermediateFacet && find(intermediateFacet.data, function(f) {\n        return f.name === part;\n      });\n    return newFacet !== undefined ? newFacet : intermediateFacet;\n  }, rootFacet);\n\n  var count = (facet && facet.count) || 0;\n  var exhaustive = (facet && facet.exhaustive) || false;\n  var path = (facet && facet.path) || '';\n\n  return {\n    type: 'hierarchical',\n    attributeName: attributeName,\n    name: path,\n    count: count,\n    exhaustive: exhaustive\n  };\n}\n\nmodule.exports = SearchResults;\n","'use strict';\n\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined;\n    var valIsNull = value === null;\n\n    var othIsDefined = other !== undefined;\n    var othIsNull = other === null;\n\n    if (\n      (!othIsNull && value > other) ||\n      (valIsNull && othIsDefined) ||\n      !valIsDefined\n    ) {\n      return 1;\n    }\n    if (\n      (!valIsNull && value < other) ||\n      (othIsNull && valIsDefined) ||\n      !othIsDefined\n    ) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\n/**\n * @param {Array<object>} collection object with keys in attributes\n * @param {Array<string>} iteratees attributes\n * @param {Array<string>} orders asc | desc\n */\nfunction orderBy(collection, iteratees, orders) {\n  if (!Array.isArray(collection)) {\n    return [];\n  }\n\n  if (!Array.isArray(orders)) {\n    orders = [];\n  }\n\n  var result = collection.map(function(value, index) {\n    return {\n      criteria: iteratees.map(function(iteratee) {\n        return value[iteratee];\n      }),\n      index: index,\n      value: value\n    };\n  });\n\n  result.sort(function comparer(object, other) {\n    var index = -1;\n\n    while (++index < object.criteria.length) {\n      var res = compareAscending(object.criteria[index], other.criteria[index]);\n      if (res) {\n        if (index >= orders.length) {\n          return res;\n        }\n        if (orders[index] === 'desc') {\n          return -res;\n        }\n        return res;\n      }\n    }\n\n    // This ensures a stable sort in V8 and other engines.\n    // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n    return object.index - other.index;\n  });\n\n  return result.map(function(res) {\n    return res.value;\n  });\n}\n\nmodule.exports = orderBy;\n","'use strict';\n\nvar find = require('./find');\n\n/**\n * Transform sort format from user friendly notation to lodash format\n * @param {string[]} sortBy array of predicate of the form \"attribute:order\"\n * @param {string[]} [defaults] array of predicate of the form \"attribute:order\"\n * @return {array.<string[]>} array containing 2 elements : attributes, orders\n */\nmodule.exports = function formatSort(sortBy, defaults) {\n  var defaultInstructions = (defaults || []).map(function(sort) {\n    return sort.split(':');\n  });\n\n  return sortBy.reduce(\n    function preparePredicate(out, sort) {\n      var sortInstruction = sort.split(':');\n\n      var matchingDefault = find(defaultInstructions, function(\n        defaultInstruction\n      ) {\n        return defaultInstruction[0] === sortInstruction[0];\n      });\n\n      if (sortInstruction.length > 1 || !matchingDefault) {\n        out[0].push(sortInstruction[0]);\n        out[1].push(sortInstruction[1]);\n        return out;\n      }\n\n      out[0].push(matchingDefault[0]);\n      out[1].push(matchingDefault[1]);\n      return out;\n    },\n    [[], []]\n  );\n};\n","'use strict';\n\nfunction inherits(ctor, superCtor) {\n  ctor.prototype = Object.create(superCtor.prototype, {\n    constructor: {\n      value: ctor,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n}\n\nmodule.exports = inherits;\n","'use strict';\n\nmodule.exports = '3.4.4';\n","'use strict';\n\nvar AlgoliaSearchHelper = require('./src/algoliasearch.helper');\n\nvar SearchParameters = require('./src/SearchParameters');\nvar SearchResults = require('./src/SearchResults');\n\n/**\n * The algoliasearchHelper module is the function that will let its\n * contains everything needed to use the Algoliasearch\n * Helper. It is a also a function that instanciate the helper.\n * To use the helper, you also need the Algolia JS client v3.\n * @example\n * //using the UMD build\n * var client = algoliasearch('latency', '6be0576ff61c053d5f9a3225e2a90f76');\n * var helper = algoliasearchHelper(client, 'bestbuy', {\n *   facets: ['shipping'],\n *   disjunctiveFacets: ['category']\n * });\n * helper.on('result', function(event) {\n *   console.log(event.results);\n * });\n * helper\n *   .toggleFacetRefinement('category', 'Movies & TV Shows')\n *   .toggleFacetRefinement('shipping', 'Free shipping')\n *   .search();\n * @example\n * // The helper is an event emitter using the node API\n * helper.on('result', updateTheResults);\n * helper.once('result', updateTheResults);\n * helper.removeListener('result', updateTheResults);\n * helper.removeAllListeners('result');\n * @module algoliasearchHelper\n * @param  {AlgoliaSearch} client an AlgoliaSearch client\n * @param  {string} index the name of the index to query\n * @param  {SearchParameters|object} opts an object defining the initial config of the search. It doesn't have to be a {SearchParameters}, just an object containing the properties you need from it.\n * @return {AlgoliaSearchHelper}\n */\nfunction algoliasearchHelper(client, index, opts) {\n  return new AlgoliaSearchHelper(client, index, opts);\n}\n\n/**\n * The version currently used\n * @member module:algoliasearchHelper.version\n * @type {number}\n */\nalgoliasearchHelper.version = require('./src/version.js');\n\n/**\n * Constructor for the Helper.\n * @member module:algoliasearchHelper.AlgoliaSearchHelper\n * @type {AlgoliaSearchHelper}\n */\nalgoliasearchHelper.AlgoliaSearchHelper = AlgoliaSearchHelper;\n\n/**\n * Constructor for the object containing all the parameters of the search.\n * @member module:algoliasearchHelper.SearchParameters\n * @type {SearchParameters}\n */\nalgoliasearchHelper.SearchParameters = SearchParameters;\n\n/**\n * Constructor for the object containing the results of the search.\n * @member module:algoliasearchHelper.SearchResults\n * @type {SearchResults}\n */\nalgoliasearchHelper.SearchResults = SearchResults;\n\nmodule.exports = algoliasearchHelper;\n","'use strict';\n\nvar SearchParameters = require('./SearchParameters');\nvar SearchResults = require('./SearchResults');\nvar DerivedHelper = require('./DerivedHelper');\nvar requestBuilder = require('./requestBuilder');\n\nvar events = require('events');\nvar inherits = require('./functions/inherits');\nvar objectHasKeys = require('./functions/objectHasKeys');\nvar omit = require('./functions/omit');\nvar merge = require('./functions/merge');\n\nvar version = require('./version');\n\n/**\n * Event triggered when a parameter is set or updated\n * @event AlgoliaSearchHelper#event:change\n * @property {object} event\n * @property {SearchParameters} event.state the current parameters with the latest changes applied\n * @property {SearchResults} event.results the previous results received from Algolia. `null` before the first request\n * @example\n * helper.on('change', function(event) {\n *   console.log('The parameters have changed');\n * });\n */\n\n/**\n * Event triggered when a main search is sent to Algolia\n * @event AlgoliaSearchHelper#event:search\n * @property {object} event\n * @property {SearchParameters} event.state the parameters used for this search\n * @property {SearchResults} event.results the results from the previous search. `null` if it is the first search.\n * @example\n * helper.on('search', function(event) {\n *   console.log('Search sent');\n * });\n */\n\n/**\n * Event triggered when a search using `searchForFacetValues` is sent to Algolia\n * @event AlgoliaSearchHelper#event:searchForFacetValues\n * @property {object} event\n * @property {SearchParameters} event.state the parameters used for this search it is the first search.\n * @property {string} event.facet the facet searched into\n * @property {string} event.query the query used to search in the facets\n * @example\n * helper.on('searchForFacetValues', function(event) {\n *   console.log('searchForFacetValues sent');\n * });\n */\n\n/**\n * Event triggered when a search using `searchOnce` is sent to Algolia\n * @event AlgoliaSearchHelper#event:searchOnce\n * @property {object} event\n * @property {SearchParameters} event.state the parameters used for this search it is the first search.\n * @example\n * helper.on('searchOnce', function(event) {\n *   console.log('searchOnce sent');\n * });\n */\n\n/**\n * Event triggered when the results are retrieved from Algolia\n * @event AlgoliaSearchHelper#event:result\n * @property {object} event\n * @property {SearchResults} event.results the results received from Algolia\n * @property {SearchParameters} event.state the parameters used to query Algolia. Those might be different from the one in the helper instance (for example if the network is unreliable).\n * @example\n * helper.on('result', function(event) {\n *   console.log('Search results received');\n * });\n */\n\n/**\n * Event triggered when Algolia sends back an error. For example, if an unknown parameter is\n * used, the error can be caught using this event.\n * @event AlgoliaSearchHelper#event:error\n * @property {object} event\n * @property {Error} event.error the error returned by the Algolia.\n * @example\n * helper.on('error', function(event) {\n *   console.log('Houston we got a problem.');\n * });\n */\n\n/**\n * Event triggered when the queue of queries have been depleted (with any result or outdated queries)\n * @event AlgoliaSearchHelper#event:searchQueueEmpty\n * @example\n * helper.on('searchQueueEmpty', function() {\n *   console.log('No more search pending');\n *   // This is received before the result event if we're not expecting new results\n * });\n *\n * helper.search();\n */\n\n/**\n * Initialize a new AlgoliaSearchHelper\n * @class\n * @classdesc The AlgoliaSearchHelper is a class that ease the management of the\n * search. It provides an event based interface for search callbacks:\n *  - change: when the internal search state is changed.\n *    This event contains a {@link SearchParameters} object and the\n *    {@link SearchResults} of the last result if any.\n *  - search: when a search is triggered using the `search()` method.\n *  - result: when the response is retrieved from Algolia and is processed.\n *    This event contains a {@link SearchResults} object and the\n *    {@link SearchParameters} corresponding to this answer.\n *  - error: when the response is an error. This event contains the error returned by the server.\n * @param  {AlgoliaSearch} client an AlgoliaSearch client\n * @param  {string} index the index name to query\n * @param  {SearchParameters | object} options an object defining the initial\n * config of the search. It doesn't have to be a {SearchParameters},\n * just an object containing the properties you need from it.\n */\nfunction AlgoliaSearchHelper(client, index, options) {\n  if (typeof client.addAlgoliaAgent === 'function') {\n    client.addAlgoliaAgent('JS Helper (' + version + ')');\n  }\n\n  this.setClient(client);\n  var opts = options || {};\n  opts.index = index;\n  this.state = SearchParameters.make(opts);\n  this.lastResults = null;\n  this._queryId = 0;\n  this._lastQueryIdReceived = -1;\n  this.derivedHelpers = [];\n  this._currentNbQueries = 0;\n}\n\ninherits(AlgoliaSearchHelper, events.EventEmitter);\n\n/**\n * Start the search with the parameters set in the state. When the\n * method is called, it triggers a `search` event. The results will\n * be available through the `result` event. If an error occurs, an\n * `error` will be fired instead.\n * @return {AlgoliaSearchHelper}\n * @fires search\n * @fires result\n * @fires error\n * @chainable\n */\nAlgoliaSearchHelper.prototype.search = function() {\n  this._search({onlyWithDerivedHelpers: false});\n  return this;\n};\n\nAlgoliaSearchHelper.prototype.searchOnlyWithDerivedHelpers = function() {\n  this._search({onlyWithDerivedHelpers: true});\n  return this;\n};\n\n/**\n * Gets the search query parameters that would be sent to the Algolia Client\n * for the hits\n * @return {object} Query Parameters\n */\nAlgoliaSearchHelper.prototype.getQuery = function() {\n  var state = this.state;\n  return requestBuilder._getHitsSearchParams(state);\n};\n\n/**\n * Start a search using a modified version of the current state. This method does\n * not trigger the helper lifecycle and does not modify the state kept internally\n * by the helper. This second aspect means that the next search call will be the\n * same as a search call before calling searchOnce.\n * @param {object} options can contain all the parameters that can be set to SearchParameters\n * plus the index\n * @param {function} [callback] optional callback executed when the response from the\n * server is back.\n * @return {promise|undefined} if a callback is passed the method returns undefined\n * otherwise it returns a promise containing an object with two keys :\n *  - content with a SearchResults\n *  - state with the state used for the query as a SearchParameters\n * @example\n * // Changing the number of records returned per page to 1\n * // This example uses the callback API\n * var state = helper.searchOnce({hitsPerPage: 1},\n *   function(error, content, state) {\n *     // if an error occurred it will be passed in error, otherwise its value is null\n *     // content contains the results formatted as a SearchResults\n *     // state is the instance of SearchParameters used for this search\n *   });\n * @example\n * // Changing the number of records returned per page to 1\n * // This example uses the promise API\n * var state1 = helper.searchOnce({hitsPerPage: 1})\n *                 .then(promiseHandler);\n *\n * function promiseHandler(res) {\n *   // res contains\n *   // {\n *   //   content : SearchResults\n *   //   state   : SearchParameters (the one used for this specific search)\n *   // }\n * }\n */\nAlgoliaSearchHelper.prototype.searchOnce = function(options, cb) {\n  var tempState = !options ? this.state : this.state.setQueryParameters(options);\n  var queries = requestBuilder._getQueries(tempState.index, tempState);\n  var self = this;\n\n  this._currentNbQueries++;\n\n  this.emit('searchOnce', {\n    state: tempState\n  });\n\n  if (cb) {\n    this.client\n      .search(queries)\n      .then(function(content) {\n        self._currentNbQueries--;\n        if (self._currentNbQueries === 0) {\n          self.emit('searchQueueEmpty');\n        }\n\n        cb(null, new SearchResults(tempState, content.results), tempState);\n      })\n      .catch(function(err) {\n        self._currentNbQueries--;\n        if (self._currentNbQueries === 0) {\n          self.emit('searchQueueEmpty');\n        }\n\n        cb(err, null, tempState);\n      });\n\n    return undefined;\n  }\n\n  return this.client.search(queries).then(function(content) {\n    self._currentNbQueries--;\n    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n    return {\n      content: new SearchResults(tempState, content.results),\n      state: tempState,\n      _originalResponse: content\n    };\n  }, function(e) {\n    self._currentNbQueries--;\n    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n    throw e;\n  });\n};\n\n /**\n * Start the search for answers with the parameters set in the state.\n * This method returns a promise.\n * @param {Object} options - the options for answers API call\n * @param {string[]} options.attributesForPrediction - Attributes to use for predictions. If empty, `searchableAttributes` is used instead.\n * @param {string[]} options.queryLanguages - The languages in the query. Currently only supports ['en'].\n * @param {number} options.nbHits - Maximum number of answers to retrieve from the Answers Engine. Cannot be greater than 1000.\n *\n * @return {promise} the answer results\n */\nAlgoliaSearchHelper.prototype.findAnswers = function(options) {\n  var state = this.state;\n  var derivedHelper = this.derivedHelpers[0];\n  if (!derivedHelper) {\n    return Promise.resolve([]);\n  }\n  var derivedState = derivedHelper.getModifiedState(state);\n  var data = merge(\n    {\n      attributesForPrediction: options.attributesForPrediction,\n      nbHits: options.nbHits\n    },\n    {\n      params: omit(requestBuilder._getHitsSearchParams(derivedState), [\n        'attributesToSnippet',\n        'hitsPerPage',\n        'restrictSearchableAttributes',\n        'snippetEllipsisText' // FIXME remove this line once the engine is fixed.\n      ])\n    }\n  );\n\n  var errorMessage = 'search for answers was called, but this client does not have a function client.initIndex(index).findAnswers';\n  if (typeof this.client.initIndex !== 'function') {\n    throw new Error(errorMessage);\n  }\n  var index = this.client.initIndex(derivedState.index);\n  if (typeof index.findAnswers !== 'function') {\n    throw new Error(errorMessage);\n  }\n  return index.findAnswers(derivedState.query, options.queryLanguages, data);\n};\n\n/**\n * Structure of each result when using\n * [`searchForFacetValues()`](reference.html#AlgoliaSearchHelper#searchForFacetValues)\n * @typedef FacetSearchHit\n * @type {object}\n * @property {string} value the facet value\n * @property {string} highlighted the facet value highlighted with the query string\n * @property {number} count number of occurrence of this facet value\n * @property {boolean} isRefined true if the value is already refined\n */\n\n/**\n * Structure of the data resolved by the\n * [`searchForFacetValues()`](reference.html#AlgoliaSearchHelper#searchForFacetValues)\n * promise.\n * @typedef FacetSearchResult\n * @type {object}\n * @property {FacetSearchHit} facetHits the results for this search for facet values\n * @property {number} processingTimeMS time taken by the query inside the engine\n */\n\n/**\n * Search for facet values based on an query and the name of a faceted attribute. This\n * triggers a search and will return a promise. On top of using the query, it also sends\n * the parameters from the state so that the search is narrowed down to only the possible values.\n *\n * See the description of [FacetSearchResult](reference.html#FacetSearchResult)\n * @param {string} facet the name of the faceted attribute\n * @param {string} query the string query for the search\n * @param {number} [maxFacetHits] the maximum number values returned. Should be > 0 and <= 100\n * @param {object} [userState] the set of custom parameters to use on top of the current state. Setting a property to `undefined` removes\n * it in the generated query.\n * @return {promise.<FacetSearchResult>} the results of the search\n */\nAlgoliaSearchHelper.prototype.searchForFacetValues = function(facet, query, maxFacetHits, userState) {\n  var clientHasSFFV = typeof this.client.searchForFacetValues === 'function';\n  if (\n    !clientHasSFFV &&\n    typeof this.client.initIndex !== 'function'\n  ) {\n    throw new Error(\n      'search for facet values (searchable) was called, but this client does not have a function client.searchForFacetValues or client.initIndex(index).searchForFacetValues'\n    );\n  }\n  var state = this.state.setQueryParameters(userState || {});\n  var isDisjunctive = state.isDisjunctiveFacet(facet);\n  var algoliaQuery = requestBuilder.getSearchForFacetQuery(facet, query, maxFacetHits, state);\n\n  this._currentNbQueries++;\n  var self = this;\n\n  this.emit('searchForFacetValues', {\n    state: state,\n    facet: facet,\n    query: query\n  });\n\n  var searchForFacetValuesPromise = clientHasSFFV\n    ? this.client.searchForFacetValues([{indexName: state.index, params: algoliaQuery}])\n    : this.client.initIndex(state.index).searchForFacetValues(algoliaQuery);\n\n  return searchForFacetValuesPromise.then(function addIsRefined(content) {\n    self._currentNbQueries--;\n    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n\n    content = Array.isArray(content) ? content[0] : content;\n\n    content.facetHits.forEach(function(f) {\n      f.isRefined = isDisjunctive\n        ? state.isDisjunctiveFacetRefined(facet, f.value)\n        : state.isFacetRefined(facet, f.value);\n    });\n\n    return content;\n  }, function(e) {\n    self._currentNbQueries--;\n    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n    throw e;\n  });\n};\n\n/**\n * Sets the text query used for the search.\n *\n * This method resets the current page to 0.\n * @param  {string} q the user query\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.setQuery = function(q) {\n  this._change({\n    state: this.state.resetPage().setQuery(q),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Remove all the types of refinements except tags. A string can be provided to remove\n * only the refinements of a specific attribute. For more advanced use case, you can\n * provide a function instead. This function should follow the\n * [clearCallback definition](#SearchParameters.clearCallback).\n *\n * This method resets the current page to 0.\n * @param {string} [name] optional name of the facet / attribute on which we want to remove all refinements\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n * @example\n * // Removing all the refinements\n * helper.clearRefinements().search();\n * @example\n * // Removing all the filters on a the category attribute.\n * helper.clearRefinements('category').search();\n * @example\n * // Removing only the exclude filters on the category facet.\n * helper.clearRefinements(function(value, attribute, type) {\n *   return type === 'exclude' && attribute === 'category';\n * }).search();\n */\nAlgoliaSearchHelper.prototype.clearRefinements = function(name) {\n  this._change({\n    state: this.state.resetPage().clearRefinements(name),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Remove all the tag filters.\n *\n * This method resets the current page to 0.\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.clearTags = function() {\n  this._change({\n    state: this.state.resetPage().clearTags(),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Adds a disjunctive filter to a faceted attribute with the `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value (will be converted to string)\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.addDisjunctiveFacetRefinement = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().addDisjunctiveFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#addDisjunctiveFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.addDisjunctiveRefine = function() {\n  return this.addDisjunctiveFacetRefinement.apply(this, arguments);\n};\n\n/**\n * Adds a refinement on a hierarchical facet. It will throw\n * an exception if the facet is not defined or if the facet\n * is already refined.\n *\n * This method resets the current page to 0.\n * @param {string} facet the facet name\n * @param {string} path the hierarchical facet path\n * @return {AlgoliaSearchHelper}\n * @throws Error if the facet is not defined or if the facet is refined\n * @chainable\n * @fires change\n */\nAlgoliaSearchHelper.prototype.addHierarchicalFacetRefinement = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().addHierarchicalFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Adds a an numeric filter to an attribute with the `operator` and `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} attribute the attribute on which the numeric filter applies\n * @param  {string} operator the operator of the filter\n * @param  {number} value the value of the filter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.addNumericRefinement = function(attribute, operator, value) {\n  this._change({\n    state: this.state.resetPage().addNumericRefinement(attribute, operator, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Adds a filter to a faceted attribute with the `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value (will be converted to string)\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.addFacetRefinement = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().addFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#addFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.addRefine = function() {\n  return this.addFacetRefinement.apply(this, arguments);\n};\n\n\n/**\n * Adds a an exclusion filter to a faceted attribute with the `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value (will be converted to string)\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.addFacetExclusion = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().addExcludeRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#addFacetExclusion}\n */\nAlgoliaSearchHelper.prototype.addExclude = function() {\n  return this.addFacetExclusion.apply(this, arguments);\n};\n\n/**\n * Adds a tag filter with the `tag` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param {string} tag the tag to add to the filter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.addTag = function(tag) {\n  this._change({\n    state: this.state.resetPage().addTagRefinement(tag),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Removes an numeric filter to an attribute with the `operator` and `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * Some parameters are optional, triggering different behavior:\n *  - if the value is not provided, then all the numeric value will be removed for the\n *  specified attribute/operator couple.\n *  - if the operator is not provided either, then all the numeric filter on this attribute\n *  will be removed.\n *\n * This method resets the current page to 0.\n * @param  {string} attribute the attribute on which the numeric filter applies\n * @param  {string} [operator] the operator of the filter\n * @param  {number} [value] the value of the filter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeNumericRefinement = function(attribute, operator, value) {\n  this._change({\n    state: this.state.resetPage().removeNumericRefinement(attribute, operator, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Removes a disjunctive filter to a faceted attribute with the `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * If the value is omitted, then this method will remove all the filters for the\n * attribute.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} [value] the associated value\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeDisjunctiveFacetRefinement = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().removeDisjunctiveFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#removeDisjunctiveFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.removeDisjunctiveRefine = function() {\n  return this.removeDisjunctiveFacetRefinement.apply(this, arguments);\n};\n\n/**\n * Removes the refinement set on a hierarchical facet.\n * @param {string} facet the facet name\n * @return {AlgoliaSearchHelper}\n * @throws Error if the facet is not defined or if the facet is not refined\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeHierarchicalFacetRefinement = function(facet) {\n  this._change({\n    state: this.state.resetPage().removeHierarchicalFacetRefinement(facet),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Removes a filter to a faceted attribute with the `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * If the value is omitted, then this method will remove all the filters for the\n * attribute.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} [value] the associated value\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeFacetRefinement = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().removeFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#removeFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.removeRefine = function() {\n  return this.removeFacetRefinement.apply(this, arguments);\n};\n\n/**\n * Removes an exclusion filter to a faceted attribute with the `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * If the value is omitted, then this method will remove all the filters for the\n * attribute.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} [value] the associated value\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeFacetExclusion = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().removeExcludeRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#removeFacetExclusion}\n */\nAlgoliaSearchHelper.prototype.removeExclude = function() {\n  return this.removeFacetExclusion.apply(this, arguments);\n};\n\n/**\n * Removes a tag filter with the `tag` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param {string} tag tag to remove from the filter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeTag = function(tag) {\n  this._change({\n    state: this.state.resetPage().removeTagRefinement(tag),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Adds or removes an exclusion filter to a faceted attribute with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.toggleFacetExclusion = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().toggleExcludeFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#toggleFacetExclusion}\n */\nAlgoliaSearchHelper.prototype.toggleExclude = function() {\n  return this.toggleFacetExclusion.apply(this, arguments);\n};\n\n/**\n * Adds or removes a filter to a faceted attribute with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method can be used for conjunctive, disjunctive and hierarchical filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value\n * @return {AlgoliaSearchHelper}\n * @throws Error will throw an error if the facet is not declared in the settings of the helper\n * @fires change\n * @chainable\n * @deprecated since version 2.19.0, see {@link AlgoliaSearchHelper#toggleFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.toggleRefinement = function(facet, value) {\n  return this.toggleFacetRefinement(facet, value);\n};\n\n/**\n * Adds or removes a filter to a faceted attribute with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method can be used for conjunctive, disjunctive and hierarchical filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value\n * @return {AlgoliaSearchHelper}\n * @throws Error will throw an error if the facet is not declared in the settings of the helper\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.toggleFacetRefinement = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().toggleFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#toggleFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.toggleRefine = function() {\n  return this.toggleFacetRefinement.apply(this, arguments);\n};\n\n/**\n * Adds or removes a tag filter with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method resets the current page to 0.\n * @param {string} tag tag to remove or add\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.toggleTag = function(tag) {\n  this._change({\n    state: this.state.resetPage().toggleTagRefinement(tag),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Increments the page number by one.\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n * @example\n * helper.setPage(0).nextPage().getPage();\n * // returns 1\n */\nAlgoliaSearchHelper.prototype.nextPage = function() {\n  var page = this.state.page || 0;\n  return this.setPage(page + 1);\n};\n\n/**\n * Decrements the page number by one.\n * @fires change\n * @return {AlgoliaSearchHelper}\n * @chainable\n * @example\n * helper.setPage(1).previousPage().getPage();\n * // returns 0\n */\nAlgoliaSearchHelper.prototype.previousPage = function() {\n  var page = this.state.page || 0;\n  return this.setPage(page - 1);\n};\n\n/**\n * @private\n */\nfunction setCurrentPage(page) {\n  if (page < 0) throw new Error('Page requested below 0.');\n\n  this._change({\n    state: this.state.setPage(page),\n    isPageReset: false\n  });\n\n  return this;\n}\n\n/**\n * Change the current page\n * @deprecated\n * @param  {number} page The page number\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.setCurrentPage = setCurrentPage;\n\n/**\n * Updates the current page.\n * @function\n * @param  {number} page The page number\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.setPage = setCurrentPage;\n\n/**\n * Updates the name of the index that will be targeted by the query.\n *\n * This method resets the current page to 0.\n * @param {string} name the index name\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.setIndex = function(name) {\n  this._change({\n    state: this.state.resetPage().setIndex(name),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Update a parameter of the search. This method reset the page\n *\n * The complete list of parameters is available on the\n * [Algolia website](https://www.algolia.com/doc/rest#query-an-index).\n * The most commonly used parameters have their own [shortcuts](#query-parameters-shortcuts)\n * or benefit from higher-level APIs (all the kind of filters and facets have their own API)\n *\n * This method resets the current page to 0.\n * @param {string} parameter name of the parameter to update\n * @param {any} value new value of the parameter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n * @example\n * helper.setQueryParameter('hitsPerPage', 20).search();\n */\nAlgoliaSearchHelper.prototype.setQueryParameter = function(parameter, value) {\n  this._change({\n    state: this.state.resetPage().setQueryParameter(parameter, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Set the whole state (warning: will erase previous state)\n * @param {SearchParameters} newState the whole new state\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.setState = function(newState) {\n  this._change({\n    state: SearchParameters.make(newState),\n    isPageReset: false\n  });\n\n  return this;\n};\n\n/**\n * Override the current state without triggering a change event.\n * Do not use this method unless you know what you are doing. (see the example\n * for a legit use case)\n * @param {SearchParameters} newState the whole new state\n * @return {AlgoliaSearchHelper}\n * @example\n *  helper.on('change', function(state){\n *    // In this function you might want to find a way to store the state in the url/history\n *    updateYourURL(state)\n *  })\n *  window.onpopstate = function(event){\n *    // This is naive though as you should check if the state is really defined etc.\n *    helper.overrideStateWithoutTriggeringChangeEvent(event.state).search()\n *  }\n * @chainable\n */\nAlgoliaSearchHelper.prototype.overrideStateWithoutTriggeringChangeEvent = function(newState) {\n  this.state = new SearchParameters(newState);\n  return this;\n};\n\n/**\n * Check if an attribute has any numeric, conjunctive, disjunctive or hierarchical filters.\n * @param {string} attribute the name of the attribute\n * @return {boolean} true if the attribute is filtered by at least one value\n * @example\n * // hasRefinements works with numeric, conjunctive, disjunctive and hierarchical filters\n * helper.hasRefinements('price'); // false\n * helper.addNumericRefinement('price', '>', 100);\n * helper.hasRefinements('price'); // true\n *\n * helper.hasRefinements('color'); // false\n * helper.addFacetRefinement('color', 'blue');\n * helper.hasRefinements('color'); // true\n *\n * helper.hasRefinements('material'); // false\n * helper.addDisjunctiveFacetRefinement('material', 'plastic');\n * helper.hasRefinements('material'); // true\n *\n * helper.hasRefinements('categories'); // false\n * helper.toggleFacetRefinement('categories', 'kitchen > knife');\n * helper.hasRefinements('categories'); // true\n *\n */\nAlgoliaSearchHelper.prototype.hasRefinements = function(attribute) {\n  if (objectHasKeys(this.state.getNumericRefinements(attribute))) {\n    return true;\n  } else if (this.state.isConjunctiveFacet(attribute)) {\n    return this.state.isFacetRefined(attribute);\n  } else if (this.state.isDisjunctiveFacet(attribute)) {\n    return this.state.isDisjunctiveFacetRefined(attribute);\n  } else if (this.state.isHierarchicalFacet(attribute)) {\n    return this.state.isHierarchicalFacetRefined(attribute);\n  }\n\n  // there's currently no way to know that the user did call `addNumericRefinement` at some point\n  // thus we cannot distinguish if there once was a numeric refinement that was cleared\n  // so we will return false in every other situations to be consistent\n  // while what we should do here is throw because we did not find the attribute in any type\n  // of refinement\n  return false;\n};\n\n/**\n * Check if a value is excluded for a specific faceted attribute. If the value\n * is omitted then the function checks if there is any excluding refinements.\n *\n * @param  {string}  facet name of the attribute for used for faceting\n * @param  {string}  [value] optional value. If passed will test that this value\n   * is filtering the given facet.\n * @return {boolean} true if refined\n * @example\n * helper.isExcludeRefined('color'); // false\n * helper.isExcludeRefined('color', 'blue') // false\n * helper.isExcludeRefined('color', 'red') // false\n *\n * helper.addFacetExclusion('color', 'red');\n *\n * helper.isExcludeRefined('color'); // true\n * helper.isExcludeRefined('color', 'blue') // false\n * helper.isExcludeRefined('color', 'red') // true\n */\nAlgoliaSearchHelper.prototype.isExcluded = function(facet, value) {\n  return this.state.isExcludeRefined(facet, value);\n};\n\n/**\n * @deprecated since 2.4.0, see {@link AlgoliaSearchHelper#hasRefinements}\n */\nAlgoliaSearchHelper.prototype.isDisjunctiveRefined = function(facet, value) {\n  return this.state.isDisjunctiveFacetRefined(facet, value);\n};\n\n/**\n * Check if the string is a currently filtering tag.\n * @param {string} tag tag to check\n * @return {boolean}\n */\nAlgoliaSearchHelper.prototype.hasTag = function(tag) {\n  return this.state.isTagRefined(tag);\n};\n\n/**\n * @deprecated since 2.4.0, see {@link AlgoliaSearchHelper#hasTag}\n */\nAlgoliaSearchHelper.prototype.isTagRefined = function() {\n  return this.hasTagRefinements.apply(this, arguments);\n};\n\n\n/**\n * Get the name of the currently used index.\n * @return {string}\n * @example\n * helper.setIndex('highestPrice_products').getIndex();\n * // returns 'highestPrice_products'\n */\nAlgoliaSearchHelper.prototype.getIndex = function() {\n  return this.state.index;\n};\n\nfunction getCurrentPage() {\n  return this.state.page;\n}\n\n/**\n * Get the currently selected page\n * @deprecated\n * @return {number} the current page\n */\nAlgoliaSearchHelper.prototype.getCurrentPage = getCurrentPage;\n/**\n * Get the currently selected page\n * @function\n * @return {number} the current page\n */\nAlgoliaSearchHelper.prototype.getPage = getCurrentPage;\n\n/**\n * Get all the tags currently set to filters the results.\n *\n * @return {string[]} The list of tags currently set.\n */\nAlgoliaSearchHelper.prototype.getTags = function() {\n  return this.state.tagRefinements;\n};\n\n/**\n * Get the list of refinements for a given attribute. This method works with\n * conjunctive, disjunctive, excluding and numerical filters.\n *\n * See also SearchResults#getRefinements\n *\n * @param {string} facetName attribute name used for faceting\n * @return {Array.<FacetRefinement|NumericRefinement>} All Refinement are objects that contain a value, and\n * a type. Numeric also contains an operator.\n * @example\n * helper.addNumericRefinement('price', '>', 100);\n * helper.getRefinements('price');\n * // [\n * //   {\n * //     \"value\": [\n * //       100\n * //     ],\n * //     \"operator\": \">\",\n * //     \"type\": \"numeric\"\n * //   }\n * // ]\n * @example\n * helper.addFacetRefinement('color', 'blue');\n * helper.addFacetExclusion('color', 'red');\n * helper.getRefinements('color');\n * // [\n * //   {\n * //     \"value\": \"blue\",\n * //     \"type\": \"conjunctive\"\n * //   },\n * //   {\n * //     \"value\": \"red\",\n * //     \"type\": \"exclude\"\n * //   }\n * // ]\n * @example\n * helper.addDisjunctiveFacetRefinement('material', 'plastic');\n * // [\n * //   {\n * //     \"value\": \"plastic\",\n * //     \"type\": \"disjunctive\"\n * //   }\n * // ]\n */\nAlgoliaSearchHelper.prototype.getRefinements = function(facetName) {\n  var refinements = [];\n\n  if (this.state.isConjunctiveFacet(facetName)) {\n    var conjRefinements = this.state.getConjunctiveRefinements(facetName);\n\n    conjRefinements.forEach(function(r) {\n      refinements.push({\n        value: r,\n        type: 'conjunctive'\n      });\n    });\n\n    var excludeRefinements = this.state.getExcludeRefinements(facetName);\n\n    excludeRefinements.forEach(function(r) {\n      refinements.push({\n        value: r,\n        type: 'exclude'\n      });\n    });\n  } else if (this.state.isDisjunctiveFacet(facetName)) {\n    var disjRefinements = this.state.getDisjunctiveRefinements(facetName);\n\n    disjRefinements.forEach(function(r) {\n      refinements.push({\n        value: r,\n        type: 'disjunctive'\n      });\n    });\n  }\n\n  var numericRefinements = this.state.getNumericRefinements(facetName);\n\n  Object.keys(numericRefinements).forEach(function(operator) {\n    var value = numericRefinements[operator];\n\n    refinements.push({\n      value: value,\n      operator: operator,\n      type: 'numeric'\n    });\n  });\n\n  return refinements;\n};\n\n/**\n * Return the current refinement for the (attribute, operator)\n * @param {string} attribute attribute in the record\n * @param {string} operator operator applied on the refined values\n * @return {Array.<number|number[]>} refined values\n */\nAlgoliaSearchHelper.prototype.getNumericRefinement = function(attribute, operator) {\n  return this.state.getNumericRefinement(attribute, operator);\n};\n\n/**\n * Get the current breadcrumb for a hierarchical facet, as an array\n * @param  {string} facetName Hierarchical facet name\n * @return {array.<string>} the path as an array of string\n */\nAlgoliaSearchHelper.prototype.getHierarchicalFacetBreadcrumb = function(facetName) {\n  return this.state.getHierarchicalFacetBreadcrumb(facetName);\n};\n\n// /////////// PRIVATE\n\n/**\n * Perform the underlying queries\n * @private\n * @return {undefined}\n * @fires search\n * @fires result\n * @fires error\n */\nAlgoliaSearchHelper.prototype._search = function(options) {\n  var state = this.state;\n  var states = [];\n  var mainQueries = [];\n\n  if (!options.onlyWithDerivedHelpers) {\n    mainQueries = requestBuilder._getQueries(state.index, state);\n\n    states.push({\n      state: state,\n      queriesCount: mainQueries.length,\n      helper: this\n    });\n\n    this.emit('search', {\n      state: state,\n      results: this.lastResults\n    });\n  }\n\n  var derivedQueries = this.derivedHelpers.map(function(derivedHelper) {\n    var derivedState = derivedHelper.getModifiedState(state);\n    var derivedStateQueries = requestBuilder._getQueries(derivedState.index, derivedState);\n\n    states.push({\n      state: derivedState,\n      queriesCount: derivedStateQueries.length,\n      helper: derivedHelper\n    });\n\n    derivedHelper.emit('search', {\n      state: derivedState,\n      results: derivedHelper.lastResults\n    });\n\n    return derivedStateQueries;\n  });\n\n  var queries = Array.prototype.concat.apply(mainQueries, derivedQueries);\n  var queryId = this._queryId++;\n\n  this._currentNbQueries++;\n\n  try {\n    this.client.search(queries)\n      .then(this._dispatchAlgoliaResponse.bind(this, states, queryId))\n      .catch(this._dispatchAlgoliaError.bind(this, queryId));\n  } catch (error) {\n    // If we reach this part, we're in an internal error state\n    this.emit('error', {\n      error: error\n    });\n  }\n};\n\n/**\n * Transform the responses as sent by the server and transform them into a user\n * usable object that merge the results of all the batch requests. It will dispatch\n * over the different helper + derived helpers (when there are some).\n * @private\n * @param {array.<{SearchParameters, AlgoliaQueries, AlgoliaSearchHelper}>}\n *  state state used for to generate the request\n * @param {number} queryId id of the current request\n * @param {object} content content of the response\n * @return {undefined}\n */\nAlgoliaSearchHelper.prototype._dispatchAlgoliaResponse = function(states, queryId, content) {\n  // FIXME remove the number of outdated queries discarded instead of just one\n\n  if (queryId < this._lastQueryIdReceived) {\n    // Outdated answer\n    return;\n  }\n\n  this._currentNbQueries -= (queryId - this._lastQueryIdReceived);\n  this._lastQueryIdReceived = queryId;\n\n  if (this._currentNbQueries === 0) this.emit('searchQueueEmpty');\n\n  var results = content.results.slice();\n\n  states.forEach(function(s) {\n    var state = s.state;\n    var queriesCount = s.queriesCount;\n    var helper = s.helper;\n    var specificResults = results.splice(0, queriesCount);\n\n    var formattedResponse = helper.lastResults = new SearchResults(state, specificResults);\n\n    helper.emit('result', {\n      results: formattedResponse,\n      state: state\n    });\n  });\n};\n\nAlgoliaSearchHelper.prototype._dispatchAlgoliaError = function(queryId, error) {\n  if (queryId < this._lastQueryIdReceived) {\n    // Outdated answer\n    return;\n  }\n\n  this._currentNbQueries -= queryId - this._lastQueryIdReceived;\n  this._lastQueryIdReceived = queryId;\n\n  this.emit('error', {\n    error: error\n  });\n\n  if (this._currentNbQueries === 0) this.emit('searchQueueEmpty');\n};\n\nAlgoliaSearchHelper.prototype.containsRefinement = function(query, facetFilters, numericFilters, tagFilters) {\n  return query ||\n    facetFilters.length !== 0 ||\n    numericFilters.length !== 0 ||\n    tagFilters.length !== 0;\n};\n\n/**\n * Test if there are some disjunctive refinements on the facet\n * @private\n * @param {string} facet the attribute to test\n * @return {boolean}\n */\nAlgoliaSearchHelper.prototype._hasDisjunctiveRefinements = function(facet) {\n  return this.state.disjunctiveRefinements[facet] &&\n    this.state.disjunctiveRefinements[facet].length > 0;\n};\n\nAlgoliaSearchHelper.prototype._change = function(event) {\n  var state = event.state;\n  var isPageReset = event.isPageReset;\n\n  if (state !== this.state) {\n    this.state = state;\n\n    this.emit('change', {\n      state: this.state,\n      results: this.lastResults,\n      isPageReset: isPageReset\n    });\n  }\n};\n\n/**\n * Clears the cache of the underlying Algolia client.\n * @return {AlgoliaSearchHelper}\n */\nAlgoliaSearchHelper.prototype.clearCache = function() {\n  this.client.clearCache && this.client.clearCache();\n  return this;\n};\n\n/**\n * Updates the internal client instance. If the reference of the clients\n * are equal then no update is actually done.\n * @param  {AlgoliaSearch} newClient an AlgoliaSearch client\n * @return {AlgoliaSearchHelper}\n */\nAlgoliaSearchHelper.prototype.setClient = function(newClient) {\n  if (this.client === newClient) return this;\n\n  if (typeof newClient.addAlgoliaAgent === 'function') {\n    newClient.addAlgoliaAgent('JS Helper (' + version + ')');\n  }\n  this.client = newClient;\n\n  return this;\n};\n\n/**\n * Gets the instance of the currently used client.\n * @return {AlgoliaSearch}\n */\nAlgoliaSearchHelper.prototype.getClient = function() {\n  return this.client;\n};\n\n/**\n * Creates an derived instance of the Helper. A derived helper\n * is a way to request other indices synchronised with the lifecycle\n * of the main Helper. This mechanism uses the multiqueries feature\n * of Algolia to aggregate all the requests in a single network call.\n *\n * This method takes a function that is used to create a new SearchParameter\n * that will be used to create requests to Algolia. Those new requests\n * are created just before the `search` event. The signature of the function\n * is `SearchParameters -> SearchParameters`.\n *\n * This method returns a new DerivedHelper which is an EventEmitter\n * that fires the same `search`, `result` and `error` events. Those\n * events, however, will receive data specific to this DerivedHelper\n * and the SearchParameters that is returned by the call of the\n * parameter function.\n * @param {function} fn SearchParameters -> SearchParameters\n * @return {DerivedHelper}\n */\nAlgoliaSearchHelper.prototype.derive = function(fn) {\n  var derivedHelper = new DerivedHelper(this, fn);\n  this.derivedHelpers.push(derivedHelper);\n  return derivedHelper;\n};\n\n/**\n * This method detaches a derived Helper from the main one. Prefer using the one from the\n * derived helper itself, to remove the event listeners too.\n * @private\n * @return {undefined}\n * @throws Error\n */\nAlgoliaSearchHelper.prototype.detachDerivedHelper = function(derivedHelper) {\n  var pos = this.derivedHelpers.indexOf(derivedHelper);\n  if (pos === -1) throw new Error('Derived helper already detached');\n  this.derivedHelpers.splice(pos, 1);\n};\n\n/**\n * This method returns true if there is currently at least one on-going search.\n * @return {boolean} true if there is a search pending\n */\nAlgoliaSearchHelper.prototype.hasPendingRequests = function() {\n  return this._currentNbQueries > 0;\n};\n\n/**\n * @typedef AlgoliaSearchHelper.NumericRefinement\n * @type {object}\n * @property {number[]} value the numbers that are used for filtering this attribute with\n * the operator specified.\n * @property {string} operator the faceting data: value, number of entries\n * @property {string} type will be 'numeric'\n */\n\n/**\n * @typedef AlgoliaSearchHelper.FacetRefinement\n * @type {object}\n * @property {string} value the string use to filter the attribute\n * @property {string} type the type of filter: 'conjunctive', 'disjunctive', 'exclude'\n */\n\nmodule.exports = AlgoliaSearchHelper;\n","'use strict';\n\nfunction intersection(arr1, arr2) {\n  return arr1.filter(function(value, index) {\n    return (\n      arr2.indexOf(value) > -1 &&\n      arr1.indexOf(value) === index /* skips duplicates */\n    );\n  });\n}\n\nmodule.exports = intersection;\n","'use strict';\n\nfunction valToNumber(v) {\n  if (typeof v === 'number') {\n    return v;\n  } else if (typeof v === 'string') {\n    return parseFloat(v);\n  } else if (Array.isArray(v)) {\n    return v.map(valToNumber);\n  }\n\n  throw new Error('The value should be a number, a parsable string or an array of those.');\n}\n\nmodule.exports = valToNumber;\n","'use strict';\n\nmodule.exports = function isValidUserToken(userToken) {\n  if (userToken === null) {\n    return false;\n  }\n  return /^[a-zA-Z0-9_-]{1,64}$/.test(userToken);\n};\n","'use strict';\n\n/**\n * Functions to manipulate refinement lists\n *\n * The RefinementList is not formally defined through a prototype but is based\n * on a specific structure.\n *\n * @module SearchParameters.refinementList\n *\n * @typedef {string[]} SearchParameters.refinementList.Refinements\n * @typedef {Object.<string, SearchParameters.refinementList.Refinements>} SearchParameters.refinementList.RefinementList\n */\n\nvar defaultsPure = require('../functions/defaultsPure');\nvar omit = require('../functions/omit');\nvar objectHasKeys = require('../functions/objectHasKeys');\n\nvar lib = {\n  /**\n   * Adds a refinement to a RefinementList\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} attribute the attribute to refine\n   * @param {string} value the value of the refinement, if the value is not a string it will be converted\n   * @return {RefinementList} a new and updated refinement list\n   */\n  addRefinement: function addRefinement(refinementList, attribute, value) {\n    if (lib.isRefined(refinementList, attribute, value)) {\n      return refinementList;\n    }\n\n    var valueAsString = '' + value;\n\n    var facetRefinement = !refinementList[attribute] ?\n      [valueAsString] :\n      refinementList[attribute].concat(valueAsString);\n\n    var mod = {};\n\n    mod[attribute] = facetRefinement;\n\n    return defaultsPure({}, mod, refinementList);\n  },\n  /**\n   * Removes refinement(s) for an attribute:\n   *  - if the value is specified removes the refinement for the value on the attribute\n   *  - if no value is specified removes all the refinements for this attribute\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} attribute the attribute to refine\n   * @param {string} [value] the value of the refinement\n   * @return {RefinementList} a new and updated refinement lst\n   */\n  removeRefinement: function removeRefinement(refinementList, attribute, value) {\n    if (value === undefined) {\n      // we use the \"filter\" form of clearRefinement, since it leaves empty values as-is\n      // the form with a string will remove the attribute completely\n      return lib.clearRefinement(refinementList, function(v, f) {\n        return attribute === f;\n      });\n    }\n\n    var valueAsString = '' + value;\n\n    return lib.clearRefinement(refinementList, function(v, f) {\n      return attribute === f && valueAsString === v;\n    });\n  },\n  /**\n   * Toggles the refinement value for an attribute.\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} attribute the attribute to refine\n   * @param {string} value the value of the refinement\n   * @return {RefinementList} a new and updated list\n   */\n  toggleRefinement: function toggleRefinement(refinementList, attribute, value) {\n    if (value === undefined) throw new Error('toggleRefinement should be used with a value');\n\n    if (lib.isRefined(refinementList, attribute, value)) {\n      return lib.removeRefinement(refinementList, attribute, value);\n    }\n\n    return lib.addRefinement(refinementList, attribute, value);\n  },\n  /**\n   * Clear all or parts of a RefinementList. Depending on the arguments, three\n   * kinds of behavior can happen:\n   *  - if no attribute is provided: clears the whole list\n   *  - if an attribute is provided as a string: clears the list for the specific attribute\n   *  - if an attribute is provided as a function: discards the elements for which the function returns true\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} [attribute] the attribute or function to discard\n   * @param {string} [refinementType] optional parameter to give more context to the attribute function\n   * @return {RefinementList} a new and updated refinement list\n   */\n  clearRefinement: function clearRefinement(refinementList, attribute, refinementType) {\n    if (attribute === undefined) {\n      if (!objectHasKeys(refinementList)) {\n        return refinementList;\n      }\n      return {};\n    } else if (typeof attribute === 'string') {\n      return omit(refinementList, [attribute]);\n    } else if (typeof attribute === 'function') {\n      var hasChanged = false;\n\n      var newRefinementList = Object.keys(refinementList).reduce(function(memo, key) {\n        var values = refinementList[key] || [];\n        var facetList = values.filter(function(value) {\n          return !attribute(value, key, refinementType);\n        });\n\n        if (facetList.length !== values.length) {\n          hasChanged = true;\n        }\n        memo[key] = facetList;\n\n        return memo;\n      }, {});\n\n      if (hasChanged) return newRefinementList;\n      return refinementList;\n    }\n  },\n  /**\n   * Test if the refinement value is used for the attribute. If no refinement value\n   * is provided, test if the refinementList contains any refinement for the\n   * given attribute.\n   * @param {RefinementList} refinementList the list of refinement\n   * @param {string} attribute name of the attribute\n   * @param {string} [refinementValue] value of the filter/refinement\n   * @return {boolean}\n   */\n  isRefined: function isRefined(refinementList, attribute, refinementValue) {\n    var containsRefinements = !!refinementList[attribute] &&\n      refinementList[attribute].length > 0;\n\n    if (refinementValue === undefined || !containsRefinements) {\n      return containsRefinements;\n    }\n\n    var refinementValueAsString = '' + refinementValue;\n\n    return refinementList[attribute].indexOf(refinementValueAsString) !== -1;\n  }\n};\n\nmodule.exports = lib;\n","'use strict';\n\nmodule.exports = function compact(array) {\n  if (!Array.isArray(array)) {\n    return [];\n  }\n\n  return array.filter(Boolean);\n};\n","'use strict';\n\n// @MAJOR can be replaced by native Array#findIndex when we change support\nmodule.exports = function find(array, comparator) {\n  if (!Array.isArray(array)) {\n    return -1;\n  }\n\n  for (var i = 0; i < array.length; i++) {\n    if (comparator(array[i])) {\n      return i;\n    }\n  }\n  return -1;\n};\n","'use strict';\n\nmodule.exports = generateTrees;\n\nvar orderBy = require('../functions/orderBy');\nvar find = require('../functions/find');\nvar prepareHierarchicalFacetSortBy = require('../functions/formatSort');\n\nfunction generateTrees(state) {\n  return function generate(hierarchicalFacetResult, hierarchicalFacetIndex) {\n    var hierarchicalFacet = state.hierarchicalFacets[hierarchicalFacetIndex];\n    var hierarchicalFacetRefinement =\n      (state.hierarchicalFacetsRefinements[hierarchicalFacet.name] &&\n        state.hierarchicalFacetsRefinements[hierarchicalFacet.name][0]) ||\n      '';\n    var hierarchicalSeparator = state._getHierarchicalFacetSeparator(\n      hierarchicalFacet\n    );\n    var hierarchicalRootPath = state._getHierarchicalRootPath(\n      hierarchicalFacet\n    );\n    var hierarchicalShowParentLevel = state._getHierarchicalShowParentLevel(\n      hierarchicalFacet\n    );\n    var sortBy = prepareHierarchicalFacetSortBy(\n      state._getHierarchicalFacetSortBy(hierarchicalFacet)\n    );\n\n    var rootExhaustive = hierarchicalFacetResult.every(function(facetResult) {\n      return facetResult.exhaustive;\n    });\n\n    var generateTreeFn = generateHierarchicalTree(\n      sortBy,\n      hierarchicalSeparator,\n      hierarchicalRootPath,\n      hierarchicalShowParentLevel,\n      hierarchicalFacetRefinement\n    );\n\n    var results = hierarchicalFacetResult;\n\n    if (hierarchicalRootPath) {\n      results = hierarchicalFacetResult.slice(\n        hierarchicalRootPath.split(hierarchicalSeparator).length\n      );\n    }\n\n    return results.reduce(generateTreeFn, {\n      name: state.hierarchicalFacets[hierarchicalFacetIndex].name,\n      count: null, // root level, no count\n      isRefined: true, // root level, always refined\n      path: null, // root level, no path\n      exhaustive: rootExhaustive,\n      data: null\n    });\n  };\n}\n\nfunction generateHierarchicalTree(\n  sortBy,\n  hierarchicalSeparator,\n  hierarchicalRootPath,\n  hierarchicalShowParentLevel,\n  currentRefinement\n) {\n  return function generateTree(\n    hierarchicalTree,\n    hierarchicalFacetResult,\n    currentHierarchicalLevel\n  ) {\n    var parent = hierarchicalTree;\n\n    if (currentHierarchicalLevel > 0) {\n      var level = 0;\n\n      parent = hierarchicalTree;\n\n      while (level < currentHierarchicalLevel) {\n        /**\n         * @type {object[]]} hierarchical data\n         */\n        var data = parent && Array.isArray(parent.data) ? parent.data : [];\n        parent = find(data, function(subtree) {\n          return subtree.isRefined;\n        });\n        level++;\n      }\n    }\n\n    // we found a refined parent, let's add current level data under it\n    if (parent) {\n      // filter values in case an object has multiple categories:\n      //   {\n      //     categories: {\n      //       level0: ['beers', 'bières'],\n      //       level1: ['beers > IPA', 'bières > Belges']\n      //     }\n      //   }\n      //\n      // If parent refinement is `beers`, then we do not want to have `bières > Belges`\n      // showing up\n\n      var picked = Object.keys(hierarchicalFacetResult.data)\n        .map(function(facetValue) {\n          return [facetValue, hierarchicalFacetResult.data[facetValue]];\n        })\n        .filter(function(tuple) {\n          var facetValue = tuple[0];\n          return onlyMatchingTree(\n            facetValue,\n            parent.path || hierarchicalRootPath,\n            currentRefinement,\n            hierarchicalSeparator,\n            hierarchicalRootPath,\n            hierarchicalShowParentLevel\n          );\n        });\n\n      parent.data = orderBy(\n        picked.map(function(tuple) {\n          var facetValue = tuple[0];\n          var facetCount = tuple[1];\n\n          return format(\n            facetCount,\n            facetValue,\n            hierarchicalSeparator,\n            currentRefinement,\n            hierarchicalFacetResult.exhaustive\n          );\n        }),\n        sortBy[0],\n        sortBy[1]\n      );\n    }\n\n    return hierarchicalTree;\n  };\n}\n\nfunction onlyMatchingTree(\n  facetValue,\n  parentPath,\n  currentRefinement,\n  hierarchicalSeparator,\n  hierarchicalRootPath,\n  hierarchicalShowParentLevel\n) {\n  // we want the facetValue is a child of hierarchicalRootPath\n  if (\n    hierarchicalRootPath &&\n    (facetValue.indexOf(hierarchicalRootPath) !== 0 ||\n      hierarchicalRootPath === facetValue)\n  ) {\n    return false;\n  }\n\n  // we always want root levels (only when there is no prefix path)\n  return (\n    (!hierarchicalRootPath &&\n      facetValue.indexOf(hierarchicalSeparator) === -1) ||\n    // if there is a rootPath, being root level mean 1 level under rootPath\n    (hierarchicalRootPath &&\n      facetValue.split(hierarchicalSeparator).length -\n        hierarchicalRootPath.split(hierarchicalSeparator).length ===\n        1) ||\n    // if current refinement is a root level and current facetValue is a root level,\n    // keep the facetValue\n    (facetValue.indexOf(hierarchicalSeparator) === -1 &&\n      currentRefinement.indexOf(hierarchicalSeparator) === -1) ||\n    // currentRefinement is a child of the facet value\n    currentRefinement.indexOf(facetValue) === 0 ||\n    // facetValue is a child of the current parent, add it\n    (facetValue.indexOf(parentPath + hierarchicalSeparator) === 0 &&\n      (hierarchicalShowParentLevel ||\n        facetValue.indexOf(currentRefinement) === 0))\n  );\n}\n\nfunction format(\n  facetCount,\n  facetValue,\n  hierarchicalSeparator,\n  currentRefinement,\n  exhaustive\n) {\n  var parts = facetValue.split(hierarchicalSeparator);\n  return {\n    name: parts[parts.length - 1].trim(),\n    path: facetValue,\n    count: facetCount,\n    isRefined:\n      currentRefinement === facetValue ||\n      currentRefinement.indexOf(facetValue + hierarchicalSeparator) === 0,\n    exhaustive: exhaustive,\n    data: null\n  };\n}\n","'use strict';\n\nvar events = require('events');\nvar inherits = require('../functions/inherits');\n\n/**\n * A DerivedHelper is a way to create sub requests to\n * Algolia from a main helper.\n * @class\n * @classdesc The DerivedHelper provides an event based interface for search callbacks:\n *  - search: when a search is triggered using the `search()` method.\n *  - result: when the response is retrieved from Algolia and is processed.\n *    This event contains a {@link SearchResults} object and the\n *    {@link SearchParameters} corresponding to this answer.\n */\nfunction DerivedHelper(mainHelper, fn) {\n  this.main = mainHelper;\n  this.fn = fn;\n  this.lastResults = null;\n}\n\ninherits(DerivedHelper, events.EventEmitter);\n\n/**\n * Detach this helper from the main helper\n * @return {undefined}\n * @throws Error if the derived helper is already detached\n */\nDerivedHelper.prototype.detach = function() {\n  this.removeAllListeners();\n  this.main.detachDerivedHelper(this);\n};\n\nDerivedHelper.prototype.getModifiedState = function(parameters) {\n  return this.fn(parameters);\n};\n\nmodule.exports = DerivedHelper;\n","'use strict';\n\nvar merge = require('./functions/merge');\n\nvar requestBuilder = {\n  /**\n   * Get all the queries to send to the client, those queries can used directly\n   * with the Algolia client.\n   * @private\n   * @return {object[]} The queries\n   */\n  _getQueries: function getQueries(index, state) {\n    var queries = [];\n\n    // One query for the hits\n    queries.push({\n      indexName: index,\n      params: requestBuilder._getHitsSearchParams(state)\n    });\n\n    // One for each disjunctive facets\n    state.getRefinedDisjunctiveFacets().forEach(function(refinedFacet) {\n      queries.push({\n        indexName: index,\n        params: requestBuilder._getDisjunctiveFacetSearchParams(state, refinedFacet)\n      });\n    });\n\n    // maybe more to get the root level of hierarchical facets when activated\n    state.getRefinedHierarchicalFacets().forEach(function(refinedFacet) {\n      var hierarchicalFacet = state.getHierarchicalFacetByName(refinedFacet);\n\n      var currentRefinement = state.getHierarchicalRefinement(refinedFacet);\n      // if we are deeper than level 0 (starting from `beer > IPA`)\n      // we want to get the root values\n      var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n      if (currentRefinement.length > 0 && currentRefinement[0].split(separator).length > 1) {\n        queries.push({\n          indexName: index,\n          params: requestBuilder._getDisjunctiveFacetSearchParams(state, refinedFacet, true)\n        });\n      }\n    });\n\n    return queries;\n  },\n\n  /**\n   * Build search parameters used to fetch hits\n   * @private\n   * @return {object.<string, any>}\n   */\n  _getHitsSearchParams: function(state) {\n    var facets = state.facets\n      .concat(state.disjunctiveFacets)\n      .concat(requestBuilder._getHitsHierarchicalFacetsAttributes(state));\n\n\n    var facetFilters = requestBuilder._getFacetFilters(state);\n    var numericFilters = requestBuilder._getNumericFilters(state);\n    var tagFilters = requestBuilder._getTagFilters(state);\n    var additionalParams = {\n      facets: facets,\n      tagFilters: tagFilters\n    };\n\n    if (facetFilters.length > 0) {\n      additionalParams.facetFilters = facetFilters;\n    }\n\n    if (numericFilters.length > 0) {\n      additionalParams.numericFilters = numericFilters;\n    }\n\n    return merge({}, state.getQueryParams(), additionalParams);\n  },\n\n  /**\n   * Build search parameters used to fetch a disjunctive facet\n   * @private\n   * @param  {string} facet the associated facet name\n   * @param  {boolean} hierarchicalRootLevel ?? FIXME\n   * @return {object}\n   */\n  _getDisjunctiveFacetSearchParams: function(state, facet, hierarchicalRootLevel) {\n    var facetFilters = requestBuilder._getFacetFilters(state, facet, hierarchicalRootLevel);\n    var numericFilters = requestBuilder._getNumericFilters(state, facet);\n    var tagFilters = requestBuilder._getTagFilters(state);\n    var additionalParams = {\n      hitsPerPage: 1,\n      page: 0,\n      attributesToRetrieve: [],\n      attributesToHighlight: [],\n      attributesToSnippet: [],\n      tagFilters: tagFilters,\n      analytics: false,\n      clickAnalytics: false\n    };\n\n    var hierarchicalFacet = state.getHierarchicalFacetByName(facet);\n\n    if (hierarchicalFacet) {\n      additionalParams.facets = requestBuilder._getDisjunctiveHierarchicalFacetAttribute(\n        state,\n        hierarchicalFacet,\n        hierarchicalRootLevel\n      );\n    } else {\n      additionalParams.facets = facet;\n    }\n\n    if (numericFilters.length > 0) {\n      additionalParams.numericFilters = numericFilters;\n    }\n\n    if (facetFilters.length > 0) {\n      additionalParams.facetFilters = facetFilters;\n    }\n\n    return merge({}, state.getQueryParams(), additionalParams);\n  },\n\n  /**\n   * Return the numeric filters in an algolia request fashion\n   * @private\n   * @param {string} [facetName] the name of the attribute for which the filters should be excluded\n   * @return {string[]} the numeric filters in the algolia format\n   */\n  _getNumericFilters: function(state, facetName) {\n    if (state.numericFilters) {\n      return state.numericFilters;\n    }\n\n    var numericFilters = [];\n\n    Object.keys(state.numericRefinements).forEach(function(attribute) {\n      var operators = state.numericRefinements[attribute] || {};\n      Object.keys(operators).forEach(function(operator) {\n        var values = operators[operator] || [];\n        if (facetName !== attribute) {\n          values.forEach(function(value) {\n            if (Array.isArray(value)) {\n              var vs = value.map(function(v) {\n                return attribute + operator + v;\n              });\n              numericFilters.push(vs);\n            } else {\n              numericFilters.push(attribute + operator + value);\n            }\n          });\n        }\n      });\n    });\n\n    return numericFilters;\n  },\n\n  /**\n   * Return the tags filters depending\n   * @private\n   * @return {string}\n   */\n  _getTagFilters: function(state) {\n    if (state.tagFilters) {\n      return state.tagFilters;\n    }\n\n    return state.tagRefinements.join(',');\n  },\n\n\n  /**\n   * Build facetFilters parameter based on current refinements. The array returned\n   * contains strings representing the facet filters in the algolia format.\n   * @private\n   * @param  {string} [facet] if set, the current disjunctive facet\n   * @return {array.<string>}\n   */\n  _getFacetFilters: function(state, facet, hierarchicalRootLevel) {\n    var facetFilters = [];\n\n    var facetsRefinements = state.facetsRefinements || {};\n    Object.keys(facetsRefinements).forEach(function(facetName) {\n      var facetValues = facetsRefinements[facetName] || [];\n      facetValues.forEach(function(facetValue) {\n        facetFilters.push(facetName + ':' + facetValue);\n      });\n    });\n\n    var facetsExcludes = state.facetsExcludes || {};\n    Object.keys(facetsExcludes).forEach(function(facetName) {\n      var facetValues = facetsExcludes[facetName] || [];\n      facetValues.forEach(function(facetValue) {\n        facetFilters.push(facetName + ':-' + facetValue);\n      });\n    });\n\n    var disjunctiveFacetsRefinements = state.disjunctiveFacetsRefinements || {};\n    Object.keys(disjunctiveFacetsRefinements).forEach(function(facetName) {\n      var facetValues = disjunctiveFacetsRefinements[facetName] || [];\n      if (facetName === facet || !facetValues || facetValues.length === 0) {\n        return;\n      }\n      var orFilters = [];\n\n      facetValues.forEach(function(facetValue) {\n        orFilters.push(facetName + ':' + facetValue);\n      });\n\n      facetFilters.push(orFilters);\n    });\n\n    var hierarchicalFacetsRefinements = state.hierarchicalFacetsRefinements || {};\n    Object.keys(hierarchicalFacetsRefinements).forEach(function(facetName) {\n      var facetValues = hierarchicalFacetsRefinements[facetName] || [];\n      var facetValue = facetValues[0];\n\n      if (facetValue === undefined) {\n        return;\n      }\n\n      var hierarchicalFacet = state.getHierarchicalFacetByName(facetName);\n      var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n      var rootPath = state._getHierarchicalRootPath(hierarchicalFacet);\n      var attributeToRefine;\n      var attributesIndex;\n\n      // we ask for parent facet values only when the `facet` is the current hierarchical facet\n      if (facet === facetName) {\n        // if we are at the root level already, no need to ask for facet values, we get them from\n        // the hits query\n        if (facetValue.indexOf(separator) === -1 || (!rootPath && hierarchicalRootLevel === true) ||\n          (rootPath && rootPath.split(separator).length === facetValue.split(separator).length)) {\n          return;\n        }\n\n        if (!rootPath) {\n          attributesIndex = facetValue.split(separator).length - 2;\n          facetValue = facetValue.slice(0, facetValue.lastIndexOf(separator));\n        } else {\n          attributesIndex = rootPath.split(separator).length - 1;\n          facetValue = rootPath;\n        }\n\n        attributeToRefine = hierarchicalFacet.attributes[attributesIndex];\n      } else {\n        attributesIndex = facetValue.split(separator).length - 1;\n\n        attributeToRefine = hierarchicalFacet.attributes[attributesIndex];\n      }\n\n      if (attributeToRefine) {\n        facetFilters.push([attributeToRefine + ':' + facetValue]);\n      }\n    });\n\n    return facetFilters;\n  },\n\n  _getHitsHierarchicalFacetsAttributes: function(state) {\n    var out = [];\n\n    return state.hierarchicalFacets.reduce(\n      // ask for as much levels as there's hierarchical refinements\n      function getHitsAttributesForHierarchicalFacet(allAttributes, hierarchicalFacet) {\n        var hierarchicalRefinement = state.getHierarchicalRefinement(hierarchicalFacet.name)[0];\n\n        // if no refinement, ask for root level\n        if (!hierarchicalRefinement) {\n          allAttributes.push(hierarchicalFacet.attributes[0]);\n          return allAttributes;\n        }\n\n        var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n        var level = hierarchicalRefinement.split(separator).length;\n        var newAttributes = hierarchicalFacet.attributes.slice(0, level + 1);\n\n        return allAttributes.concat(newAttributes);\n      }, out);\n  },\n\n  _getDisjunctiveHierarchicalFacetAttribute: function(state, hierarchicalFacet, rootLevel) {\n    var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n    if (rootLevel === true) {\n      var rootPath = state._getHierarchicalRootPath(hierarchicalFacet);\n      var attributeIndex = 0;\n\n      if (rootPath) {\n        attributeIndex = rootPath.split(separator).length;\n      }\n      return [hierarchicalFacet.attributes[attributeIndex]];\n    }\n\n    var hierarchicalRefinement = state.getHierarchicalRefinement(hierarchicalFacet.name)[0] || '';\n    // if refinement is 'beers > IPA > Flying dog',\n    // then we want `facets: ['beers > IPA']` as disjunctive facet (parent level values)\n\n    var parentLevel = hierarchicalRefinement.split(separator).length - 1;\n    return hierarchicalFacet.attributes.slice(0, parentLevel + 1);\n  },\n\n  getSearchForFacetQuery: function(facetName, query, maxFacetHits, state) {\n    var stateForSearchForFacetValues = state.isDisjunctiveFacet(facetName) ?\n      state.clearRefinements(facetName) :\n      state;\n    var searchForFacetSearchParameters = {\n      facetQuery: query,\n      facetName: facetName\n    };\n    if (typeof maxFacetHits === 'number') {\n      searchForFacetSearchParameters.maxFacetHits = maxFacetHits;\n    }\n    return merge(\n      {},\n      requestBuilder._getHitsSearchParams(stateForSearchForFacetValues),\n      searchForFacetSearchParameters\n    );\n  }\n};\n\nmodule.exports = requestBuilder;\n","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport PropTypes from 'prop-types';\nimport createConnector from '../core/createConnector';\nimport { cleanUpValue, refineValue, getCurrentRefinementValue, getIndexId } from '../core/indexUtils';\n\nfunction getId() {\n  return 'query';\n}\n\nfunction getCurrentRefinement(props, searchState, context) {\n  var id = getId(props);\n  var currentRefinement = getCurrentRefinementValue(props, searchState, context, id, '');\n\n  if (currentRefinement) {\n    return currentRefinement;\n  }\n\n  return '';\n}\n\nfunction _refine(props, searchState, nextRefinement, context) {\n  var id = getId();\n\n  var nextValue = _defineProperty({}, id, nextRefinement);\n\n  var resetPage = true;\n  return refineValue(searchState, nextValue, context, resetPage);\n}\n\nfunction _cleanUp(props, searchState, context) {\n  return cleanUpValue(searchState, context, getId());\n}\n/**\n * connectSearchBox connector provides the logic to build a widget that will\n * let the user search for a query\n * @name connectSearchBox\n * @kind connector\n * @propType {string} [defaultRefinement] - Provide a default value for the query\n * @providedPropType {function} refine - a function to change the current query\n * @providedPropType {string} currentRefinement - the current query used\n * @providedPropType {boolean} isSearchStalled - a flag that indicates if InstantSearch has detected that searches are stalled\n */\n\n\nexport default createConnector({\n  displayName: 'AlgoliaSearchBox',\n  propTypes: {\n    defaultRefinement: PropTypes.string\n  },\n  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {\n    return {\n      currentRefinement: getCurrentRefinement(props, searchState, {\n        ais: props.contextValue,\n        multiIndexContext: props.indexContextValue\n      }),\n      isSearchStalled: searchResults.isSearchStalled\n    };\n  },\n  refine: function refine(props, searchState, nextRefinement) {\n    return _refine(props, searchState, nextRefinement, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n  },\n  cleanUp: function cleanUp(props, searchState) {\n    return _cleanUp(props, searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n  },\n  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {\n    return searchParameters.setQuery(getCurrentRefinement(props, searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    }));\n  },\n  getMetadata: function getMetadata(props, searchState) {\n    var id = getId(props);\n    var currentRefinement = getCurrentRefinement(props, searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n    return {\n      id: id,\n      index: getIndexId({\n        ais: props.contextValue,\n        multiIndexContext: props.indexContextValue\n      }),\n      items: currentRefinement === null ? [] : [{\n        label: \"\".concat(id, \": \").concat(currentRefinement),\n        value: function value(nextState) {\n          return _refine(props, nextState, '', {\n            ais: props.contextValue,\n            multiIndexContext: props.indexContextValue\n          });\n        },\n        currentRefinement: currentRefinement\n      }]\n    };\n  }\n});","import createConnector from '../core/createConnector';\nimport { getResults } from '../core/indexUtils';\nimport { addAbsolutePositions, addQueryID } from '../core/utils';\n/**\n * connectHits connector provides the logic to create connected\n * components that will render the results retrieved from\n * Algolia.\n *\n * To configure the number of hits retrieved, use [HitsPerPage widget](widgets/HitsPerPage.html),\n * [connectHitsPerPage connector](connectors/connectHitsPerPage.html) or pass the hitsPerPage\n * prop to a [Configure](guide/Search_parameters.html) widget.\n *\n * **Warning:** you will need to use the **objectID** property available on every hit as a key\n * when iterating over them. This will ensure you have the best possible UI experience\n * especially on slow networks.\n * @name connectHits\n * @kind connector\n * @providedPropType {array.<object>} hits - the records that matched the search state\n * @example\n * import React from 'react';\n * import algoliasearch from 'algoliasearch/lite';\n * import { InstantSearch, Highlight, connectHits } from 'react-instantsearch-dom';\n *\n * const searchClient = algoliasearch(\n *   'latency',\n *   '6be0576ff61c053d5f9a3225e2a90f76'\n * );\n * const CustomHits = connectHits(({ hits }) => (\n *   <div>\n *     {hits.map(hit =>\n *       <p key={hit.objectID}>\n *         <Highlight attribute=\"name\" hit={hit} />\n *       </p>\n *     )}\n *   </div>\n * ));\n *\n * const App = () => (\n *   <InstantSearch\n *     searchClient={searchClient}\n *     indexName=\"instant_search\"\n *   >\n *     <CustomHits />\n *   </InstantSearch>\n * );\n */\n\nexport default createConnector({\n  displayName: 'AlgoliaHits',\n  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {\n    var results = getResults(searchResults, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n\n    if (!results) {\n      return {\n        hits: []\n      };\n    }\n\n    var hitsWithPositions = addAbsolutePositions(results.hits, results.hitsPerPage, results.page);\n    var hitsWithPositionsAndQueryID = addQueryID(hitsWithPositions, results.queryID);\n    return {\n      hits: hitsWithPositionsAndQueryID\n    };\n  },\n\n  /**\n   * Hits needs to be considered as a widget to trigger a search,\n   * even if no other widgets are used.\n   *\n   * To be considered as a widget you need either:\n   * - getSearchParameters\n   * - getMetadata\n   * - transitionState\n   *\n   * See: createConnector.tsx\n   */\n  getSearchParameters: function getSearchParameters(searchParameters) {\n    return searchParameters;\n  }\n});","import { getPropertyByPath } from './utils';\nexport var HIGHLIGHT_TAGS = {\n  highlightPreTag: \"<ais-highlight-0000000000>\",\n  highlightPostTag: \"</ais-highlight-0000000000>\"\n};\n/**\n * Parses an highlighted attribute into an array of objects with the string value, and\n * a boolean that indicated if this part is highlighted.\n *\n * @param {string} preTag - string used to identify the start of an highlighted value\n * @param {string} postTag - string used to identify the end of an highlighted value\n * @param {string} highlightedValue - highlighted attribute as returned by Algolia highlight feature\n * @return {object[]} - An array of {value: string, isHighlighted: boolean}.\n */\n\nfunction parseHighlightedAttribute(_ref) {\n  var preTag = _ref.preTag,\n      postTag = _ref.postTag,\n      _ref$highlightedValue = _ref.highlightedValue,\n      highlightedValue = _ref$highlightedValue === void 0 ? '' : _ref$highlightedValue;\n  var splitByPreTag = highlightedValue.split(preTag);\n  var firstValue = splitByPreTag.shift();\n  var elements = firstValue === '' ? [] : [{\n    value: firstValue,\n    isHighlighted: false\n  }];\n\n  if (postTag === preTag) {\n    var isHighlighted = true;\n    splitByPreTag.forEach(function (split) {\n      elements.push({\n        value: split,\n        isHighlighted: isHighlighted\n      });\n      isHighlighted = !isHighlighted;\n    });\n  } else {\n    splitByPreTag.forEach(function (split) {\n      var splitByPostTag = split.split(postTag);\n      elements.push({\n        value: splitByPostTag[0],\n        isHighlighted: true\n      });\n\n      if (splitByPostTag[1] !== '') {\n        elements.push({\n          value: splitByPostTag[1],\n          isHighlighted: false\n        });\n      }\n    });\n  }\n\n  return elements;\n}\n/**\n * Find an highlighted attribute given an `attribute` and an `highlightProperty`, parses it,\n * and provided an array of objects with the string value and a boolean if this\n * value is highlighted.\n *\n * In order to use this feature, highlight must be activated in the configuration of\n * the index. The `preTag` and `postTag` attributes are respectively highlightPreTag and\n * highlightPostTag in Algolia configuration.\n *\n * @param {string} preTag - string used to identify the start of an highlighted value\n * @param {string} postTag - string used to identify the end of an highlighted value\n * @param {string} highlightProperty - the property that contains the highlight structure in the results\n * @param {string} attribute - the highlighted attribute to look for\n * @param {object} hit - the actual hit returned by Algolia.\n * @return {object[]} - An array of {value: string, isHighlighted: boolean}.\n */\n\n\nexport function parseAlgoliaHit(_ref2) {\n  var _ref2$preTag = _ref2.preTag,\n      preTag = _ref2$preTag === void 0 ? '<em>' : _ref2$preTag,\n      _ref2$postTag = _ref2.postTag,\n      postTag = _ref2$postTag === void 0 ? '</em>' : _ref2$postTag,\n      highlightProperty = _ref2.highlightProperty,\n      attribute = _ref2.attribute,\n      hit = _ref2.hit;\n  if (!hit) throw new Error('`hit`, the matching record, must be provided');\n  var highlightObject = getPropertyByPath(hit[highlightProperty], attribute) || {};\n\n  if (Array.isArray(highlightObject)) {\n    return highlightObject.map(function (item) {\n      return parseHighlightedAttribute({\n        preTag: preTag,\n        postTag: postTag,\n        highlightedValue: item.value\n      });\n    });\n  }\n\n  return parseHighlightedAttribute({\n    preTag: preTag,\n    postTag: postTag,\n    highlightedValue: highlightObject.value\n  });\n}","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport algoliasearchHelper from 'algoliasearch-helper';\nimport createWidgetsManager from './createWidgetsManager';\nimport createStore from './createStore';\nimport { HIGHLIGHT_TAGS } from './highlight';\nimport { hasMultipleIndices } from './indexUtils';\nimport { version as ReactVersion } from 'react';\nimport version from './version';\n\nfunction addAlgoliaAgents(searchClient) {\n  if (typeof searchClient.addAlgoliaAgent === 'function') {\n    searchClient.addAlgoliaAgent(\"react (\".concat(ReactVersion, \")\"));\n    searchClient.addAlgoliaAgent(\"react-instantsearch (\".concat(version, \")\"));\n  }\n}\n\nvar isMultiIndexContext = function isMultiIndexContext(widget) {\n  return hasMultipleIndices({\n    ais: widget.props.contextValue,\n    multiIndexContext: widget.props.indexContextValue\n  });\n};\n\nvar isTargetedIndexEqualIndex = function isTargetedIndexEqualIndex(widget, indexId) {\n  return widget.props.indexContextValue.targetedIndex === indexId;\n}; // Relying on the `indexId` is a bit brittle to detect the `Index` widget.\n// Since it's a class we could rely on `instanceof` or similar. We never\n// had an issue though. Works for now.\n\n\nvar isIndexWidget = function isIndexWidget(widget) {\n  return Boolean(widget.props.indexId);\n};\n\nvar isIndexWidgetEqualIndex = function isIndexWidgetEqualIndex(widget, indexId) {\n  return widget.props.indexId === indexId;\n};\n\nvar sortIndexWidgetsFirst = function sortIndexWidgetsFirst(firstWidget, secondWidget) {\n  var isFirstWidgetIndex = isIndexWidget(firstWidget);\n  var isSecondWidgetIndex = isIndexWidget(secondWidget);\n\n  if (isFirstWidgetIndex && !isSecondWidgetIndex) {\n    return -1;\n  }\n\n  if (!isFirstWidgetIndex && isSecondWidgetIndex) {\n    return 1;\n  }\n\n  return 0;\n}; // This function is copied from the algoliasearch v4 API Client. If modified,\n// consider updating it also in `serializeQueryParameters` from `@algolia/transporter`.\n\n\nfunction serializeQueryParameters(parameters) {\n  var isObjectOrArray = function isObjectOrArray(value) {\n    return Object.prototype.toString.call(value) === '[object Object]' || Object.prototype.toString.call(value) === '[object Array]';\n  };\n\n  var encode = function encode(format) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var i = 0;\n    return format.replace(/%s/g, function () {\n      return encodeURIComponent(args[i++]);\n    });\n  };\n\n  return Object.keys(parameters).map(function (key) {\n    return encode('%s=%s', key, isObjectOrArray(parameters[key]) ? JSON.stringify(parameters[key]) : parameters[key]);\n  }).join('&');\n}\n/**\n * Creates a new instance of the InstantSearchManager which controls the widgets and\n * trigger the search when the widgets are updated.\n * @param {string} indexName - the main index name\n * @param {object} initialState - initial widget state\n * @param {object} SearchParameters - optional additional parameters to send to the algolia API\n * @param {number} stalledSearchDelay - time (in ms) after the search is stalled\n * @return {InstantSearchManager} a new instance of InstantSearchManager\n */\n\n\nexport default function createInstantSearchManager(_ref) {\n  var indexName = _ref.indexName,\n      _ref$initialState = _ref.initialState,\n      initialState = _ref$initialState === void 0 ? {} : _ref$initialState,\n      searchClient = _ref.searchClient,\n      resultsState = _ref.resultsState,\n      stalledSearchDelay = _ref.stalledSearchDelay;\n  var helper = algoliasearchHelper(searchClient, indexName, _objectSpread({}, HIGHLIGHT_TAGS));\n  addAlgoliaAgents(searchClient);\n  helper.on('search', handleNewSearch).on('result', handleSearchSuccess({\n    indexId: indexName\n  })).on('error', handleSearchError);\n  var skip = false;\n  var stalledSearchTimer = null;\n  var initialSearchParameters = helper.state;\n  var widgetsManager = createWidgetsManager(onWidgetsUpdate);\n  hydrateSearchClient(searchClient, resultsState);\n  var store = createStore({\n    widgets: initialState,\n    metadata: hydrateMetadata(resultsState),\n    results: hydrateResultsState(resultsState),\n    error: null,\n    searching: false,\n    isSearchStalled: true,\n    searchingForFacetValues: false\n  });\n\n  function skipSearch() {\n    skip = true;\n  }\n\n  function updateClient(client) {\n    addAlgoliaAgents(client);\n    helper.setClient(client);\n    search();\n  }\n\n  function clearCache() {\n    helper.clearCache();\n    search();\n  }\n\n  function getMetadata(state) {\n    return widgetsManager.getWidgets().filter(function (widget) {\n      return Boolean(widget.getMetadata);\n    }).map(function (widget) {\n      return widget.getMetadata(state);\n    });\n  }\n\n  function getSearchParameters() {\n    var sharedParameters = widgetsManager.getWidgets().filter(function (widget) {\n      return Boolean(widget.getSearchParameters);\n    }).filter(function (widget) {\n      return !isMultiIndexContext(widget) && !isIndexWidget(widget);\n    }).reduce(function (res, widget) {\n      return widget.getSearchParameters(res);\n    }, initialSearchParameters);\n    var mainParameters = widgetsManager.getWidgets().filter(function (widget) {\n      return Boolean(widget.getSearchParameters);\n    }).filter(function (widget) {\n      var targetedIndexEqualMainIndex = isMultiIndexContext(widget) && isTargetedIndexEqualIndex(widget, indexName);\n      var subIndexEqualMainIndex = isIndexWidget(widget) && isIndexWidgetEqualIndex(widget, indexName);\n      return targetedIndexEqualMainIndex || subIndexEqualMainIndex;\n    }) // We have to sort the `Index` widgets first so the `index` parameter\n    // is correctly set in the `reduce` function for the following widgets\n    .sort(sortIndexWidgetsFirst).reduce(function (res, widget) {\n      return widget.getSearchParameters(res);\n    }, sharedParameters);\n    var derivedIndices = widgetsManager.getWidgets().filter(function (widget) {\n      return Boolean(widget.getSearchParameters);\n    }).filter(function (widget) {\n      var targetedIndexNotEqualMainIndex = isMultiIndexContext(widget) && !isTargetedIndexEqualIndex(widget, indexName);\n      var subIndexNotEqualMainIndex = isIndexWidget(widget) && !isIndexWidgetEqualIndex(widget, indexName);\n      return targetedIndexNotEqualMainIndex || subIndexNotEqualMainIndex;\n    }) // We have to sort the `Index` widgets first so the `index` parameter\n    // is correctly set in the `reduce` function for the following widgets\n    .sort(sortIndexWidgetsFirst).reduce(function (indices, widget) {\n      var indexId = isMultiIndexContext(widget) ? widget.props.indexContextValue.targetedIndex : widget.props.indexId;\n      var widgets = indices[indexId] || [];\n      return _objectSpread({}, indices, _defineProperty({}, indexId, widgets.concat(widget)));\n    }, {});\n    var derivedParameters = Object.keys(derivedIndices).map(function (indexId) {\n      return {\n        parameters: derivedIndices[indexId].reduce(function (res, widget) {\n          return widget.getSearchParameters(res);\n        }, sharedParameters),\n        indexId: indexId\n      };\n    });\n    return {\n      mainParameters: mainParameters,\n      derivedParameters: derivedParameters\n    };\n  }\n\n  function search() {\n    if (!skip) {\n      var _getSearchParameters = getSearchParameters(helper.state),\n          mainParameters = _getSearchParameters.mainParameters,\n          derivedParameters = _getSearchParameters.derivedParameters; // We have to call `slice` because the method `detach` on the derived\n      // helpers mutates the value `derivedHelpers`. The `forEach` loop does\n      // not iterate on each value and we're not able to correctly clear the\n      // previous derived helpers (memory leak + useless requests).\n\n\n      helper.derivedHelpers.slice().forEach(function (derivedHelper) {\n        // Since we detach the derived helpers on **every** new search they\n        // won't receive intermediate results in case of a stalled search.\n        // Only the last result is dispatched by the derived helper because\n        // they are not detached yet:\n        //\n        // - a -> main helper receives results\n        // - ap -> main helper receives results\n        // - app -> main helper + derived helpers receive results\n        //\n        // The quick fix is to avoid to detach them on search but only once they\n        // received the results. But it means that in case of a stalled search\n        // all the derived helpers not detached yet register a new search inside\n        // the helper. The number grows fast in case of a bad network and it's\n        // not deterministic.\n        derivedHelper.detach();\n      });\n      derivedParameters.forEach(function (_ref2) {\n        var indexId = _ref2.indexId,\n            parameters = _ref2.parameters;\n        var derivedHelper = helper.derive(function () {\n          return parameters;\n        });\n        derivedHelper.on('result', handleSearchSuccess({\n          indexId: indexId\n        })).on('error', handleSearchError);\n      });\n      helper.setState(mainParameters);\n      helper.search();\n    }\n  }\n\n  function handleSearchSuccess(_ref3) {\n    var indexId = _ref3.indexId;\n    return function (event) {\n      var state = store.getState();\n      var isDerivedHelpersEmpty = !helper.derivedHelpers.length;\n      var results = state.results ? state.results : {}; // Switching from mono index to multi index and vice versa must reset the\n      // results to an empty object, otherwise we keep reference of stalled and\n      // unused results.\n\n      results = !isDerivedHelpersEmpty && results.getFacetByName ? {} : results;\n\n      if (!isDerivedHelpersEmpty) {\n        results = _objectSpread({}, results, _defineProperty({}, indexId, event.results));\n      } else {\n        results = event.results;\n      }\n\n      var currentState = store.getState();\n      var nextIsSearchStalled = currentState.isSearchStalled;\n\n      if (!helper.hasPendingRequests()) {\n        clearTimeout(stalledSearchTimer);\n        stalledSearchTimer = null;\n        nextIsSearchStalled = false;\n      }\n\n      var resultsFacetValues = currentState.resultsFacetValues,\n          partialState = _objectWithoutProperties(currentState, [\"resultsFacetValues\"]);\n\n      store.setState(_objectSpread({}, partialState, {\n        results: results,\n        isSearchStalled: nextIsSearchStalled,\n        searching: false,\n        error: null\n      }));\n    };\n  }\n\n  function handleSearchError(_ref4) {\n    var error = _ref4.error;\n    var currentState = store.getState();\n    var nextIsSearchStalled = currentState.isSearchStalled;\n\n    if (!helper.hasPendingRequests()) {\n      clearTimeout(stalledSearchTimer);\n      nextIsSearchStalled = false;\n    }\n\n    var resultsFacetValues = currentState.resultsFacetValues,\n        partialState = _objectWithoutProperties(currentState, [\"resultsFacetValues\"]);\n\n    store.setState(_objectSpread({}, partialState, {\n      isSearchStalled: nextIsSearchStalled,\n      error: error,\n      searching: false\n    }));\n  }\n\n  function handleNewSearch() {\n    if (!stalledSearchTimer) {\n      stalledSearchTimer = setTimeout(function () {\n        var _store$getState = store.getState(),\n            resultsFacetValues = _store$getState.resultsFacetValues,\n            partialState = _objectWithoutProperties(_store$getState, [\"resultsFacetValues\"]);\n\n        store.setState(_objectSpread({}, partialState, {\n          isSearchStalled: true\n        }));\n      }, stalledSearchDelay);\n    }\n  }\n\n  function hydrateSearchClient(client, results) {\n    if (!results) {\n      return;\n    } // Disable cache hydration on:\n    // - Algoliasearch API Client < v4 with cache disabled\n    // - Third party clients (detected by the `addAlgoliaAgent` function missing)\n\n\n    if ((!client.transporter || client._cacheHydrated) && (!client._useCache || typeof client.addAlgoliaAgent !== 'function')) {\n      return;\n    } // Algoliasearch API Client >= v4\n    // To hydrate the client we need to populate the cache with the data from\n    // the server (done in `hydrateSearchClientWithMultiIndexRequest` or\n    // `hydrateSearchClientWithSingleIndexRequest`). But since there is no way\n    // for us to compute the key the same way as `algoliasearch-client` we need\n    // to populate it on a custom key and override the `search` method to\n    // search on it first.\n\n\n    if (client.transporter && !client._cacheHydrated) {\n      client._cacheHydrated = true;\n      var baseMethod = client.search;\n\n      client.search = function (requests) {\n        for (var _len2 = arguments.length, methodArgs = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          methodArgs[_key2 - 1] = arguments[_key2];\n        }\n\n        var requestsWithSerializedParams = requests.map(function (request) {\n          return _objectSpread({}, request, {\n            params: serializeQueryParameters(request.params)\n          });\n        });\n        return client.transporter.responsesCache.get({\n          method: 'search',\n          args: [requestsWithSerializedParams].concat(methodArgs)\n        }, function () {\n          return baseMethod.apply(void 0, [requests].concat(methodArgs));\n        });\n      };\n    }\n\n    if (Array.isArray(results.results)) {\n      hydrateSearchClientWithMultiIndexRequest(client, results.results);\n      return;\n    }\n\n    hydrateSearchClientWithSingleIndexRequest(client, results);\n  }\n\n  function hydrateSearchClientWithMultiIndexRequest(client, results) {\n    // Algoliasearch API Client >= v4\n    // Populate the cache with the data from the server\n    if (client.transporter) {\n      client.transporter.responsesCache.set({\n        method: 'search',\n        args: [results.reduce(function (acc, result) {\n          return acc.concat(result.rawResults.map(function (request) {\n            return {\n              indexName: request.index,\n              params: request.params\n            };\n          }));\n        }, [])]\n      }, {\n        results: results.reduce(function (acc, result) {\n          return acc.concat(result.rawResults);\n        }, [])\n      });\n      return;\n    } // Algoliasearch API Client < v4\n    // Prior to client v4 we didn't have a proper API to hydrate the client\n    // cache from the outside. The following code populates the cache with\n    // a single-index result. You can find more information about the\n    // computation of the key inside the client (see link below).\n    // https://github.com/algolia/algoliasearch-client-javascript/blob/c27e89ff92b2a854ae6f40dc524bffe0f0cbc169/src/AlgoliaSearchCore.js#L232-L240\n\n\n    var key = \"/1/indexes/*/queries_body_\".concat(JSON.stringify({\n      requests: results.reduce(function (acc, result) {\n        return acc.concat(result.rawResults.map(function (request) {\n          return {\n            indexName: request.index,\n            params: request.params\n          };\n        }));\n      }, [])\n    }));\n    client.cache = _objectSpread({}, client.cache, _defineProperty({}, key, JSON.stringify({\n      results: results.reduce(function (acc, result) {\n        return acc.concat(result.rawResults);\n      }, [])\n    })));\n  }\n\n  function hydrateSearchClientWithSingleIndexRequest(client, results) {\n    // Algoliasearch API Client >= v4\n    // Populate the cache with the data from the server\n    if (client.transporter) {\n      client.transporter.responsesCache.set({\n        method: 'search',\n        args: [results.rawResults.map(function (request) {\n          return {\n            indexName: request.index,\n            params: request.params\n          };\n        })]\n      }, {\n        results: results.rawResults\n      });\n      return;\n    } // Algoliasearch API Client < v4\n    // Prior to client v4 we didn't have a proper API to hydrate the client\n    // cache from the outside. The following code populates the cache with\n    // a single-index result. You can find more information about the\n    // computation of the key inside the client (see link below).\n    // https://github.com/algolia/algoliasearch-client-javascript/blob/c27e89ff92b2a854ae6f40dc524bffe0f0cbc169/src/AlgoliaSearchCore.js#L232-L240\n\n\n    var key = \"/1/indexes/*/queries_body_\".concat(JSON.stringify({\n      requests: results.rawResults.map(function (request) {\n        return {\n          indexName: request.index,\n          params: request.params\n        };\n      })\n    }));\n    client.cache = _objectSpread({}, client.cache, _defineProperty({}, key, JSON.stringify({\n      results: results.rawResults\n    })));\n  }\n\n  function hydrateResultsState(results) {\n    if (!results) {\n      return null;\n    }\n\n    if (Array.isArray(results.results)) {\n      return results.results.reduce(function (acc, result) {\n        return _objectSpread({}, acc, _defineProperty({}, result._internalIndexId, new algoliasearchHelper.SearchResults(new algoliasearchHelper.SearchParameters(result.state), result.rawResults)));\n      }, {});\n    }\n\n    return new algoliasearchHelper.SearchResults(new algoliasearchHelper.SearchParameters(results.state), results.rawResults);\n  } // Called whenever a widget has been rendered with new props.\n\n\n  function onWidgetsUpdate() {\n    var metadata = getMetadata(store.getState().widgets);\n    store.setState(_objectSpread({}, store.getState(), {\n      metadata: metadata,\n      searching: true\n    })); // Since the `getSearchParameters` method of widgets also depends on props,\n    // the result search parameters might have changed.\n\n    search();\n  }\n\n  function transitionState(nextSearchState) {\n    var searchState = store.getState().widgets;\n    return widgetsManager.getWidgets().filter(function (widget) {\n      return Boolean(widget.transitionState);\n    }).reduce(function (res, widget) {\n      return widget.transitionState(searchState, res);\n    }, nextSearchState);\n  }\n\n  function onExternalStateUpdate(nextSearchState) {\n    var metadata = getMetadata(nextSearchState);\n    store.setState(_objectSpread({}, store.getState(), {\n      widgets: nextSearchState,\n      metadata: metadata,\n      searching: true\n    }));\n    search();\n  }\n\n  function onSearchForFacetValues(_ref5) {\n    var facetName = _ref5.facetName,\n        query = _ref5.query,\n        _ref5$maxFacetHits = _ref5.maxFacetHits,\n        maxFacetHits = _ref5$maxFacetHits === void 0 ? 10 : _ref5$maxFacetHits;\n    // The values 1, 100 are the min / max values that the engine accepts.\n    // see: https://www.algolia.com/doc/api-reference/api-parameters/maxFacetHits\n    var maxFacetHitsWithinRange = Math.max(1, Math.min(maxFacetHits, 100));\n    store.setState(_objectSpread({}, store.getState(), {\n      searchingForFacetValues: true\n    }));\n    helper.searchForFacetValues(facetName, query, maxFacetHitsWithinRange).then(function (content) {\n      var _objectSpread7;\n\n      store.setState(_objectSpread({}, store.getState(), {\n        error: null,\n        searchingForFacetValues: false,\n        resultsFacetValues: _objectSpread({}, store.getState().resultsFacetValues, (_objectSpread7 = {}, _defineProperty(_objectSpread7, facetName, content.facetHits), _defineProperty(_objectSpread7, \"query\", query), _objectSpread7))\n      }));\n    }, function (error) {\n      store.setState(_objectSpread({}, store.getState(), {\n        searchingForFacetValues: false,\n        error: error\n      }));\n    }).catch(function (error) {\n      // Since setState is synchronous, any error that occurs in the render of a\n      // component will be swallowed by this promise.\n      // This is a trick to make the error show up correctly in the console.\n      // See http://stackoverflow.com/a/30741722/969302\n      setTimeout(function () {\n        throw error;\n      });\n    });\n  }\n\n  function updateIndex(newIndex) {\n    initialSearchParameters = initialSearchParameters.setIndex(newIndex); // No need to trigger a new search here as the widgets will also update and trigger it if needed.\n  }\n\n  function getWidgetsIds() {\n    return store.getState().metadata.reduce(function (res, meta) {\n      return typeof meta.id !== 'undefined' ? res.concat(meta.id) : res;\n    }, []);\n  }\n\n  return {\n    store: store,\n    widgetsManager: widgetsManager,\n    getWidgetsIds: getWidgetsIds,\n    getSearchParameters: getSearchParameters,\n    onSearchForFacetValues: onSearchForFacetValues,\n    onExternalStateUpdate: onExternalStateUpdate,\n    transitionState: transitionState,\n    updateClient: updateClient,\n    updateIndex: updateIndex,\n    clearCache: clearCache,\n    skipSearch: skipSearch\n  };\n}\n\nfunction hydrateMetadata(resultsState) {\n  if (!resultsState) {\n    return [];\n  } // add a value noop, which gets replaced once the widgets are mounted\n\n\n  return resultsState.metadata.map(function (datum) {\n    return _objectSpread({\n      value: function value() {}\n    }, datum, {\n      items: datum.items && datum.items.map(function (item) {\n        return _objectSpread({\n          value: function value() {}\n        }, item, {\n          items: item.items && item.items.map(function (nestedItem) {\n            return _objectSpread({\n              value: function value() {}\n            }, nestedItem);\n          })\n        });\n      })\n    });\n  });\n}","export default '6.10.3';","import { defer } from './utils';\nexport default function createWidgetsManager(onWidgetsUpdate) {\n  var widgets = []; // Is an update scheduled?\n\n  var scheduled = false; // The state manager's updates need to be batched since more than one\n  // component can register or unregister widgets during the same tick.\n\n  function scheduleUpdate() {\n    if (scheduled) {\n      return;\n    }\n\n    scheduled = true;\n    defer(function () {\n      scheduled = false;\n      onWidgetsUpdate();\n    });\n  }\n\n  return {\n    registerWidget: function registerWidget(widget) {\n      widgets.push(widget);\n      scheduleUpdate();\n      return function unregisterWidget() {\n        widgets.splice(widgets.indexOf(widget), 1);\n        scheduleUpdate();\n      };\n    },\n    update: scheduleUpdate,\n    getWidgets: function getWidgets() {\n      return widgets;\n    }\n  };\n}","export default function createStore(initialState) {\n  var state = initialState;\n  var listeners = [];\n  return {\n    getState: function getState() {\n      return state;\n    },\n    setState: function setState(nextState) {\n      state = nextState;\n      listeners.forEach(function (listener) {\n        return listener();\n      });\n    },\n    subscribe: function subscribe(listener) {\n      listeners.push(listener);\n      return function unsubscribe() {\n        listeners.splice(listeners.indexOf(listener), 1);\n      };\n    }\n  };\n}","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React, { Component, Children } from 'react';\nimport isEqual from 'react-fast-compare';\nimport PropTypes from 'prop-types';\nimport createInstantSearchManager from '../core/createInstantSearchManager';\nimport { InstantSearchProvider } from '../core/context';\n\nfunction isControlled(props) {\n  return Boolean(props.searchState);\n}\n/**\n * @description\n * `<InstantSearch>` is the root component of all React InstantSearch implementations.\n * It provides all the connected components (aka widgets) a means to interact\n * with the searchState.\n * @kind widget\n * @name <InstantSearch>\n * @requirements You will need to have an Algolia account to be able to use this widget.\n * [Create one now](https://www.algolia.com/users/sign_up).\n * @propType {string} indexName - Main index in which to search.\n * @propType {boolean} [refresh=false] - Flag to activate when the cache needs to be cleared so that the front-end is updated when a change occurs in the index.\n * @propType {object} [searchClient] - Provide a custom search client.\n * @propType {func} [onSearchStateChange] - Function to be called everytime a new search is done. Useful for [URL Routing](guide/Routing.html).\n * @propType {object} [searchState] - Object to inject some search state. Switches the InstantSearch component in controlled mode. Useful for [URL Routing](guide/Routing.html).\n * @propType {func} [createURL] - Function to call when creating links, useful for [URL Routing](guide/Routing.html).\n * @propType {SearchResults|SearchResults[]} [resultsState] - Use this to inject the results that will be used at first rendering. Those results are found by using the `findResultsState` function. Useful for [Server Side Rendering](guide/Server-side_rendering.html).\n * @propType {number} [stalledSearchDelay=200] - The amount of time before considering that the search takes too much time. The time is expressed in milliseconds.\n * @propType {{ Root: string|function, props: object }} [root] - Use this to customize the root element. Default value: `{ Root: 'div' }`\n * @example\n * import React from 'react';\n * import algoliasearch from 'algoliasearch/lite';\n * import { InstantSearch, SearchBox, Hits } from 'react-instantsearch-dom';\n *\n * const searchClient = algoliasearch(\n *   'latency',\n *   '6be0576ff61c053d5f9a3225e2a90f76'\n * );\n *\n * const App = () => (\n *   <InstantSearch\n *     searchClient={searchClient}\n *     indexName=\"instant_search\"\n *   >\n *     <SearchBox />\n *     <Hits />\n *   </InstantSearch>\n * );\n */\n\n\nvar InstantSearch =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(InstantSearch, _Component);\n\n  _createClass(InstantSearch, null, [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var nextIsControlled = isControlled(nextProps);\n      var previousSearchState = prevState.instantSearchManager.store.getState().widgets;\n      var nextSearchState = nextProps.searchState;\n\n      if (nextIsControlled && !isEqual(previousSearchState, nextSearchState)) {\n        prevState.instantSearchManager.onExternalStateUpdate(nextProps.searchState);\n      }\n\n      return {\n        isControlled: nextIsControlled,\n        contextValue: _objectSpread({}, prevState.contextValue, {\n          mainTargetedIndex: nextProps.indexName\n        })\n      };\n    }\n  }]);\n\n  function InstantSearch(props) {\n    var _this;\n\n    _classCallCheck(this, InstantSearch);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InstantSearch).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"isUnmounting\", false);\n\n    var instantSearchManager = createInstantSearchManager({\n      indexName: _this.props.indexName,\n      searchClient: _this.props.searchClient,\n      initialState: _this.props.searchState || {},\n      resultsState: _this.props.resultsState,\n      stalledSearchDelay: _this.props.stalledSearchDelay\n    });\n    var contextValue = {\n      store: instantSearchManager.store,\n      widgetsManager: instantSearchManager.widgetsManager,\n      mainTargetedIndex: _this.props.indexName,\n      onInternalStateUpdate: _this.onWidgetsInternalStateUpdate.bind(_assertThisInitialized(_this)),\n      createHrefForState: _this.createHrefForState.bind(_assertThisInitialized(_this)),\n      onSearchForFacetValues: _this.onSearchForFacetValues.bind(_assertThisInitialized(_this)),\n      onSearchStateChange: _this.onSearchStateChange.bind(_assertThisInitialized(_this)),\n      onSearchParameters: _this.onSearchParameters.bind(_assertThisInitialized(_this))\n    };\n    _this.state = {\n      isControlled: isControlled(_this.props),\n      instantSearchManager: instantSearchManager,\n      contextValue: contextValue\n    };\n    return _this;\n  }\n\n  _createClass(InstantSearch, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var prevIsControlled = isControlled(prevProps);\n\n      if (prevIsControlled && !this.state.isControlled) {\n        throw new Error(\"You can't switch <InstantSearch> from being controlled to uncontrolled\");\n      }\n\n      if (!prevIsControlled && this.state.isControlled) {\n        throw new Error(\"You can't switch <InstantSearch> from being uncontrolled to controlled\");\n      }\n\n      if (this.props.refresh !== prevProps.refresh && this.props.refresh) {\n        this.state.instantSearchManager.clearCache();\n      }\n\n      if (prevProps.indexName !== this.props.indexName) {\n        this.state.instantSearchManager.updateIndex(this.props.indexName);\n      }\n\n      if (prevProps.searchClient !== this.props.searchClient) {\n        this.state.instantSearchManager.updateClient(this.props.searchClient);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.isUnmounting = true;\n      this.state.instantSearchManager.skipSearch();\n    }\n  }, {\n    key: \"createHrefForState\",\n    value: function createHrefForState(searchState) {\n      searchState = this.state.instantSearchManager.transitionState(searchState);\n      return this.state.isControlled && this.props.createURL ? this.props.createURL(searchState, this.getKnownKeys()) : '#';\n    }\n  }, {\n    key: \"onWidgetsInternalStateUpdate\",\n    value: function onWidgetsInternalStateUpdate(searchState) {\n      searchState = this.state.instantSearchManager.transitionState(searchState);\n      this.onSearchStateChange(searchState);\n\n      if (!this.state.isControlled) {\n        this.state.instantSearchManager.onExternalStateUpdate(searchState);\n      }\n    }\n  }, {\n    key: \"onSearchStateChange\",\n    value: function onSearchStateChange(searchState) {\n      if (this.props.onSearchStateChange && !this.isUnmounting) {\n        this.props.onSearchStateChange(searchState);\n      }\n    }\n  }, {\n    key: \"onSearchParameters\",\n    value: function onSearchParameters(getSearchParameters, context, props, getMetadata) {\n      if (this.props.onSearchParameters) {\n        var _searchState = this.props.searchState ? this.props.searchState : {};\n\n        this.props.onSearchParameters(getSearchParameters, context, props, _searchState);\n      }\n\n      if (this.props.widgetsCollector) {\n        var _searchState2 = this.props.searchState ? this.props.searchState : {};\n\n        this.props.widgetsCollector({\n          getSearchParameters: getSearchParameters,\n          getMetadata: getMetadata,\n          context: context,\n          props: props,\n          searchState: _searchState2\n        });\n      }\n    }\n  }, {\n    key: \"onSearchForFacetValues\",\n    value: function onSearchForFacetValues(searchState) {\n      this.state.instantSearchManager.onSearchForFacetValues(searchState);\n    }\n  }, {\n    key: \"getKnownKeys\",\n    value: function getKnownKeys() {\n      return this.state.instantSearchManager.getWidgetsIds();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (Children.count(this.props.children) === 0) {\n        return null;\n      }\n\n      return React.createElement(InstantSearchProvider, {\n        value: this.state.contextValue\n      }, this.props.children);\n    }\n  }]);\n\n  return InstantSearch;\n}(Component);\n\n_defineProperty(InstantSearch, \"defaultProps\", {\n  stalledSearchDelay: 200,\n  refresh: false\n});\n\n_defineProperty(InstantSearch, \"propTypes\", {\n  // @TODO: These props are currently constant.\n  indexName: PropTypes.string.isRequired,\n  searchClient: PropTypes.shape({\n    search: PropTypes.func.isRequired,\n    searchForFacetValues: PropTypes.func,\n    addAlgoliaAgent: PropTypes.func,\n    clearCache: PropTypes.func\n  }).isRequired,\n  createURL: PropTypes.func,\n  refresh: PropTypes.bool,\n  searchState: PropTypes.object,\n  onSearchStateChange: PropTypes.func,\n  onSearchParameters: PropTypes.func,\n  widgetsCollector: PropTypes.func,\n  resultsState: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  children: PropTypes.node,\n  stalledSearchDelay: PropTypes.number\n});\n\nexport default InstantSearch;"],"sourceRoot":""}