{"ast":null,"code":"import { ChainId, Token, WETH, Fetcher, Trade, Route, TokenAmount, TradeType } from '@uniswap/sdk';\nconst USDC = new Token(ChainId.MAINNET, '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', 6);\nconst TAC = new Token(ChainId.MAINNET, '0xDeeB6091A5ADc78fA0332BEE5A38a8908b6b566e', 18);\nconst UniswapService = {};\n\nUniswapService.USDCWETHPair = async () => {\n  const USDCWETHPair = await Fetcher.fetchPairData(USDC, WETH[USDC.chainId]);\n  const routeUSDC = new Route([USDCWETHPair], WETH[USDC.chainId]);\n  console.log(routeUSDC.midPrice.toSignificant(6));\n  return routeUSDC.midPrice.toSignificant(3);\n};\n\nUniswapService.TACWETHPair = async () => {\n  const TACWETHPair = await Fetcher.fetchPairData(TAC, WETH[TAC.chainId]);\n  const routeTAC = new Route([TACWETHPair], WETH[TAC.chainId]);\n  return routeTAC.midPrice.toSignificant(3);\n};\n\nexport default UniswapService;","map":{"version":3,"sources":["/workspace/tation_authByWallet/src/services/UniswapService.js"],"names":["ChainId","Token","WETH","Fetcher","Trade","Route","TokenAmount","TradeType","USDC","MAINNET","TAC","UniswapService","USDCWETHPair","fetchPairData","chainId","routeUSDC","console","log","midPrice","toSignificant","TACWETHPair","routeTAC"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,KAAlB,EAAyBC,IAAzB,EAA+BC,OAA/B,EAAwCC,KAAxC,EAA+CC,KAA/C,EAAsDC,WAAtD,EAAmEC,SAAnE,QAAoF,cAApF;AAEA,MAAMC,IAAI,GAAG,IAAIP,KAAJ,CAAUD,OAAO,CAACS,OAAlB,EAA2B,4CAA3B,EAAyE,CAAzE,CAAb;AACA,MAAMC,GAAG,GAAG,IAAIT,KAAJ,CAAUD,OAAO,CAACS,OAAlB,EAA2B,4CAA3B,EAAyE,EAAzE,CAAZ;AAEA,MAAME,cAAc,GAAG,EAAvB;;AAEAA,cAAc,CAACC,YAAf,GAA8B,YAAY;AACzC,QAAMA,YAAY,GAAG,MAAMT,OAAO,CAACU,aAAR,CAAsBL,IAAtB,EAA4BN,IAAI,CAACM,IAAI,CAACM,OAAN,CAAhC,CAA3B;AACC,QAAMC,SAAS,GAAG,IAAIV,KAAJ,CAAU,CAACO,YAAD,CAAV,EAA0BV,IAAI,CAACM,IAAI,CAACM,OAAN,CAA9B,CAAlB;AACDE,EAAAA,OAAO,CAACC,GAAR,CAAaF,SAAS,CAACG,QAAV,CAAmBC,aAAnB,CAAiC,CAAjC,CAAb;AACA,SAAOJ,SAAS,CAACG,QAAV,CAAmBC,aAAnB,CAAiC,CAAjC,CAAP;AACA,CALD;;AAQAR,cAAc,CAACS,WAAf,GAA6B,YAAY;AACrC,QAAMA,WAAW,GAAE,MAAMjB,OAAO,CAACU,aAAR,CAAsBH,GAAtB,EAA2BR,IAAI,CAACQ,GAAG,CAACI,OAAL,CAA/B,CAAzB;AACH,QAAMO,QAAQ,GAAG,IAAIhB,KAAJ,CAAU,CAACe,WAAD,CAAV,EAAyBlB,IAAI,CAACQ,GAAG,CAACI,OAAL,CAA7B,CAAjB;AACC,SAAOO,QAAQ,CAACH,QAAT,CAAkBC,aAAlB,CAAgC,CAAhC,CAAP;AACD,CAJD;;AAWA,eAAeR,cAAf","sourcesContent":["import { ChainId, Token, WETH, Fetcher, Trade, Route, TokenAmount, TradeType } from '@uniswap/sdk'\n\nconst USDC = new Token(ChainId.MAINNET, '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', 6)\nconst TAC = new Token(ChainId.MAINNET, '0xDeeB6091A5ADc78fA0332BEE5A38a8908b6b566e', 18)\n\nconst UniswapService = {}\n\nUniswapService.USDCWETHPair = async () => {\n\tconst USDCWETHPair = await Fetcher.fetchPairData(USDC, WETH[USDC.chainId])\n \tconst routeUSDC = new Route([USDCWETHPair], WETH[USDC.chainId])\n\tconsole.log( routeUSDC.midPrice.toSignificant(6))\n\treturn routeUSDC.midPrice.toSignificant(3)\n}\n\n\nUniswapService.TACWETHPair = async () => {\n    const TACWETHPair= await Fetcher.fetchPairData(TAC, WETH[TAC.chainId])\n\tconst routeTAC = new Route([TACWETHPair], WETH[TAC.chainId])\n\t return routeTAC.midPrice.toSignificant(3)\n}   \n\n\n\n\n\n\nexport default UniswapService\n\n \n  \n  \n"]},"metadata":{},"sourceType":"module"}