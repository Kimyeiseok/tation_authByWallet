{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/workspace/tation_authByWallet/src/views/auth-views/components/LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { Form, Alert } from \"antd\";\nimport PropTypes from 'prop-types';\nimport { GoogleSVG, FacebookSVG } from 'assets/svg/icon';\nimport CustomIcon from 'components/util-components/CustomIcon';\nimport { signIn, showLoading, showAuthMessage, hideAuthMessage } from 'redux/actions/Auth';\nimport { useHistory } from \"react-router-dom\";\nimport { motion } from \"framer-motion\";\nimport ConnectToPortis from './ConnectToPortis';\nimport ConnectToMetamask from './ConnectToMetamask';\nexport const LoginForm = props => {\n  _s();\n\n  let history = useHistory();\n  const {\n    hideAuthMessage,\n    showLoading,\n    signIn,\n    token,\n    redirect,\n    showMessage,\n    message,\n    allowRedirect\n  } = props;\n\n  const onLogin = values => {\n    showLoading();\n    signIn(values);\n  };\n\n  useEffect(() => {\n    if (token !== null && allowRedirect) {\n      history.push(redirect);\n    }\n\n    if (showMessage) {\n      setTimeout(() => {\n        hideAuthMessage();\n      }, 3000);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(motion.div, {\n      initial: {\n        opacity: 0,\n        marginBottom: 0\n      },\n      animate: {\n        opacity: showMessage ? 1 : 0,\n        marginBottom: showMessage ? 20 : 0\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        type: \"error\",\n        showIcon: true,\n        message: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      layout: \"vertical\",\n      name: \"login-form\",\n      onFinish: onLogin,\n      children: [/*#__PURE__*/_jsxDEV(ConnectToPortis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ConnectToMetamask, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(LoginForm, \"bz2N+u0mX89LO9zOCfVCA9Sa20M=\", false, function () {\n  return [useHistory];\n});\n\n_c = LoginForm;\nLoginForm.propTypes = {\n  otherSignIn: PropTypes.bool,\n  showForgetPassword: PropTypes.bool,\n  extra: PropTypes.oneOfType([PropTypes.string, PropTypes.element])\n};\nLoginForm.defaultProps = {\n  otherSignIn: true,\n  showForgetPassword: false\n};\n\nconst mapStateToProps = ({\n  auth\n}) => {\n  const {\n    loading,\n    message,\n    showMessage,\n    token,\n    redirect\n  } = auth;\n  return {\n    loading,\n    message,\n    showMessage,\n    token,\n    redirect\n  };\n};\n\nconst mapDispatchToProps = {\n  signIn,\n  showAuthMessage,\n  showLoading,\n  hideAuthMessage\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/workspace/tation_authByWallet/src/views/auth-views/components/LoginForm.js"],"names":["React","useEffect","connect","Form","Alert","PropTypes","GoogleSVG","FacebookSVG","CustomIcon","signIn","showLoading","showAuthMessage","hideAuthMessage","useHistory","motion","ConnectToPortis","ConnectToMetamask","LoginForm","props","history","token","redirect","showMessage","message","allowRedirect","onLogin","values","push","setTimeout","opacity","marginBottom","propTypes","otherSignIn","bool","showForgetPassword","extra","oneOfType","string","element","defaultProps","mapStateToProps","auth","loading","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport {  Form, Alert } from \"antd\";\nimport PropTypes from 'prop-types';\nimport { GoogleSVG, FacebookSVG } from 'assets/svg/icon';\nimport CustomIcon from 'components/util-components/CustomIcon'\nimport { \n\tsignIn, \n\tshowLoading, \n\tshowAuthMessage, \n\thideAuthMessage, \n} from 'redux/actions/Auth';\nimport { useHistory } from \"react-router-dom\";\nimport { motion } from \"framer-motion\"\nimport ConnectToPortis from './ConnectToPortis'\nimport ConnectToMetamask from './ConnectToMetamask'\n\nexport const LoginForm = props => {\n\n\tlet history = useHistory();\n\n\tconst { \n\t\thideAuthMessage,\n\t\tshowLoading,\n\t\tsignIn, \n\t\ttoken, \n\t\tredirect,\n\t\tshowMessage,\n\t\tmessage,\n\t\tallowRedirect\n\t} = props\n\n\n\tconst onLogin = values => {\n\t\tshowLoading()\n\t\tsignIn(values);\n\t};\n\t\n\n\n\tuseEffect(() => {\n\t\tif (token !== null && allowRedirect) {\n\t\t\thistory.push(redirect)\n\t\t}\n\t\tif(showMessage) {\n\t\t\tsetTimeout(() => {\n\t\t\t\thideAuthMessage();\n\t\t\t}, 3000);\n\t\t}\n\t});\n\t\n\n\n\treturn (\n\t\t<>\n\t\t\t<motion.div \n\t\t\t\tinitial={{ opacity: 0, marginBottom: 0 }} \n\t\t\t\tanimate={{ \n\t\t\t\t\topacity: showMessage ? 1 : 0,\n\t\t\t\t\tmarginBottom: showMessage ? 20 : 0 \n\t\t\t\t}}> \n\t\t\t\t<Alert type=\"error\" showIcon message={message}></Alert>\n\t\t\t</motion.div>\n\t\t\t<Form \n\t\t\t\tlayout=\"vertical\" \n\t\t\t\tname=\"login-form\" \n\t\t\t\tonFinish={onLogin}\n\t\t\t>\n\t\t\t\t<ConnectToPortis />\n\t\t\t\t<ConnectToMetamask />\n\t\t\t</Form>\n\t\t</>\n\t)\n}\n\nLoginForm.propTypes = {\n\totherSignIn: PropTypes.bool,\n\tshowForgetPassword: PropTypes.bool,\n\textra: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.element\n\t]),\n};\n\nLoginForm.defaultProps = {\n\totherSignIn: true,\n\tshowForgetPassword: false\n};\n\nconst mapStateToProps = ({auth}) => {\n\tconst {loading, message, showMessage, token, redirect} = auth;\n  return {loading, message, showMessage, token, redirect}\n}\n\nconst mapDispatchToProps = {\n\tsignIn,\n\tshowAuthMessage,\n\tshowLoading,\n\thideAuthMessage,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm)\n"]},"metadata":{},"sourceType":"module"}