{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/workspace/tation_authByWallet/src/views/auth-views/components/ConnectToMetamask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { singInwithPortis } from 'redux/actions/Auth'; // import { db, auth } from 'auth/FirebaseAuth';\n\nimport { Form, Input, Alert, Row, Col, Button, Card, Modal, notification } from \"antd\";\nimport { GitlabOutlined, ThunderboltTwoTone, LoadingOutlined } from '@ant-design/icons';\nimport { MetamaskService } from 'services/MetamaskService';\nimport detectEthereumProvider from '@metamask/detect-provider';\n\nconst ConnectToMetamask = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  const metamaskInit = async () => {\n    const provider = await detectEthereumProvider();\n\n    if (provider) {\n      notification.info({\n        message: 'Notification',\n        description: 'Ethereum successfully detected!',\n        placement: 'topRight'\n      });\n      const chainId = await provider.request({\n        method: 'eth_chainId'\n      });\n    } else {\n      // if the provider is not detected, detectEthereumProvider resolves to null\n      console.error('Please install MetaMask!', error);\n      notification.warning({\n        message: 'Notification',\n        description: 'Please install MetaMask!',\n        placement: 'topRight'\n      });\n    }\n  };\n\n  const showModal = () => {\n    setIsModalVisible(true);\n    metamaskInit();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `d-flex align-items-center justify-content-between mb-4`,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        icon: /*#__PURE__*/_jsxDEV(ThunderboltTwoTone, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 18\n        }, this),\n        type: \"default\",\n        block: true,\n        onClick: showModal,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"MetaMask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Wallet Connect\",\n      visible: isModalVisible,\n      onCancel: handleCancel,\n      centered: true,\n      maskClosable: false,\n      footer: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleCancel,\n        children: \" Cancel \"\n      }, \"Cancle\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 19\n      }, this)],\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(LoadingOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 18\n        }, this), \" Connect MetaMask to TACTION to proceed\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ConnectToMetamask, \"ENqVYxPlC7FZXFc8uAXchswdtGM=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ConnectToMetamask;\nexport default ConnectToMetamask;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConnectToMetamask\");","map":{"version":3,"sources":["/workspace/tation_authByWallet/src/views/auth-views/components/ConnectToMetamask.js"],"names":["React","useEffect","useState","useSelector","useDispatch","singInwithPortis","Form","Input","Alert","Row","Col","Button","Card","Modal","notification","GitlabOutlined","ThunderboltTwoTone","LoadingOutlined","MetamaskService","detectEthereumProvider","ConnectToMetamask","dispatch","isModalVisible","setIsModalVisible","handleCancel","metamaskInit","provider","info","message","description","placement","chainId","request","method","console","error","warning","showModal"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,gBAAT,QAAiC,oBAAjC,C,CACA;;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,KAAtB,EAA6BC,GAA7B,EAAkCC,GAAlC,EAAuCC,MAAvC,EAA+CC,IAA/C,EAAqDC,KAArD,EAA4DC,YAA5D,QAAiF,MAAjF;AACA,SAAWC,cAAX,EAA2BC,kBAA3B,EAA+CC,eAA/C,QAAqE,mBAArE;AACA,SAAQC,eAAR,QAA8B,0BAA9B;AACA,OAAOC,sBAAP,MAAmC,2BAAnC;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AAI9B,QAAMC,QAAQ,GAAGjB,WAAW,EAA5B;AACA,QAAM,CAACkB,cAAD,EAAiBC,iBAAjB,IAAsCrB,QAAQ,CAAC,KAAD,CAApD;;AACA,QAAMsB,YAAY,GAAG,MAAM;AAACD,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AAA0B,GAAtD;;AAEA,QAAME,YAAY,GAAG,YAAY;AAChC,UAAMC,QAAQ,GAAG,MAAMP,sBAAsB,EAA7C;;AACG,QAAIO,QAAJ,EAAc;AACbZ,MAAAA,YAAY,CAACa,IAAb,CAAkB;AACrBC,QAAAA,OAAO,EAAE,cADY;AAErBC,QAAAA,WAAW,EAAE,iCAFQ;AAGrBC,QAAAA,SAAS,EAAE;AAHU,OAAlB;AAKH,YAAMC,OAAO,GAAG,MAAML,QAAQ,CAACM,OAAT,CAAiB;AACvCC,QAAAA,MAAM,EAAE;AAD+B,OAAjB,CAAtB;AAGD,KATG,MASG;AACL;AACAC,MAAAA,OAAO,CAACC,KAAR,CAAc,0BAAd,EAA0CA,KAA1C;AACMrB,MAAAA,YAAY,CAACsB,OAAb,CAAqB;AAC3BR,QAAAA,OAAO,EAAE,cADkB;AAE3BC,QAAAA,WAAW,EAAE,0BAFc;AAG3BC,QAAAA,SAAS,EAAE;AAHgB,OAArB;AAKP;AACE,GApBH;;AAsBA,QAAMO,SAAS,GAAG,MAAM;AACvBd,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACGE,IAAAA,YAAY;AAEd,GAJF;;AAQD,sBACC;AAAA,4BACE;AAAK,MAAA,SAAS,EAAG,wDAAjB;AAAA,6BACD,QAAC,MAAD;AAAQ,QAAA,IAAI,eAAE,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,gBAAd;AAAsC,QAAA,IAAI,EAAC,SAA3C;AAAqD,QAAA,KAAK,MAA1D;AAA4D,QAAA,OAAO,EAAEY,SAArE;AAAA,+BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADC;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,KAAD;AAAO,MAAA,KAAK,EAAC,gBAAb;AACE,MAAA,OAAO,EAAEf,cADX;AAEE,MAAA,QAAQ,EAAEE,YAFZ;AAGA,MAAA,QAAQ,EAAE,IAHV;AAGgB,MAAA,YAAY,EAAE,KAH9B;AAIK,MAAA,MAAM,EAAE,cAAC,QAAC,MAAD;AAAqB,QAAA,OAAO,EAAEA,YAA9B;AAAA;AAAA,SAAY,QAAZ;AAAA;AAAA;AAAA;AAAA,cAAD,CAJb;AAAA,6BAMU;AAAA,gCAAG,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,gBAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AANV;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,kBADD;AAiBA,CAvDD;;GAAMJ,iB;UAIahB,W;;;KAJbgB,iB;AA6DN,eAAeA,iBAAf","sourcesContent":["import React , {useEffect, useState} from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { singInwithPortis,} from 'redux/actions/Auth';\n// import { db, auth } from 'auth/FirebaseAuth';\nimport { Form, Input, Alert, Row, Col, Button, Card, Modal, notification  } from \"antd\";\nimport {   GitlabOutlined, ThunderboltTwoTone, LoadingOutlined} from '@ant-design/icons';\nimport {MetamaskService} from 'services/MetamaskService'\nimport detectEthereumProvider from '@metamask/detect-provider'\n\nconst ConnectToMetamask = () => {\n\t\n\n\t\n  const dispatch = useDispatch()\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const handleCancel = () => {setIsModalVisible(false);};\n  \n  const metamaskInit = async () => {\n\t  const provider = await detectEthereumProvider()\n      if (provider) {\n\t\t     notification.info({\n\t\t\t\tmessage: 'Notification',\n\t\t\t\tdescription: 'Ethereum successfully detected!',\n\t\t\t\tplacement: 'topRight',\n\t\t\t  });\n \t\t\tconst chainId = await provider.request({\n\t\t\t\tmethod: 'eth_chainId'\n\t\t\t  })\n\t\t} else {\n\t\t  // if the provider is not detected, detectEthereumProvider resolves to null\n\t\t  console.error('Please install MetaMask!', error)\n\t\t\t\t\t     notification.warning({\n\t\t\t\tmessage: 'Notification',\n\t\t\t\tdescription: 'Please install MetaMask!',\n\t\t\t\tplacement: 'topRight',\n\t\t\t  });\n\t\t}\n\t\t  }\n\t \n  const showModal = () => {\n\t  setIsModalVisible(true)\n      metamaskInit();\n\t  \n\t  };\t\n\t\n\n\t\n\treturn (\n\t\t<>\n\t\t  <div className={`d-flex align-items-center justify-content-between mb-4`}>\n\t\t\t<Button icon={<ThunderboltTwoTone />} type=\"default\" block  onClick={showModal}>\n\t\t\t\t<span>MetaMask</span>\n\t\t\t</Button>\n\t\t   </div>\n\t \t\t<Modal title=\"Wallet Connect\" \n\t\t\t   visible={isModalVisible} \n\t\t\t   onCancel={handleCancel}  \n\t\t\t\tcentered={true} maskClosable={false}\n\t\t       footer={[<Button key=\"Cancle\" onClick={handleCancel}> Cancel </Button>]}\n\t\t\t>\n              <p><LoadingOutlined /> Connect MetaMask to TACTION to proceed</p>\n        \t</Modal>\n  \t\t </>\n\t)\n}\n\n\n\n\n\nexport default ConnectToMetamask"]},"metadata":{},"sourceType":"module"}