{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/workspace/tation_authByWallet/src/views/app-views/dashboard/wallet/IsUserRegistered.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { CloseCircleTwoTone, CloseCircleOutlined, CheckCircleTwoTone, CheckCircleOutlined, LoadingOutlined } from '@ant-design/icons';\nimport { Spin, Button, Modal } from 'antd';\nimport Portis from '@portis/web3';\nimport Web3 from 'web3';\nimport { coopData_contract } from 'services/AddAndABI';\n\nconst RegisteredYes = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      className: \"mb-2 bt-2\",\n      type: \"primary\",\n      icon: /*#__PURE__*/_jsxDEV(CheckCircleOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 56\n      }, this),\n      size: \"small\",\n      block: true,\n      ghost: true,\n      children: \"User Confirmed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n};\n\n_c = RegisteredYes;\n\nconst RegisteredNo = ({\n  address\n}) => {\n  _s();\n\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const modalOff = () => {\n    setIsModalVisible(false);\n  };\n\n  const registerUser = address => {\n    setIsModalVisible(true);\n    coopData_contract.methods.setUser().send({\n      from: address,\n      gas: '0x1CD4C'\n    }).on(\"transactionHash\", function (hash) {\n      console.log(\"pending\");\n      console.log(hash);\n    }).on(\"confirmation\", function (receipt) {\n      console.log(\"confirmation\");\n      console.log(receipt);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      className: \"mb-2 bt-2\",\n      type: \"primary\",\n      icon: /*#__PURE__*/_jsxDEV(CloseCircleOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 56\n      }, this),\n      size: \"small\",\n      onClick: () => {\n        registerUser(address);\n      },\n      danger: true,\n      block: true,\n      children: \"User Registration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Registering User\",\n      visible: isModalVisible,\n      onCancel: modalOff,\n      maskClosable: false,\n      centered: true,\n      footer: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: modalOff,\n        children: \" Cancel \"\n      }, \"Cancle\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }, this)],\n      children: [/*#__PURE__*/_jsxDEV(LoadingOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ml-2\",\n        children: \" Now Loading Wallet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"It might takes few seconds to show your wallet successfully\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(RegisteredNo, \"ZFwHEtl1ZQoNaflbPbQvGOHlSaM=\");\n\n_c2 = RegisteredNo;\n\nconst IsUserRegistered = () => {\n  _s2();\n\n  const userInfo = useSelector(state => state.auth.userInfo);\n  const address = userInfo.address;\n  const [isRegistered, setIsRegistered] = useState(false);\n\n  const checkIfRegistered = async address => {\n    await coopData_contract.methods.getUser(address).call().then(res => setIsRegistered(res.userAddress));\n  };\n\n  useEffect(() => {\n    checkIfRegistered(address);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!isRegistered && /*#__PURE__*/_jsxDEV(Button, {\n      className: \"mb-2 bt-2\",\n      type: \"primary\",\n      size: \"small\",\n      loading: true,\n      block: true,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"User Confirmation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), isRegistered && isRegistered == '0x0000000000000000000000000000000000000000' && /*#__PURE__*/_jsxDEV(RegisteredNo, {\n      address: address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 83\n    }, this), isRegistered && isRegistered !== '0x0000000000000000000000000000000000000000' && /*#__PURE__*/_jsxDEV(RegisteredYes, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 85\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(IsUserRegistered, \"u65jWxpxL33L9+XeMu/ShF40lqE=\", false, function () {\n  return [useSelector];\n});\n\n_c3 = IsUserRegistered;\nexport default IsUserRegistered;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"RegisteredYes\");\n$RefreshReg$(_c2, \"RegisteredNo\");\n$RefreshReg$(_c3, \"IsUserRegistered\");","map":{"version":3,"sources":["/workspace/tation_authByWallet/src/views/app-views/dashboard/wallet/IsUserRegistered.js"],"names":["React","useState","useEffect","useSelector","CloseCircleTwoTone","CloseCircleOutlined","CheckCircleTwoTone","CheckCircleOutlined","LoadingOutlined","Spin","Button","Modal","Portis","Web3","coopData_contract","RegisteredYes","RegisteredNo","address","isModalVisible","setIsModalVisible","modalOff","registerUser","methods","setUser","send","from","gas","on","hash","console","log","receipt","IsUserRegistered","userInfo","state","auth","isRegistered","setIsRegistered","checkIfRegistered","getUser","call","then","res","userAddress"],"mappings":"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","sourcesContent":["import  React, {useState, useEffect} from 'react';\nimport { useSelector } from 'react-redux'\nimport { \n  CloseCircleTwoTone,\n\tCloseCircleOutlined,\n\tCheckCircleTwoTone,\n\tCheckCircleOutlined,\n\tLoadingOutlined,\n} from '@ant-design/icons';\nimport { Spin, Button, Modal } from 'antd';\nimport Portis from '@portis/web3';\nimport Web3 from 'web3'\nimport {coopData_contract} from 'services/AddAndABI'\n\n\nconst RegisteredYes = () => {\n\t\n\treturn(\n\t\t<>\n\t\t<Button className=\"mb-2 bt-2\" type=\"primary\"  icon= {<CheckCircleOutlined />} size='small'  block ghost >\n\t\t\tUser Confirmed\n\t\t </Button>\n\t\t</>\n\t)\n}\n\nconst RegisteredNo = ({address}) => {\n\t\t    const [isModalVisible, setIsModalVisible] = useState(false);\n\t\t\tconst modalOff = () => {setIsModalVisible(false);};\t\n\t\n\t\t\tconst registerUser = (address) => {\n\t\t\t\t    setIsModalVisible(true)\n\t\t\t\t\tcoopData_contract.methods\n\t\t\t\t\t  .setUser()\n       \t\t\t\t     .send({ from: address, gas: '0x1CD4C'})\n\t\t\t\t\t  .on(\"transactionHash\", function(hash) {\n\t\t\t\t\t\t console.log(\"pending\");\n\t\t\t\t\t\t console.log(hash)\n\t\t\t\t\t  })\n\t\t\t\t\t  .on(\"confirmation\", function(receipt) {\n\t\t\t\t\t\t console.log(\"confirmation\");\n\t\t\t\t\t\t console.log(receipt)\n\t\t\t\t\t  });\n\t\t\t\t}\t\n\t\n\t\n\treturn(\n\t\t<>\n\t\t <Button className=\"mb-2 bt-2\" type=\"primary\" icon= {<CloseCircleOutlined />} size='small' onClick={()=>{registerUser(address)}} danger block>\n\t\t\tUser Registration\n\t\t </Button>\n\t\t\t<Modal title=\"Registering User\" \n\t\t   visible={isModalVisible} \n\t\t   onCancel={modalOff}  \n\t\t   maskClosable={false} centered={true}\n\t\t   footer={[<Button key=\"Cancle\" onClick={modalOff}> Cancel </Button>]}\n\t\t   >\n\t\t  <LoadingOutlined /> \n\t\t  <span className=\"ml-2\"> Now Loading Wallet.</span>\n\t\t  <p>It might takes few seconds to show your wallet successfully</p>\n\t\t</Modal>\n\t\t</>\n\t)\n}\n\n\nconst IsUserRegistered = () => {\n\tconst userInfo = useSelector(state => state.auth.userInfo)\n\tconst address =  userInfo.address\n\t\n\t\n\tconst [isRegistered, setIsRegistered] = useState(false)\n\tconst checkIfRegistered = async (address) => {\n\tawait coopData_contract.methods\n\t.getUser(address)\n\t.call().then(res => setIsRegistered(res.userAddress));\n\t}\n\n\tuseEffect(()=>{\n\tcheckIfRegistered(address)\n\t},[]\n\t)\n\n  return (\n    <>\n\t{!isRegistered && \n\t     <Button className=\"mb-2 bt-2\" type=\"primary\"   size='small' loading block>\n\t\t\t  <span >User Confirmation</span>\n\t\t </Button>}\n\t{isRegistered && (isRegistered=='0x0000000000000000000000000000000000000000') && <RegisteredNo address={address}/>}\n\t{isRegistered && (isRegistered !=='0x0000000000000000000000000000000000000000') && <RegisteredYes />}\n\t\t \n    </>\n  )\n}\n\n\nexport default IsUserRegistered\n "]},"metadata":{},"sourceType":"module"}