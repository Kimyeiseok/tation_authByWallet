{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/workspace/tation_authByWallet/src/views/auth-views/components/ConnectToMetamask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { singInwithWallet } from 'redux/actions/Auth'; // import { db, auth } from 'auth/FirebaseAuth';\n\nimport { Form, Input, Alert, Row, Col, Button, Card, Modal, notification } from \"antd\";\nimport { GitlabOutlined, ThunderboltTwoTone, LoadingOutlined } from '@ant-design/icons'; //import {metamaskInit} from 'services/MetamaskService'\n\nimport detectEthereumProvider from '@metamask/detect-provider';\n\nconst ConnectToMetamask = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  const [walletAddress, setWalletAddress] = useState(null);\n\n  const showModal = () => {\n    setIsModalVisible(true); // metamaskInit();\n\n    getAccount();\n  };\n\n  const handleAccountsChanged = accounts => {\n    if (accounts.length === 0) {\n      notification.warning({\n        message: 'Notification',\n        description: '메타마스크 지갑에 로그인 해주세요',\n        placement: 'topRight'\n      });\n    } else if (accounts[0] !== walletAddress) {\n      setWalletAddress(accounts[0]);\n    }\n  };\n\n  const getAccount = async () => {\n    const provider = await detectEthereumProvider();\n\n    if (provider) {\n      window.ethereum.request({\n        method: 'eth_requestAccounts'\n      }).then(handleAccountsChanged).catch(err => {\n        notification.warning({\n          message: 'Notification',\n          description: err.message,\n          placement: 'topRight'\n        });\n      });\n    } else {\n      notification.warning({\n        message: 'Notification',\n        description: '메타마스크가 설치되어 있지 않습니다.',\n        placement: 'topRight'\n      });\n    }\n  };\n\n  useEffect(() => {\n    console.log(walletAddress); // dispatch(singInwithWallet({walletAddress}))\n  }, [walletAddress]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `d-flex align-items-center justify-content-between mb-4`,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        icon: /*#__PURE__*/_jsxDEV(ThunderboltTwoTone, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 18\n        }, this),\n        type: \"default\",\n        block: true,\n        onClick: showModal,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"MetaMask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Wallet Connect\",\n      visible: isModalVisible,\n      onCancel: handleCancel,\n      centered: true,\n      maskClosable: false,\n      footer: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleCancel,\n        children: \" Cancel \"\n      }, \"Cancle\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 19\n      }, this)],\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(LoadingOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 18\n        }, this), \" Connect MetaMask to TACTION to proceed\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ConnectToMetamask, \"gZe3IBBUaRTRpzuQ13nIZT37LrQ=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ConnectToMetamask;\nexport default ConnectToMetamask;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConnectToMetamask\");","map":{"version":3,"sources":["/workspace/tation_authByWallet/src/views/auth-views/components/ConnectToMetamask.js"],"names":["React","useEffect","useState","useSelector","useDispatch","singInwithWallet","Form","Input","Alert","Row","Col","Button","Card","Modal","notification","GitlabOutlined","ThunderboltTwoTone","LoadingOutlined","detectEthereumProvider","ConnectToMetamask","dispatch","isModalVisible","setIsModalVisible","handleCancel","walletAddress","setWalletAddress","showModal","getAccount","handleAccountsChanged","accounts","length","warning","message","description","placement","provider","window","ethereum","request","method","then","catch","err","console","log"],"mappings":"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","sourcesContent":["import React , {useEffect, useState} from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { singInwithWallet,} from 'redux/actions/Auth';\n// import { db, auth } from 'auth/FirebaseAuth';\nimport { Form, Input, Alert, Row, Col, Button, Card, Modal, notification  } from \"antd\";\nimport {   GitlabOutlined, ThunderboltTwoTone, LoadingOutlined} from '@ant-design/icons';\n//import {metamaskInit} from 'services/MetamaskService'\nimport detectEthereumProvider from '@metamask/detect-provider'\n\nconst ConnectToMetamask = () => {\n\t\n\n  const dispatch = useDispatch()\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const handleCancel = () => {setIsModalVisible(false);};\n  const [walletAddress, setWalletAddress] = useState(null);\n\t \n  const showModal = () => {\n\t  setIsModalVisible(true)\n      // metamaskInit();\n      getAccount()\n\t  };\t\n\nconst handleAccountsChanged = (accounts)=> {\n\t if (accounts.length === 0) {\n\t\t  notification.warning({ message: 'Notification', description: '메타마스크 지갑에 로그인 해주세요', placement: 'topRight', }); \n  \t  } else if (accounts[0] !== walletAddress) {\n\t\t  setWalletAddress(accounts[0])\n\t  }\n\t}\t\n\t\n const getAccount = async () =>{\n\t const provider = await detectEthereumProvider();\n\t if (provider) {\n\t\t window.ethereum.request({ method: 'eth_requestAccounts' })\n\t\t\t  .then(handleAccountsChanged)\n\t\t\t  .catch((err) => {\n\t\t\t\tnotification.warning({message: 'Notification',\tdescription: err.message,\tplacement: 'topRight', }); \n\t\t\t  });  \n\t }else{\n\t\t notification.warning({message: 'Notification', description: '메타마스크가 설치되어 있지 않습니다.', placement: 'topRight', }); \n\t } \n }\n\n useEffect(()=>{\n\t console.log(walletAddress)\n\t // dispatch(singInwithWallet({walletAddress}))\n },[walletAddress])\n\t\n\t\n\treturn (\n\t\t<>\n\t\t  <div className={`d-flex align-items-center justify-content-between mb-4`}>\n\t\t\t<Button icon={<ThunderboltTwoTone />} type=\"default\" block  onClick={showModal}>\n\t\t\t\t<span>MetaMask</span>\n\t\t\t</Button>\n\t\t   </div>\n\t \t\t<Modal title=\"Wallet Connect\" \n\t\t\t   visible={isModalVisible} \n\t\t\t   onCancel={handleCancel}  \n\t\t\t\tcentered={true} maskClosable={false}\n\t\t       footer={[<Button key=\"Cancle\" onClick={handleCancel}> Cancel </Button>]}\n\t\t\t>\n              <p><LoadingOutlined /> Connect MetaMask to TACTION to proceed</p>\n        \t</Modal>\n  \t\t </>\n\t)\n}\n\n\n\n\n\nexport default ConnectToMetamask"]},"metadata":{},"sourceType":"module"}