{"ast":null,"code":"import axios from 'axios';\nconst TAC_ADDRESS = '0xdeeb6091a5adc78fa0332bee5a38a8908b6b566e';\nconst WALLET_ADDRESS = '0x0c00d314465231bcca8c980091e75fabd98af84a';\nconst API_KEY = 'G5GY355XRA4PQPBKWX43CR2T64EDV4T9UN';\nexport const getEtherBalance = async (address) => await axios.get(`https://api.etherscan.io/api?module=account&action=balance&address=${WALLET_ADDRESS}&tag=latest&apikey=${API_KEY}`).then(eth => (eth.data.result / 1000000000000000000).toFiexed(4));\nexport const getTacBalance = async (address) => await axios.get(`https://api.etherscan.io/api?module=account&action=tokenbalance&contractaddress=${TAC_ADDRESS}&address=${WALLET_ADDRESS}&tag=latest&apikey=${API_KEY}`).then(tac => tac.data.result / 1000000000000000000); // export const getBalance = async (address) =>  await contract.methods.balanceOf(address).call().then(result => (result/1000000000000000000))","map":{"version":3,"sources":["/workspace/tation_authByWallet/src/services/EtherScanService.js"],"names":["axios","TAC_ADDRESS","WALLET_ADDRESS","API_KEY","getEtherBalance","address","get","then","eth","data","result","toFiexed","getTacBalance","tac"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,WAAW,GAAG,4CAApB;AACA,MAAMC,cAAc,GAAG,4CAAvB;AACA,MAAMC,OAAO,GAAG,oCAAhB;AAEA,OAAO,MAAMC,eAAe,GAAG,OAAOC,OAAP,KAC9B,MAAML,KAAK,CAACM,GAAN,CAAW,sEAAqEJ,cAAe,sBAAqBC,OAAQ,EAA5H,EACNI,IADM,CACDC,GAAG,IAAI,CAACA,GAAG,CAACC,IAAJ,CAASC,MAAT,GAAgB,mBAAjB,EAAsCC,QAAtC,CAA+C,CAA/C,CADN,CADA;AAKP,OAAO,MAAMC,aAAa,GAAG,OAAOP,OAAP,KAC7B,MAAML,KAAK,CAACM,GAAN,CAAW,mFAAkFL,WAAY,YAAWC,cAAe,sBAAqBC,OAAQ,EAAhK,EAAmKI,IAAnK,CAAwKM,GAAG,IAAKA,GAAG,CAACJ,IAAJ,CAASC,MAAT,GAAgB,mBAAhM,CADC,C,CAMP","sourcesContent":["import axios from 'axios'\n\nconst TAC_ADDRESS = '0xdeeb6091a5adc78fa0332bee5a38a8908b6b566e'\nconst WALLET_ADDRESS = '0x0c00d314465231bcca8c980091e75fabd98af84a'\nconst API_KEY = 'G5GY355XRA4PQPBKWX43CR2T64EDV4T9UN'\n\nexport const getEtherBalance = async (address) => \n await axios.get(`https://api.etherscan.io/api?module=account&action=balance&address=${WALLET_ADDRESS}&tag=latest&apikey=${API_KEY}`)\n.then(eth => (eth.data.result/1000000000000000000).toFiexed(4))\n\n\nexport const getTacBalance = async (address) => \nawait axios.get(`https://api.etherscan.io/api?module=account&action=tokenbalance&contractaddress=${TAC_ADDRESS}&address=${WALLET_ADDRESS}&tag=latest&apikey=${API_KEY}`).then(tac => (tac.data.result/1000000000000000000))\n\n\n\n\n// export const getBalance = async (address) =>  await contract.methods.balanceOf(address).call().then(result => (result/1000000000000000000))\n\n\n\n"]},"metadata":{},"sourceType":"module"}