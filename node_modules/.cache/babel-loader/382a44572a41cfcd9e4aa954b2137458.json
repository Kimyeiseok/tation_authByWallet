{"ast":null,"code":"import { all, takeEvery, put, fork, call } from 'redux-saga/effects';\nimport { AUTH_TOKEN, SIGNIN, SIGNIN_WALLET, SIGNOUT, SIGNUP, SIGNIN_WITH_GOOGLE, SIGNIN_WITH_FACEBOOK } from '../constants/Auth';\nimport { showAuthMessage, authenticated, signOutSuccess, signUpSuccess, signInWithGoogleAuthenticated, signInWithFacebookAuthenticated } from \"../actions/Auth\";\nimport FirebaseService from 'services/FirebaseService';\nexport function* signInWithFBEmail() {\n  yield takeEvery(SIGNIN, function* ({\n    payload\n  }) {\n    const {\n      email,\n      password\n    } = payload;\n\n    try {\n      const user = yield call(FirebaseService.signInEmailRequest, email, password);\n\n      if (user.message) {\n        yield put(showAuthMessage(user.message));\n      } else {\n        localStorage.setItem(AUTH_TOKEN, user.user.uid);\n        yield put(authenticated(user.user.uid));\n      }\n    } catch (err) {\n      yield put(showAuthMessage(err));\n    }\n  });\n}\nexport function* signInWithWalletSaga() {\n  yield takeEvery(SIGNIN_WALLET, function* ({\n    payload\n  }) {\n    const {\n      walletAddress,\n      walletType\n    } = payload;\n    console.log(walletAddress);\n\n    try {\n      const userInfo = yield call(FirebaseService.dbGetAccount, walletAddress);\n\n      if (userInfo) {\n        console.log('있다');\n      } else {\n        console.log('없다');\n      } // if (userInfo){\n      // \tlocalStorage.setItem(AUTH_TOKEN, walletAddress);\n      // \tyield put(authenticated(walletAddress));\n      // }else{\n      // \tyield call(FirebaseService.dbCreateAccount, walletAddress, walletType);\n      // \tlocalStorage.setItem(AUTH_TOKEN, walletAddress);\n      // \tyield put(authenticated(walletAddress));\n      // }\n\n    } catch (err) {\n      yield put(showAuthMessage(err));\n    }\n  });\n}\nexport function* signOut() {\n  yield takeEvery(SIGNOUT, function* () {\n    try {\n      localStorage.removeItem(AUTH_TOKEN);\n      yield put(signOutSuccess());\n    } catch (err) {\n      yield put(showAuthMessage(err));\n    }\n  });\n}\nexport function* signUpWithFBEmail() {\n  yield takeEvery(SIGNUP, function* ({\n    payload\n  }) {\n    const {\n      email,\n      password\n    } = payload;\n\n    try {\n      const user = yield call(FirebaseService.signUpEmailRequest, email, password);\n\n      if (user.message) {\n        yield put(showAuthMessage(user.message));\n      } else {\n        localStorage.setItem(AUTH_TOKEN, user.user.uid);\n        yield put(signUpSuccess(user.user.uid));\n      }\n    } catch (error) {\n      yield put(showAuthMessage(error));\n    }\n  });\n}\nexport function* signInWithFBGoogle() {\n  yield takeEvery(SIGNIN_WITH_GOOGLE, function* () {\n    try {\n      const user = yield call(FirebaseService.signInGoogleRequest);\n\n      if (user.message) {\n        yield put(showAuthMessage(user.message));\n      } else {\n        localStorage.setItem(AUTH_TOKEN, user.user.uid);\n        yield put(signInWithGoogleAuthenticated(user.user.uid));\n      }\n    } catch (error) {\n      yield put(showAuthMessage(error));\n    }\n  });\n}\nexport function* signInWithFacebook() {\n  yield takeEvery(SIGNIN_WITH_FACEBOOK, function* () {\n    try {\n      const user = yield call(FirebaseService.signInFacebookRequest);\n\n      if (user.message) {\n        yield put(showAuthMessage(user.message));\n      } else {\n        localStorage.setItem(AUTH_TOKEN, user.user.uid);\n        yield put(signInWithFacebookAuthenticated(user.user.uid));\n      }\n    } catch (error) {\n      yield put(showAuthMessage(error));\n    }\n  });\n}\nexport default function* rootSaga() {\n  yield all([fork(signInWithFBEmail), fork(signInWithWalletSaga), fork(signOut), fork(signUpWithFBEmail), fork(signInWithFBGoogle), fork(signInWithFacebook)]);\n}","map":{"version":3,"sources":["/workspace/tation_authByWallet/src/redux/sagas/Auth.js"],"names":["all","takeEvery","put","fork","call","AUTH_TOKEN","SIGNIN","SIGNIN_WALLET","SIGNOUT","SIGNUP","SIGNIN_WITH_GOOGLE","SIGNIN_WITH_FACEBOOK","showAuthMessage","authenticated","signOutSuccess","signUpSuccess","signInWithGoogleAuthenticated","signInWithFacebookAuthenticated","FirebaseService","signInWithFBEmail","payload","email","password","user","signInEmailRequest","message","localStorage","setItem","uid","err","signInWithWalletSaga","walletAddress","walletType","console","log","userInfo","dbGetAccount","signOut","removeItem","signUpWithFBEmail","signUpEmailRequest","error","signInWithFBGoogle","signInGoogleRequest","signInWithFacebook","signInFacebookRequest","rootSaga"],"mappings":"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","sourcesContent":["import { all, takeEvery, put, fork, call } from 'redux-saga/effects';\nimport {\n\tAUTH_TOKEN,\n\tSIGNIN,\n\tSIGNIN_WALLET,\n\tSIGNOUT,\n\tSIGNUP,\n\tSIGNIN_WITH_GOOGLE,\n\tSIGNIN_WITH_FACEBOOK\n} from '../constants/Auth';\nimport {\n\tshowAuthMessage,\n\tauthenticated,\n\tsignOutSuccess,\n\tsignUpSuccess,\n\tsignInWithGoogleAuthenticated,\n\tsignInWithFacebookAuthenticated\n} from \"../actions/Auth\";\n\nimport FirebaseService from 'services/FirebaseService'\n\nexport function* signInWithFBEmail() {\n  yield takeEvery(SIGNIN, function* ({payload}) {\n\t\tconst {email, password} = payload;\n\t\ttry {\n\t\t\tconst user = yield call(FirebaseService.signInEmailRequest, email, password);\n\t\t\tif (user.message) {\n\t\t\t\tyield put(showAuthMessage(user.message));\n\t\t\t} else {\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\n\t\t\t\tyield put(authenticated(user.user.uid));\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tyield put(showAuthMessage(err));\n\t\t}\n\t});\n}\n\nexport function* signInWithWalletSaga() {\n  yield takeEvery(SIGNIN_WALLET, function* ({payload}) {\n\t\tconst {walletAddress, walletType} = payload;\n\t     console.log(walletAddress)\n\t    try{\n\t\t\tconst userInfo = yield call(FirebaseService.dbGetAccount, walletAddress);\n\t\t\tif (userInfo){\n\t\t\t\tconsole.log('있다')\n\t\t\t}else{\n\t\t\t\tconsole.log('없다')\n\t\t\t}\n\t\t\t\n\t\t\t// if (userInfo){\n\t\t\t// \tlocalStorage.setItem(AUTH_TOKEN, walletAddress);\n\t\t\t// \tyield put(authenticated(walletAddress));\n\t\t\t// }else{\n\t\t\t// \tyield call(FirebaseService.dbCreateAccount, walletAddress, walletType);\n\t\t\t// \tlocalStorage.setItem(AUTH_TOKEN, walletAddress);\n\t\t\t// \tyield put(authenticated(walletAddress));\n\t\t\t// }\n\t\t\t\n\t\t}catch(err){\n\t\t\tyield put(showAuthMessage(err));\n\t\t}    \n\t});\n}\n\n\n\nexport function* signOut() {\n  yield takeEvery(SIGNOUT, function* () {\n\t\ttry {\n\t\t\tlocalStorage.removeItem(AUTH_TOKEN);\n\t\t\tyield put(signOutSuccess());\n\n\t\t} catch (err) {\n\t\t\tyield put(showAuthMessage(err));\n\t\t}\n\t});\n}\n\nexport function* signUpWithFBEmail() {\n  yield takeEvery(SIGNUP, function* ({payload}) {\n\t\tconst {email, password} = payload;\n\t\ttry {\n\t\t\tconst user = yield call(FirebaseService.signUpEmailRequest, email, password);\n\t\t\tif (user.message) {\n\t\t\t\tyield put(showAuthMessage(user.message));\n\t\t\t} else {\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\n\t\t\t\tyield put(signUpSuccess(user.user.uid));\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tyield put(showAuthMessage(error));\n\t\t}\n\t}\n\t);\n}\n\nexport function* signInWithFBGoogle() {\n  yield takeEvery(SIGNIN_WITH_GOOGLE, function* () {\n\t\ttry {\n\t\t\tconst user = yield call(FirebaseService.signInGoogleRequest);\n\t\t\tif (user.message) {\n\t\t\t\tyield put(showAuthMessage(user.message));\n\t\t\t} else {\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\n\t\t\t\tyield put(signInWithGoogleAuthenticated(user.user.uid));\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tyield put(showAuthMessage(error));\n\t\t}\n\t});\n}\n\nexport function* signInWithFacebook() {\n  yield takeEvery(SIGNIN_WITH_FACEBOOK, function* () {\n\t\ttry {\n\t\t\tconst user = yield call(FirebaseService.signInFacebookRequest);\n\t\t\tif (user.message) {\n\t\t\t\tyield put(showAuthMessage(user.message));\n\t\t\t} else {\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\n\t\t\t\tyield put(signInWithFacebookAuthenticated(user.user.uid));\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tyield put(showAuthMessage(error));\n\t\t}\n\t});\n}\n\nexport default function* rootSaga() {\n  yield all([\n\t\tfork(signInWithFBEmail),\n\t    fork(signInWithWalletSaga),\n\t\tfork(signOut),\n\t\tfork(signUpWithFBEmail),\n\t\tfork(signInWithFBGoogle),\n\t\tfork(signInWithFacebook)\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}