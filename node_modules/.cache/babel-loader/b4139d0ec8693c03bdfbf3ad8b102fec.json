{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/workspace/tation_authByWallet/src/views/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setUserInfo } from 'redux/actions/Auth';\nimport AppLayout from \"layouts/app-layout\";\nimport AuthLayout from 'layouts/auth-layout';\nimport AppLocale from \"lang\";\nimport { IntlProvider } from \"react-intl\";\nimport { ConfigProvider } from 'antd';\nimport { APP_PREFIX_PATH, AUTH_PREFIX_PATH } from 'configs/AppConfig';\nimport { auth, db } from 'auth/FirebaseAuth';\n\nfunction RouteInterceptor({\n  children,\n  isAuthenticated,\n  ...rest\n}) {\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: ({\n      location\n    }) => isAuthenticated ? children : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: AUTH_PREFIX_PATH,\n        state: {\n          from: location\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_c = RouteInterceptor;\nexport const Views = props => {\n  _s();\n\n  const {\n    locale,\n    location,\n    token\n  } = props; // const {token} = useSelector(state => state.auth);  \n  // const {locale, location} = useSelector(state => state.theme)\n\n  const dispatch = useDispatch();\n\n  const getUserInfo = async token => {\n    await db.collection(\"users\").doc(token).onSnapshot(doc => {\n      console.log(\"index.js : userInfo changed\");\n      console.log(doc.data());\n      dispatch(setUserInfo(doc.data()));\n    });\n  };\n\n  useEffect(() => {\n    token && getUserInfo(token);\n  }, [token]);\n  const currentAppLocale = AppLocale[locale];\n  return /*#__PURE__*/_jsxDEV(IntlProvider, {\n    locale: currentAppLocale.locale,\n    messages: currentAppLocale.messages,\n    children: /*#__PURE__*/_jsxDEV(ConfigProvider, {\n      locale: currentAppLocale.antd,\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Redirect, {\n            to: APP_PREFIX_PATH\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: AUTH_PREFIX_PATH,\n          children: /*#__PURE__*/_jsxDEV(AuthLayout, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RouteInterceptor, {\n          path: APP_PREFIX_PATH,\n          isAuthenticated: token,\n          children: /*#__PURE__*/_jsxDEV(AppLayout, {\n            location: location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Views, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c2 = Views;\n\nconst mapStateToProps = ({\n  theme,\n  auth\n}) => {\n  const {\n    locale\n  } = theme;\n  const {\n    token\n  } = auth;\n  return {\n    locale,\n    token\n  };\n};\n\nexport default withRouter(connect(mapStateToProps)(Views)); // export default withRouter(Views)\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RouteInterceptor\");\n$RefreshReg$(_c2, \"Views\");","map":{"version":3,"sources":["/workspace/tation_authByWallet/src/views/index.js"],"names":["React","useEffect","Route","Switch","Redirect","withRouter","connect","useDispatch","useSelector","setUserInfo","AppLayout","AuthLayout","AppLocale","IntlProvider","ConfigProvider","APP_PREFIX_PATH","AUTH_PREFIX_PATH","auth","db","RouteInterceptor","children","isAuthenticated","rest","location","pathname","state","from","Views","props","locale","token","dispatch","getUserInfo","collection","doc","onSnapshot","console","log","data","currentAppLocale","messages","antd","mapStateToProps","theme"],"mappings":"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","sourcesContent":["import React, {useEffect} from \"react\";\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setUserInfo,} from 'redux/actions/Auth';\nimport AppLayout from \"layouts/app-layout\";\nimport AuthLayout from 'layouts/auth-layout';\nimport AppLocale from \"lang\";\nimport { IntlProvider } from \"react-intl\";\nimport { ConfigProvider } from 'antd';\nimport { APP_PREFIX_PATH, AUTH_PREFIX_PATH } from 'configs/AppConfig'\nimport { auth, db } from 'auth/FirebaseAuth';\n\nfunction RouteInterceptor({ children, isAuthenticated, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        isAuthenticated ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: AUTH_PREFIX_PATH,\n              state: { from: location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nexport const Views = (props) => {\n   const { locale,  location, token } = props;\n   // const {token} = useSelector(state => state.auth);  \n   // const {locale, location} = useSelector(state => state.theme)\n  const dispatch = useDispatch()\n\t\n  const getUserInfo = async (token) => {\n       await  db.collection(\"users\").doc(token).onSnapshot((doc) => {\n          console.log(\"index.js : userInfo changed\");\n\t\t  console.log(doc.data())\n\t\t  dispatch(setUserInfo(doc.data()))\n   \t\t });\n  }\n  \n    useEffect(() => {\n\t  token && getUserInfo(token); \n    }, [token]);\t\n\t\n  \n  \n  const currentAppLocale = AppLocale[locale];\n  return (\n    <IntlProvider\n      locale={currentAppLocale.locale}\n      messages={currentAppLocale.messages}>\n      <ConfigProvider locale={currentAppLocale.antd}>\n        <Switch>\n          <Route exact path=\"/\">\n            <Redirect to={APP_PREFIX_PATH} />\n          </Route>\n          <Route path={AUTH_PREFIX_PATH}>\n            <AuthLayout />\n          </Route>\n          <RouteInterceptor path={APP_PREFIX_PATH} isAuthenticated={token}>\n            <AppLayout location={location}/>\n          </RouteInterceptor>\n        </Switch>\n      </ConfigProvider>\n    </IntlProvider>\n  )\n}\n\n\nconst mapStateToProps = ({ theme, auth }) => {\n  const { locale } =  theme;\n  const { token } = auth;\n  return { locale, token }\n};\n\nexport default withRouter(connect(mapStateToProps)(Views));\n// export default withRouter(Views)"]},"metadata":{},"sourceType":"module"}