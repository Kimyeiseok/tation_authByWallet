{"ast":null,"code":"import { auth, googleAuthProvider, facebookAuthProvider, db } from 'auth/FirebaseAuth';\nimport md5 from 'md5';\nconst FirebaseService = {};\n\nFirebaseService.signInEmailRequest = async (email, password) => await auth.signInWithEmailAndPassword(email, password).then(user => user).catch(err => err);\n\nFirebaseService.signInEmailRequest = async (email, password) => await auth.signInWithEmailAndPassword(email, password).then(user => user).catch(err => err);\n\nFirebaseService.signOutRequest = async () => await auth.signOut().then(user => user).catch(err => err);\n\nFirebaseService.signInGoogleRequest = async () => await auth.signInWithPopup(googleAuthProvider).then(user => user).catch(err => err);\n\nFirebaseService.signInFacebookRequest = async () => await auth.signInWithPopup(facebookAuthProvider).then(user => user).catch(err => err);\n\nFirebaseService.signUpEmailRequest = async (email, password) => await auth.createUserWithEmailAndPassword(email, password).then(user => user).catch(err => err);\n\nFirebaseService.dbGetAccount = async (walletAddress) => await db.collection(\"users\").doc(walletAddress).get().then(doc => {\n  return doc.data();\n});\n\nFirebaseService.dbCreateAccount = async walletAddress => {\n  await db.collection(\"users\").doc(walletAddress).set({\n    address: walletAddress,\n    name: '',\n    nationality: '',\n    gender: '',\n    division: '',\n    rankingPoint: '',\n    role: 'User',\n    Team: '',\n    profileImage: `http://gravatar.com/avatar/${md5(walletAddress)}?d=identicon`\n  }).catch(function (error) {\n    console.error(\"Error adding document: \", error);\n  });\n};\n\nexport default FirebaseService;","map":{"version":3,"sources":["/workspace/tation_authByWallet/src/services/FirebaseService.js"],"names":["auth","googleAuthProvider","facebookAuthProvider","db","md5","FirebaseService","signInEmailRequest","email","password","signInWithEmailAndPassword","then","user","catch","err","signOutRequest","signOut","signInGoogleRequest","signInWithPopup","signInFacebookRequest","signUpEmailRequest","createUserWithEmailAndPassword","dbGetAccount","walletAddress","collection","doc","get","data","dbCreateAccount","set","address","name","nationality","gender","division","rankingPoint","role","Team","profileImage","error","console"],"mappings":"AAAA,SAASA,IAAT,EAAeC,kBAAf,EAAmCC,oBAAnC,EAAyDC,EAAzD,QAAmE,mBAAnE;AACA,OAAOC,GAAP,MAAgB,KAAhB;AAEA,MAAMC,eAAe,GAAG,EAAxB;;AAEAA,eAAe,CAACC,kBAAhB,GAAqC,OAAOC,KAAP,EAAcC,QAAd,KACpC,MAAMR,IAAI,CAACS,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,EAAiDE,IAAjD,CAAsDC,IAAI,IAAIA,IAA9D,EAAoEC,KAApE,CAA0EC,GAAG,IAAIA,GAAjF,CADP;;AAGAR,eAAe,CAACC,kBAAhB,GAAqC,OAAOC,KAAP,EAAcC,QAAd,KACnC,MAAMR,IAAI,CAACS,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,EAAiDE,IAAjD,CAAsDC,IAAI,IAAIA,IAA9D,EAAoEC,KAApE,CAA0EC,GAAG,IAAIA,GAAjF,CADR;;AAGAR,eAAe,CAACS,cAAhB,GAAiC,YAChC,MAAMd,IAAI,CAACe,OAAL,GAAeL,IAAf,CAAoBC,IAAI,IAAIA,IAA5B,EAAkCC,KAAlC,CAAwCC,GAAG,IAAIA,GAA/C,CADP;;AAGAR,eAAe,CAACW,mBAAhB,GAAsC,YACpC,MAAMhB,IAAI,CAACiB,eAAL,CAAqBhB,kBAArB,EAAyCS,IAAzC,CAA8CC,IAAI,IAAIA,IAAtD,EAA4DC,KAA5D,CAAkEC,GAAG,IAAIA,GAAzE,CADR;;AAGAR,eAAe,CAACa,qBAAhB,GAAwC,YACtC,MAAMlB,IAAI,CAACiB,eAAL,CAAqBf,oBAArB,EAA2CQ,IAA3C,CAAgDC,IAAI,IAAIA,IAAxD,EAA8DC,KAA9D,CAAoEC,GAAG,IAAIA,GAA3E,CADR;;AAGAR,eAAe,CAACc,kBAAhB,GAAqC,OAAOZ,KAAP,EAAcC,QAAd,KACpC,MAAMR,IAAI,CAACoB,8BAAL,CAAoCb,KAApC,EAA2CC,QAA3C,EAAqDE,IAArD,CAA0DC,IAAI,IAAIA,IAAlE,EAAwEC,KAAxE,CAA8EC,GAAG,IAAIA,GAArF,CADP;;AAGAR,eAAe,CAACgB,YAAhB,GAA+B,OAAOC,aAAP,KAC5B,MAAMnB,EAAE,CAACoB,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BF,aAA3B,EAA0CG,GAA1C,GAAgDf,IAAhD,CAAsDc,GAAD,IAAS;AAEtE,SAAOA,GAAG,CAACE,IAAJ,EAAP;AACI,CAHI,CADT;;AAMArB,eAAe,CAACsB,eAAhB,GAAkC,MAAOL,aAAP,IAAyB;AACtD,QAAMnB,EAAE,CAACoB,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BF,aAA3B,EAA0CM,GAA1C,CAA8C;AAC3CC,IAAAA,OAAO,EAAEP,aADkC;AAE3CQ,IAAAA,IAAI,EAAE,EAFqC;AAG1CC,IAAAA,WAAW,EAAE,EAH6B;AAI1CC,IAAAA,MAAM,EAAE,EAJkC;AAK1CC,IAAAA,QAAQ,EAAC,EALiC;AAM1CC,IAAAA,YAAY,EAAE,EAN4B;AAO3CC,IAAAA,IAAI,EAAE,MAPqC;AAQ3CC,IAAAA,IAAI,EAAE,EARqC;AAS3CC,IAAAA,YAAY,EAAG,8BAA6BjC,GAAG,CAACkB,aAAD,CAAgB;AATpB,GAA9C,EAUIV,KAVJ,CAUU,UAAS0B,KAAT,EAAgB;AACzBC,IAAAA,OAAO,CAACD,KAAR,CAAc,yBAAd,EAAyCA,KAAzC;AACE,GAZH,CAAN;AAaJ,CAdD;;AAiBA,eAAejC,eAAf","sourcesContent":["import { auth, googleAuthProvider, facebookAuthProvider, db } from 'auth/FirebaseAuth';\nimport md5 from 'md5'\n\nconst FirebaseService = {}\n\nFirebaseService.signInEmailRequest = async (email, password) =>\n\tawait auth.signInWithEmailAndPassword(email, password).then(user => user).catch(err => err);\n\nFirebaseService.signInEmailRequest = async (email, password) =>\n  await auth.signInWithEmailAndPassword(email, password).then(user => user).catch(err => err);\n\t\t\nFirebaseService.signOutRequest = async () =>\n\tawait auth.signOut().then(user => user).catch(err => err);\n\nFirebaseService.signInGoogleRequest = async () =>\n  await auth.signInWithPopup(googleAuthProvider).then(user => user).catch(err => err);\n\nFirebaseService.signInFacebookRequest = async () =>\n  await auth.signInWithPopup(facebookAuthProvider).then(user => user).catch(err => err);\n\nFirebaseService.signUpEmailRequest = async (email, password) =>\n\tawait auth.createUserWithEmailAndPassword(email, password).then(user => user).catch(err => err);\t\n\nFirebaseService.dbGetAccount = async (walletAddress) => \n   await db.collection(\"users\").doc(walletAddress).get().then((doc) => {\n            \n\treturn doc.data()\n    });\n\nFirebaseService.dbCreateAccount = async (walletAddress) => {\n     await db.collection(\"users\").doc(walletAddress).set({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddress: walletAddress,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: '',\n\t\t \t\t\t\t\t\t\t\t\t\t\t\tnationality: '',\n\t\t \t\t\t\t\t\t\t\t\t\t\t\tgender: '',\n\t\t \t\t\t\t\t\t\t\t\t\t\t\tdivision:'',\n\t\t \t\t\t\t\t\t\t\t\t\t\t\trankingPoint: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trole: 'User',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tTeam: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tprofileImage: `http://gravatar.com/avatar/${md5(walletAddress)}?d=identicon`,\n\t\t\t\t\t\t\t\t\t\t\t\t}).catch(function(error) {\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.error(\"Error adding document: \", error);\n\t\t\t\t\t\t\t\t\t\t\t\t\t});\n};\n\n\t\nexport default FirebaseService"]},"metadata":{},"sourceType":"module"}