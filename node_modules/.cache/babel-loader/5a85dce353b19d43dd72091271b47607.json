{"ast":null,"code":"import { all, takeEvery, put, fork, call } from 'redux-saga/effects';\nimport { AUTH_TOKEN, WALLET_TYPE, SIGNIN, SIGNIN_WALLET, SIGNOUT, SIGNUP, SIGNIN_WITH_GOOGLE, SIGNIN_WITH_FACEBOOK } from '../constants/Auth';\nimport { showAuthMessage, authenticated, signOutSuccess, signUpSuccess, signInWithGoogleAuthenticated, signInWithFacebookAuthenticated } from \"../actions/Auth\";\nimport { rsf } from 'auth/FirebaseAuth';\nimport FirebaseService from 'services/FirebaseService';\nexport function* signInWithFBEmail() {\n  yield takeEvery(SIGNIN, function* ({\n    payload\n  }) {\n    const {\n      email,\n      password\n    } = payload;\n\n    try {\n      const user = yield call(FirebaseService.signInEmailRequest, email, password);\n\n      if (user.message) {\n        yield put(showAuthMessage(user.message));\n      } else {\n        localStorage.setItem(AUTH_TOKEN, user.user.uid);\n        yield put(authenticated(user.user.uid));\n      }\n    } catch (err) {\n      yield put(showAuthMessage(err));\n    }\n  });\n}\nexport function* signInWithWalletSaga() {\n  yield takeEvery(SIGNIN_WALLET, function* ({\n    payload\n  }) {\n    const {\n      walletAddress,\n      walletType\n    } = payload;\n\n    try {\n      const userInfo = yield call(FirebaseService.dbGetAccount, walletAddress);\n\n      if (userInfo) {\n        localStorage.setItem(AUTH_TOKEN, walletAddress);\n        localStorage.setItem(WALLET_TYPE, walletType);\n        yield put(authenticated(walletAddress));\n      } else {\n        yield call(FirebaseService.dbCreateAccount, walletAddress, walletType);\n        localStorage.setItem(AUTH_TOKEN, walletAddress);\n        localStorage.setItem(WALLET_TYPE, walletType);\n        yield put(authenticated(walletAddress));\n      }\n    } catch (err) {\n      yield put(showAuthMessage(err));\n    }\n  });\n} // export function* signInWithWalletSaga() {\n//   yield takeEvery(SIGNIN_WALLET, function* ({payload}) {\n// \t\tconst {walletAddress, walletType} = payload;\n// \t    try{\n// \t\t\tconst userInfoSnapshot = yield call(rsf.firestore.getDocument, `users/${walletAddress}`);\n//   \t\t    const userInfo = userInfoSnapshot.data();\n// \t\t\tif (userInfo){\n// \t\t\t\tlocalStorage.setItem(AUTH_TOKEN, walletAddress);\n// \t\t\t\tlocalStorage.setItem(WALLET_TYPE, walletType);\n// \t\t\t\tyield put(authenticated(walletAddress));\n// \t\t\t}else{\n// \t\t\t\tyield call(FirebaseService.dbCreateAccount, walletAddress, walletType);\n// \t\t\t\tlocalStorage.setItem(AUTH_TOKEN, walletAddress);\n// \t\t\t\tlocalStorage.setItem(WALLET_TYPE, walletType);\n// \t\t\t\tyield put(authenticated(walletAddress));\n// \t\t\t}\n// \t\t}catch(err){\n// \t\t\tyield put(showAuthMessage(err));\n// \t\t}    \n// \t});\n// }\n\nexport function* signOut() {\n  yield takeEvery(SIGNOUT, function* () {\n    try {\n      localStorage.removeItem(AUTH_TOKEN);\n      localStorage.removeItem(WALLET_TYPE);\n      yield put(signOutSuccess());\n    } catch (err) {\n      yield put(showAuthMessage(err));\n    }\n  });\n}\nexport function* signUpWithFBEmail() {\n  yield takeEvery(SIGNUP, function* ({\n    payload\n  }) {\n    const {\n      email,\n      password\n    } = payload;\n\n    try {\n      const user = yield call(FirebaseService.signUpEmailRequest, email, password);\n\n      if (user.message) {\n        yield put(showAuthMessage(user.message));\n      } else {\n        localStorage.setItem(AUTH_TOKEN, user.user.uid);\n        yield put(signUpSuccess(user.user.uid));\n      }\n    } catch (error) {\n      yield put(showAuthMessage(error));\n    }\n  });\n}\nexport function* signInWithFBGoogle() {\n  yield takeEvery(SIGNIN_WITH_GOOGLE, function* () {\n    try {\n      const user = yield call(FirebaseService.signInGoogleRequest);\n\n      if (user.message) {\n        yield put(showAuthMessage(user.message));\n      } else {\n        localStorage.setItem(AUTH_TOKEN, user.user.uid);\n        yield put(signInWithGoogleAuthenticated(user.user.uid));\n      }\n    } catch (error) {\n      yield put(showAuthMessage(error));\n    }\n  });\n}\nexport function* signInWithFacebook() {\n  yield takeEvery(SIGNIN_WITH_FACEBOOK, function* () {\n    try {\n      const user = yield call(FirebaseService.signInFacebookRequest);\n\n      if (user.message) {\n        yield put(showAuthMessage(user.message));\n      } else {\n        localStorage.setItem(AUTH_TOKEN, user.user.uid);\n        yield put(signInWithFacebookAuthenticated(user.user.uid));\n      }\n    } catch (error) {\n      yield put(showAuthMessage(error));\n    }\n  });\n}\nexport default function* rootSaga() {\n  yield all([fork(signInWithFBEmail), fork(signInWithWalletSaga), fork(signOut), fork(signUpWithFBEmail), fork(signInWithFBGoogle), fork(signInWithFacebook)]);\n}","map":{"version":3,"sources":["/workspace/tation_authByWallet/src/redux/sagas/Auth.js"],"names":["all","takeEvery","put","fork","call","AUTH_TOKEN","WALLET_TYPE","SIGNIN","SIGNIN_WALLET","SIGNOUT","SIGNUP","SIGNIN_WITH_GOOGLE","SIGNIN_WITH_FACEBOOK","showAuthMessage","authenticated","signOutSuccess","signUpSuccess","signInWithGoogleAuthenticated","signInWithFacebookAuthenticated","rsf","FirebaseService","signInWithFBEmail","payload","email","password","user","signInEmailRequest","message","localStorage","setItem","uid","err","signInWithWalletSaga","walletAddress","walletType","userInfo","dbGetAccount","dbCreateAccount","signOut","removeItem","signUpWithFBEmail","signUpEmailRequest","error","signInWithFBGoogle","signInGoogleRequest","signInWithFacebook","signInFacebookRequest","rootSaga"],"mappings":"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","sourcesContent":["import { all, takeEvery, put, fork, call } from 'redux-saga/effects';\nimport {\n\tAUTH_TOKEN,\n\tWALLET_TYPE,\n\tSIGNIN,\n\tSIGNIN_WALLET,\n\tSIGNOUT,\n\tSIGNUP,\n\tSIGNIN_WITH_GOOGLE,\n\tSIGNIN_WITH_FACEBOOK\n} from '../constants/Auth';\nimport {\n\tshowAuthMessage,\n\tauthenticated,\n\tsignOutSuccess,\n\tsignUpSuccess,\n\tsignInWithGoogleAuthenticated,\n\tsignInWithFacebookAuthenticated\n} from \"../actions/Auth\";\n\nimport {rsf} from 'auth/FirebaseAuth'\nimport FirebaseService from 'services/FirebaseService'\n\nexport function* signInWithFBEmail() {\n  yield takeEvery(SIGNIN, function* ({payload}) {\n\t\tconst {email, password} = payload;\n\t\ttry {\n\t\t\tconst user = yield call(FirebaseService.signInEmailRequest, email, password);\n\t\t\tif (user.message) {\n\t\t\t\tyield put(showAuthMessage(user.message));\n\t\t\t} else {\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\n\t\t\t\tyield put(authenticated(user.user.uid));\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tyield put(showAuthMessage(err));\n\t\t}\n\t});\n}\n\nexport function* signInWithWalletSaga() {\n  yield takeEvery(SIGNIN_WALLET, function* ({payload}) {\n\t\tconst {walletAddress, walletType} = payload;\n\n\t    try{\n\t\t\tconst userInfo = yield call(FirebaseService.dbGetAccount, walletAddress);\n\t\t\t\n\t\t\tif (userInfo){\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, walletAddress);\n\t\t\t\tlocalStorage.setItem(WALLET_TYPE, walletType);\n\t\t\t\tyield put(authenticated(walletAddress));\n\t\t\t}else{\n\t\t\t\tyield call(FirebaseService.dbCreateAccount, walletAddress, walletType);\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, walletAddress);\n\t\t\t\tlocalStorage.setItem(WALLET_TYPE, walletType);\n\t\t\t\tyield put(authenticated(walletAddress));\n\t\t\t}\n\t\t\t\n\t\t}catch(err){\n\t\t\tyield put(showAuthMessage(err));\n\t\t}    \n\t});\n}\n\n// export function* signInWithWalletSaga() {\n//   yield takeEvery(SIGNIN_WALLET, function* ({payload}) {\n// \t\tconst {walletAddress, walletType} = payload;\n\n// \t    try{\n// \t\t\tconst userInfoSnapshot = yield call(rsf.firestore.getDocument, `users/${walletAddress}`);\n//   \t\t    const userInfo = userInfoSnapshot.data();\n\t\t\t\n// \t\t\tif (userInfo){\n// \t\t\t\tlocalStorage.setItem(AUTH_TOKEN, walletAddress);\n// \t\t\t\tlocalStorage.setItem(WALLET_TYPE, walletType);\n// \t\t\t\tyield put(authenticated(walletAddress));\n// \t\t\t}else{\n// \t\t\t\tyield call(FirebaseService.dbCreateAccount, walletAddress, walletType);\n// \t\t\t\tlocalStorage.setItem(AUTH_TOKEN, walletAddress);\n// \t\t\t\tlocalStorage.setItem(WALLET_TYPE, walletType);\n// \t\t\t\tyield put(authenticated(walletAddress));\n// \t\t\t}\n\t\t\t\n// \t\t}catch(err){\n// \t\t\tyield put(showAuthMessage(err));\n// \t\t}    \n// \t});\n// }\n\nexport function* signOut() {\n  yield takeEvery(SIGNOUT, function* () {\n\t\ttry {\n\t\t\tlocalStorage.removeItem(AUTH_TOKEN);\n\t\t\tlocalStorage.removeItem(WALLET_TYPE);\n\t\t\tyield put(signOutSuccess());\n\n\t\t} catch (err) {\n\t\t\tyield put(showAuthMessage(err));\n\t\t}\n\t});\n}\n\nexport function* signUpWithFBEmail() {\n  yield takeEvery(SIGNUP, function* ({payload}) {\n\t\tconst {email, password} = payload;\n\t\ttry {\n\t\t\tconst user = yield call(FirebaseService.signUpEmailRequest, email, password);\n\t\t\tif (user.message) {\n\t\t\t\tyield put(showAuthMessage(user.message));\n\t\t\t} else {\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\n\t\t\t\tyield put(signUpSuccess(user.user.uid));\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tyield put(showAuthMessage(error));\n\t\t}\n\t}\n\t);\n}\n\nexport function* signInWithFBGoogle() {\n  yield takeEvery(SIGNIN_WITH_GOOGLE, function* () {\n\t\ttry {\n\t\t\tconst user = yield call(FirebaseService.signInGoogleRequest);\n\t\t\tif (user.message) {\n\t\t\t\tyield put(showAuthMessage(user.message));\n\t\t\t} else {\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\n\t\t\t\tyield put(signInWithGoogleAuthenticated(user.user.uid));\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tyield put(showAuthMessage(error));\n\t\t}\n\t});\n}\n\nexport function* signInWithFacebook() {\n  yield takeEvery(SIGNIN_WITH_FACEBOOK, function* () {\n\t\ttry {\n\t\t\tconst user = yield call(FirebaseService.signInFacebookRequest);\n\t\t\tif (user.message) {\n\t\t\t\tyield put(showAuthMessage(user.message));\n\t\t\t} else {\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\n\t\t\t\tyield put(signInWithFacebookAuthenticated(user.user.uid));\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tyield put(showAuthMessage(error));\n\t\t}\n\t});\n}\n\nexport default function* rootSaga() {\n  yield all([\n\t\tfork(signInWithFBEmail),\n\t    fork(signInWithWalletSaga),\n\t\tfork(signOut),\n\t\tfork(signUpWithFBEmail),\n\t\tfork(signInWithFBGoogle),\n\t\tfork(signInWithFacebook)\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}